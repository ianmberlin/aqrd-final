----------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  S:\dan\Paper - Forbes\ReplicationPackage\data\../log/linear_prob_regressions29 Nov 2021.log
  log type:  text
 opened on:  29 Nov 2021, 15:10:44

. 
. ///SET LOCALS AND GLOBALS
> local postyear = 2001

. ///     Set controls to empty set if no controls:
> *local controls pop_change gdp_change
. *local controls c.pop#1.old pop
. local controls

. *local drop_condition "drop if stock==0"
. local drop_condition "" 

. *local wealth logwealth
. local wealth wealth_normalized

. global BuildData "no"

. global run2D "no"

. global run3D "no"

. global runINDIV "no"

. global runMOVERS "no"

. global runCB "yes"

. global runCOUNTS_BY_STATE "no"

. 
. 
. if "$BuildData" == "yes" {
. 
. *set haverdir M:/Haver/DLX/DATA
. set haverdir C:\DLX\DATA
. 
. //Import state GDP data and create GDP change variable
. use "stata_data\gdp_inst.dta", clear 
. rename state abbr
. xtset fips year, yearly
. g gdp_change = 100*log(gdp-L1.gdp)
. tempfile stateGDP
. save `stateGDP'
. 
. //Import EI and Total tax revenues by state and year
. use "stata_data/EI_Tax.dta", clear
. rename Year year
. destring Total_Taxes, replace ignore(",")
. tempfile EI_Tax
. save `EI_Tax'
. 
. //Import population data and create population change variable
. import haver ??rbt@uspop, tvar(year) clear
. describe *uspop, varlist
. 
. foreach var in `r(varlist)' {
  2.         local tmp = strupper(substr("`var'", 1, 2))
  3.         di "`tmp'"
  4.         rename `var' pop`tmp'
  5. }
. 
. drop popC1 popC2 popC3 popC4 popC5 popC6 popC7 popC8 popC9
. drop popR1 popR2 popR3 popR4 
. drop popDC popPR
. drop if year < 1981
. reshape long pop, i(year) j(state) string
. rename state abbr
. egen id = group(abbr)
. xtset id year, yearly
. g pop_change = 100*log(pop-L1.pop)
. drop if year==1981
. 
. 
. /// ENTER EI INDICATOR
> gen EI = 0
. 
. /// From Conway & Rork (2004 NTJ), Table 1:
> replace EI = 1 if inlist(abbr,"AK","AL","GA","FL","AR","NV")==0 //ALL BUT 6 STATES HAD EI BEYOND PICK-UP TAX PRIOR TO 1976
. replace EI = 0 if abbr=="NM" & year>=1976
. replace EI = 0 if abbr=="UT" & year>=1977
. replace EI = 0 if abbr=="ND" & year>=1979
. replace EI = 0 if inlist(abbr,"AZ","VA","CO","VT") & year>=1980
. replace EI = 0 if abbr=="MO" & year>=1981
. replace EI = 0 if inlist(abbr,"CA","WA") & year>=1982
. replace EI = 0 if inlist(abbr,"IL","WY","TX") & year>=1983
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if inlist(abbr,"MN","ME") & year>=1986
. replace EI = 0 if abbr=="OR" & year>=1987
. replace EI = 0 if abbr=="ID" & year>=1988
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if abbr=="RI" & year>=1991
. replace EI = 0 if inlist(abbr,"SC","WI") & year>=1992
. replace EI = 0 if abbr=="MI" & year>=1993
. replace EI = 0 if abbr=="MA" & year>=1997
. *replace EI = 0 if abbr=="KS" & year>=1998 //this says KS has estate tax continuing after 1998 when inheritance tax was repealed: http
> s://www.ksrevenue.org/taxnotices/notice10-07.pdf
. replace EI = 0 if inlist(abbr,"DE","NC") & year>=1999
. replace EI = 0 if inlist(abbr,"MS", "NY") & year>=2000 //from Conway-Rork. Though NY is unclear because of EI with no gift tax: https:
> //www.tax.ny.gov/pit/estate/etidx.htm
. replace EI = 0 if inlist(abbr,"SD","MT") & year>=2001
. 
. //from https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218...says HI replaced stand-alone I tax with pick-up tax in 1
> 983
. replace EI = 0 if abbr=="HI" & year>=1983
. 
. /// Some states from above list reinstated EI tax later on
> replace EI = 1 if abbr=="OR" & year>=2003 //https://olis.leg.state.or.us/liz/2019R1/Downloads/CommitteeMeetingDocument/159041
. replace EI = 1 if abbr=="VT" & year>=2004
. replace EI = 1 if abbr=="RI" & year>=2002 //http://www.tax.ri.gov/forms/2018/Estate/RI-100A_2002-2014_m2018.pdf
. replace EI = 1 if abbr=="DE" & inrange(year,2009,2017)
. replace EI = 1 if abbr=="IL" & year>=2009
. replace EI = 1 if abbr=="HI" & year>=2010 //https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218
. replace EI = 1 if abbr=="NC" & year>=2002
. replace EI = 1 if abbr=="WA" & year>=2005 //(https://dor.wa.gov/sites/default/files/legacy/Docs/reports/2010/Tax_Reference_2010/06taxh
> istory.pdf)
. 
. replace EI = 1 if abbr=="WI" & inrange(year,2001,2007) //pick-up tax kept after EGTRRA, then repealed after 2007. https://www.wisbar.o
> rg/newspublications/wisconsinlawyer/pages/Article.aspx?Volume=80&Issue=12&ArticleID=1396
. replace EI = 1 if abbr=="VA" & inrange(year,2001,2006) //pick-up tax kept after EGTRRA, then repealed after 2006. https://www.mcplegal
> .com/practice-areas/trusts-estate-planning/taxes/
. replace EI = 1 if abbr=="ME" & year>=2013 //from MN study and verified at https://www.maine.gov/revenue/incomeestate/estate/index.htm
. replace EI = 1 if abbr=="MA" & year>=2001 //from https://www.mass.gov/guides/a-guide-to-estate-taxes
. replace EI = 1 if abbr=="MN" & year>=2001
. 
. replace EI = 0 if abbr=="KS" & year>2009 //KS estate tax repealed after 2009: https://www.ksrevenue.org/taxnotices/notice10-07.pdf
. 
. //NY: from https://www.tax.ny.gov/pit/estate/etidx.htm and http://riker.com/publications/significant-new-york-tax-legislation-replaces
> -current-estate-tax-with-a-pic
. //It seems NY replaced their EI tax with a pick-up tax in 2000 and they repealed their gift tax. Hence, one could avoid EI taxes by gi
> ving gifts before death. In April 2014, they brought back the gift tax.
. replace EI = 1 if abbr=="NY" & /*year>=2001*/ year>2014
. 
. ***************** CT PUT $20M CAP ON ESTATE TAX PAYMENT STARTING IN 2016 (REDUCED TO $15M IN 2019) ***************
. ***************** NOTE $20M WOULD BE THE ET BILL FOR A CT ESTATE WORTH $323M ($20M/(12%*(8.25/16)))
. ***************** ALSO NOTE THAT $20M ET BILL ON $1B CT ESTATE EQUATE TO ET RATE OF 2%...SO SMALL BUT NON-TRIVIAL
. ***************** WE TREAT CT HAS CONTINUING TO HAVE ET AFTER 2015. BUT LATER SHOW RESULTS ROBUST TO DROPPING CT.
. *replace EI = 0 if abbr=="CT" & year>=2016  //https://www.cga.ct.gov/2017/ACT/pa/2017PA-00002-R00SB-01502SS1-PA.htm
. 
. /// More recent repeals (from MN study)
> replace EI = 0 if inlist(abbr,"NJ") & year>=2018
. replace EI = 0 if inlist(abbr,"NC","OH") & year>=2013
. replace EI = 0 if abbr=="OK" & year>=2010               //found online
. 
. /// Dealing with Inheritance-tax-only cases, which all have low or zero rates for lineal heirs (and ~16% for non-lineal heirs). 
> //B&S says IA, KY, and NJ had I tax (as of 1998) only on collateral heirs. I confirmed this is true post-98 as well (see Michael 2018)
> .
. //NE repealed its estate tax in 2007. It retained an inheritance tax but with a rate on lineal heirs (kids) of just 1%. EI taxes/gdp p
> lummeted after 2007
. //NH had an I tax for death before 2003: https://www.revenue.nh.gov/faq/inheritance-estate.htm
. //In 2008, LA repealed its I tax which was a pick-up tax that had never been coupled to fed credit; deaths after 2004 not subject to t
> ax 
. //In 2012, TN I tax was phased out to be fully repealed by 2016.
. //The IN I tax is being phased out from 2013-2022 by 10% each year. Lineal heirs have low rate.
. 
. // NJ had an estate tax in addition to I tax up until 2018: https://www.state.nj.us/treasury/taxation/inheritance-estate/tax-rates.sht
> ml
. *replace EI = 0 if inlist(abbr,"NJ","IA","KY","NE","NH","LA","TN","IN")
. replace EI = 0 if inlist(abbr,"IA","KY","NE","NH","LA","TN","IN")
. gen Ionly = 0
. *replace Ionly = 1 if inlist(abbr,"NJ","IA","KY") | (abbr=="NE" & year>=2007) | (abbr=="NH" & year<2003) | (abbr=="LA" & year<2008) | 
> (abbr=="TN" & year<2012) | (abbr=="IN" & year<2013)  
. replace Ionly = 1 if inlist(abbr,"IA","KY") | (abbr=="NE" & year>=2007) | (abbr=="NH" & year<2003) | (abbr=="LA" & year<2008) | (abbr=
> ="TN" & year<2012) | (abbr=="IN" & year<2013)  | (abbr=="NJ" & year>=2018)
. 
. // COULD CHANGE PA TO I-ONLY STATE (SEE MICHAEL 2018 ). It is unique among I-only states in having tax (4.5%) on lineal heirs (and 15%
>  on other heirs)...so more similar to ET.
. // at least check into robustness of this choice
. 
. // Our baseline counts these I taxes as EI taxes because EI_Tax/gdp tends to be high in these cases. Uncomment below to treat I taxes 
> as EI=0
. *replace EI = 1 if Ionly==1
. 
. levelsof abbr if EI==1 & year==2000, local(temp)
. levelsof abbr if EI==1 & year==2001, local(temp)
. levelsof abbr if EI==1 & year==2017, local(temp)
. *pause
. 
. /// ENTER STATUTORY ET RATES AND THEN COMPUTE COMBINED FED+STATE ET RATE FOR EACH STATE-YEAR
> gen EIrate_state = 0
. *replace EIrate_state = 0.16*EI if inlist(abbr,"OR","OK","KS","MN","WI","IL","OH","NC") | inlist(abbr,"VA","MD","DE","PA","NY","RI","M
> A","VT")
. replace EIrate_state = 0.16*EI if inlist(abbr,"NJ","OR","OK","KS","MN","WI","IL","OH","NC") | inlist(abbr,"VA","MD","DE","PA","NY","RI
> ","MA","VT")
. replace EIrate_state = 0.157*EI if abbr=="HI"
. replace EIrate_state = 0.12*EI if abbr=="ME"
. replace EIrate_state = 0.20*EI if abbr=="WA"
. 
. replace EIrate_state = 0.16*EI if abbr=="CT" & year<2010
. replace EIrate_state = 0.12*EI if abbr=="CT" & year>=2010
. replace EIrate_state = 0.02*EI if abbr=="CT" & inrange(year,2016,2018) //implied ET rate on $1B estate given $20M max tax
. replace EIrate_state = 0.015*EI if abbr=="CT" & year>=2019 //implied ET rate on $1B estate given $15M max tax
. 
. *pause
. 
. 
. /// Federal top ET rate by year (https://www.sparrowcapital.com/resource-center/estate/a-brief-history-of-estate-taxes)
> gen EIrate_fed = .70 if year<1982
. replace EIrate_fed = .65 if inrange(year,1982,1982) 
. replace EIrate_fed = .60 if inrange(year,1983,1983) 
. replace EIrate_fed = .55 if inrange(year,1984,2001) 
. replace EIrate_fed = .50 if inrange(year,2002,2002)
. replace EIrate_fed = .49 if inrange(year,2003,2003)
. replace EIrate_fed = .48 if inrange(year,2004,2004)
. replace EIrate_fed = .47 if inrange(year,2005,2005)
. replace EIrate_fed = .46 if inrange(year,2006,2006)
. replace EIrate_fed = .45 if inrange(year,2007,2009)
. replace EIrate_fed = 0 if inrange(year,2010,2010)
. replace EIrate_fed = .35 if inrange(year,2011,2012)
. replace EIrate_fed = .396 if inrange(year,2013,2017)
. replace EIrate_fed = .37 if inrange(year,2018,2019)
. 
. gen EIratecombined = EIrate_state + EIrate_fed - EIrate_state if year<=2001  //full federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .75*EIrate_state if year==2002  //75% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .5*EIrate_state if year==2003  //50% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .25*EIrate_state if year==2004  //25% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed*(1 - EIrate_state) if year>=2005  //federal deduction for state ET
. 
. *replace EIratecombined = EIrate_fed if year<=2001
. *replace EIratecombined = (0.16)*EI + EIrate_fed if year>2001
. 
. save stata_data/popEI.dta, replace
. 
. //Merge in state GDP data
. use "stata_data/EI_Tax_Merged_v2.dta", clear
. 
. rename Year year
. sort year State
. drop if year < 1982
. drop if abbr == "" | abbr == "DC"
. *use "stata_data/Tax_Rate_Merged_2.dta",clear
. merge m:1 abbr year using stata_data/popEI.dta, nogen keepusing(pop_change pop EI Ionly) keep(1 3)
. merge m:1 abbr year using `stateGDP', nogen keepusing(gdp gdp_change) keep(1 3)
. 
. //Relabel variables that will be included in regression
. label variable pop_change "Pop. Change"
. label variable gdp_change "GDP Change"
. label variable EI "ET indicator"
. 
. /// EI tax revenues data
> destring Total_Taxes, replace ignore(",")
. gen EIshare = EI_Tax/Total_Taxes
. 
. //Import annual CPI-U data
. preserve
. import haver cpiuann@usecon, tvar(year) clear
. rename cpiuann cpi
. replace cpi = cpi/245.120  //re-base cpi to be 1 in 2017
. tempfile cpi
. save `cpi'
. restore
. merge m:1 year using `cpi', nogen keep(1 3)
. 
. // Dropping observations that are not reported, out of the country, or Washington D.C.
. drop if State == "Washington DC"
. drop if State == ""
. drop if Name == ""
. 
. //Generate average
. g avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. 
. glevelsof abbr, local(state)
. 
. drop if Name == "Henry Earl Singleton" & year == 1988 & ourrank == . // Keeping higher ranked observation
. 
. //Adding 2 to the younger family members with the same name in order to be able to differentiate
. duplicates tag Name year, gen(tag)
. g young_man=0
. sort year Name Age_num
. replace young_man = 1 if Name[_n]==Name[_n+1] & year[_n]==year[_n+1] & Age_num[_n]!=Age_num[_n+1] & tag==1
. 
. replace Name = "Charles A Vose 2" if Name == "Charles A Vose" & young_man==1
. replace Name = "Pierre Samuel Du Pont Family" if Name == "Pierre Samuel Du Pont" & family == 1
. replace Name = "Stephen Davidson Betchel 2" if Name == "Stephen Davidson Betchel" & young_man == 1
. replace Name = "Stephen Davidson Betchel Family" if Name == "Stephen Davidson Betchel" & family == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & young_man == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & year >= 1995
. *****I am letting the second occurence of Alice Francis Du Pont Mills in 1994 drop because I did not see two entries in the scanned Fo
> rbes document**********
. replace Name = "Frank Batten 2" if Name == "Frank Batten" & young_man == 1
. replace Name = "Jim Davis 2" if Name == "Jim Davis" & young_man == 1
. replace Name = "Edward Crosby Johnson 2" if Name == "Edward Crosby Johnson" & young_man == 1
. 
. drop tag
. 
. duplicates tag Name year, gen(tag)
. drop if tag~=0  //drops individuals with multiple residences
. drop tag
. tempfile cleaned
. save `cleaned'
. 
. //Relabel some variables
. label variable avg "Top State Personal MTR"
. label variable our_wealthy "Inheritors" 
. label variable state_tax "CIT Rate"
. 
. //Changing name to make it easier to differentiate between family members with same name
. replace Name = "Edward Johnson" if Name == "Edward Crosby Johnson" & year == 2017 & Age_num == 53 
. 
. //Other name fixes
. replace Name = "Oakleigh Blakeman Thorne" if Name=="Oakleigh Blakeman Thome"
. 
. drop stab //redundant with abbr
. 
. //Fix units
. replace our_wealthy = 1 if our_wealthy==2
. replace avg = avg/100
. *replace Residence_State = Residence_State*(10^15)
. 
. encode Name, gen(nameid)
. egen stateyear = group(abbr year)
. egen stateyearnameid = group(abbr year nameid)
. 
. /// CLEAN UP THE AGE VARIABLE (Note: there truly was someone who was 101, and the ages for 400 and 800 are for families and are mistak
> es)
> if _rc==0 {
. tab Age
. replace Age_num = 25 if Age == "20s"
. replace Age_num = 35 if Age == "30s"
. replace Age_num = 45 if Age == "40s"
. replace Age_num = 55 if inlist(Age,"50s",">51")
. replace Age_num = 65 if Age == "60s"
. replace Age_num = 75 if Age == "70s"
. replace Age_num = 85 if Age == "80s"
. replace Age_num = 95 if Age == "90s"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 78 if Age == "late 70s"
. replace Age_num = 88 if Age == "late 80s"
. replace Age_num = 50 if Age == "near 50"
. replace Age_num = 70 if Age == "near 70"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 83 if Age == "83, 79 "
. replace Age_num = 74 if Age == "74, 75 "
. replace Age_num = 65 if Age == "65, 63 "
. replace Age_num = real(subinstr(Age,",","",.))
. replace Age_num = real(subinstr(Age,"*","",.))
. replace Age_num = real(subinstr(Age,"'","",.))
. replace Age_num = real(subinstr(Age,"`","",.))
. replace Age_num = real(subinstr(Age,"_","",.))
. replace Age_num = real(subinstr(Age,"-","",.))
. replace Age_num = real(subinstr(Age," ","",.))
. replace Age_num = real(subinstr(Age,"Q","0",.))
. replace Age_num = real(subinstr(Age,">","",.))
. replace Age_num = real(subinstr(Age,"a","0",.))
. replace Age_num = real(subinstr(Age,".","",.))
. *replace Age_num = 100 if inlist(Age,"dec.","deceased","Deceased")
. 
. //Fixing Forbes age issues (Dan)
. replace Age_num = 77 if Name == "John Hammond Krehbiel Jr" & year == 1983
. replace Age_num = 33 if Name == "Swanee Hunt" & year == 1983
. replace Age_num = (1998 - 1945) if year == 1998 & Name == "Gary Tharaldson"
. replace Age_num = (1997 - 1945) if year == 1997 & Name == "Gary Tharaldson"
. replace Age_num = 85 if year==2015 & Name == "Warren Edward Buffett"
. replace Age_num = 60 if year==2015 & Name == "William Henry Gates"
. replace Age_num = 95 if year==1994 & Name == "Katsumasa (Roy) Sakioka"
. 
. //Fixing Forbes age issues (Amber)
. replace Age_num = 51 if Name == "Abigail Johnson" & year == 2012
. replace Age_num = . if Name == "Abigail Johnson" & (year >= 2013 | year < 2012)
. 
. replace Age_num = 58 if Name == "Adolph Alfred Taubman" & year == 1982
. replace Age_num = . if Name == "Adolph Alfred Taubman" & year >= 1983
. 
. replace Age_num = 48 if Name == "Alan C Ashton" & year == 1990 
. replace Age_num = . if Name == "Alan C Ashton" & year > 1990
. 
. replace Age_num = 82 if Name == "Alan Gerry" & year == 2011
. replace Age_num = . if Name == "Alan Gerry" & year > 2011
. 
. replace Age_num = 66 if Name == "Albert Lee Ueltschi" & year == 1983
. 
. replace Age_num = 64 if Name == "Alberto Vilar" & year == 2004
. 
. replace Age_num = 72 if Name == "Zachary Fisher" & year == 1982
. replace Age_num = . if Name == "Zachary Fisher" & year > 1982
. 
. replace Age_num = 44 if Name == "Winthrop Paul Rockefeller" & year == 1992
. replace Age_num = . if Name == "Winthrop Paul Rockefeller" & year > 1992
. 
. replace Age_num = 46 if Name == "Winnie Johnson-Marquart" & year == 2004
. replace Age_num = . if Name == "Winnie Johnson-Marquart" & year > 2004
. 
. replace Age_num = 62 if Name == "Alec Gores" & year == 2015
. 
. replace Age_num = 38 if Name == "Alejandro Santo Domingo" & year == 2015
. replace Age_num = . if Name == "Alejandro Santo Domingo" & year > 2015
. 
. replace Age_num = 66 if Name == "Alice L Walton" & year == 2015
. replace Age_num = . if Name == "Alice L Walton" & year > 2015
. 
. replace Age_num = 74 if Name == "Allan Goldman" & year == 2016
. 
. replace Age_num = 81 if Name == "Amos Barr Hostetter" & year == 2017
. replace Age_num = . if Name == "Amos Barr Hostetter" & year < 2017
. 
. replace Age_num = 44 if Name == "Amy Wyss" & year == 2015
. replace Age_num = 45 if Name == "Amy Wyss" & year == 2016
. 
. replace Age_num = 37 if Name == "Andres Santo Domingo" & year == 2015
. 
. replace Age_num = 62 if Name == "Andrew Beal" & year == 2014
. replace Age_num = . if Name == "Andrew Beal" & year > 2014
. 
. replace Age_num = 84 if Name == "Andrew Jerrold Perenchio" & year == 2015
. replace Age_num = 85 if Name == "Andrew Jerrold Perenchio" & year == 2016
. 
. replace Age_num = 59 if Name == "Anita Zucker" & year == 2010 //Overwrote Forbes age
. replace Age_num = . if Name == "Anita Zucker" & year > 2010
. 
. replace Age_num = . if Name == "Ann Walton Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Anne Cox Chambers" & year > 1982
. 
. replace Age_num = 80 if Name == "Anne Gittinger" & year == 2015
. replace Age_num = . if Name == "Anne Gittinger" & year < 2015
. 
. replace Age_num = 54 if Name == "Anthony Pritzker" & year == 2015
. replace Age_num = . if Name == "Anthony Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "Archie Aldis Emmerson" & year < 2017
. 
. replace Age_num = . if Name == "Arthur M Blank" & year < 2017
. 
. replace Age_num = . if Name == "Arturo Moreno" & year < 2017
. 
. replace Age_num = . if Name == "Austen S Cargill" & year < 2017
. 
. replace Age_num = 69 if Name == "Barbara Carlson Gage" & year == 2011 //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year > 2011  //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year < 2011  //Overwrote Forbes age
. 
. replace Age_num = . if Name == "Barry Diller" & year < 2017
. 
. replace Age_num = . if Name == "Bennett Dorrance" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Francis Saul" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Marcus" & year < 2017
. 
. replace Age_num = . if Name == "Bharat Desai" & year < 2016
. 
. replace Age_num = . if Name == "Bill Haslam" & year < 2017
. 
. replace Age_num = . if Name == "Blase Thomas Golisano" & year < 2017
. 
. replace Age_num = . if Name == "Bob Parsons" & year < 2017
. 
. replace Age_num = . if Name == "Bobby Murphy" & year < 2017
. 
. replace Age_num = . if Name == "Brad Kelley" & year < 2017
. 
. replace Age_num = . if Name == "Bradley Wayne Hughes" & year < 2017
. 
. replace Age_num = . if Name == "Brian Acton" & year < 2017
. 
. replace Age_num = . if Name == "Brian Chesky" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Halle" & year < 2016
. 
. replace Age_num = . if Name == "Bruce Karsh" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Kovner" & year < 2017
. 
. replace Age_num = . if Name == "Bubba Cathy" & year < 2017
. 
. replace Age_num = . if Name == "C Dean Metropoulos" & year < 2017
. 
. replace Age_num = . if Name == "Carl Celian Icahn" & year < 2017
. 
. replace Age_num = . if Name == "Carl Cook" & year < 2017
. 
. replace Age_num = . if Name == "Charles Bartlett Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Charles Butt" & year >= 2014
. 
. replace Age_num = 65 if Name == "Charles Cohen" & year == 2016
. 
. replace Age_num = . if Name == "Charles Ergen" & year < 2017
. 
. replace Age_num = . if Name == "Charles Francis Dolan" & year < 2017
. 
. replace Age_num = . if Name == "Charles R Schwab" & year < 2017
. 
. replace Age_num = . if Name == "Charles de Ganahl Koch" & year < 2017
. 
. replace Age_num = . if Name == "Chase Coleman" & year < 2017
. 
. replace Age_num = . if Name == "Christopher Cline" & year < 2017
. 
. replace Age_num = . if Name == "Christy Walton" & year < 2017
. 
. replace Age_num = . if Name == "Clayton Lee Mathile" & year < 2017
. 
. replace Age_num = . if Name == "Clemmie Dixon Spangler" & year < 2017
. 
. replace Age_num = 66 if Name == "Craig O Mccaw" & year == 2015 //Forbes age overwritten
. 
. replace Age_num = . if Name == "Dagmar Dolby" & year < 2017
. 
. replace Age_num = . if Name == "Dan Cathy" & year < 2017
. 
. replace Age_num = . if Name == "Dan Friedkin" & year < 2017
. 
. replace Age_num = . if Name == "Dan Snyder" & year < 2017
. 
. replace Age_num = . if Name == "Daniel D'Aniello" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Gilbert" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Loeb" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Morton Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Och" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Pritzker" & year < 2017
. 
. replace Age_num = 51 if Name == "Dannine Avara" & year == 2014
. replace Age_num = . if Name == "Dannine Avara" & year > 2014
. 
. replace Age_num = . if Name == "David A Duffield" & year < 2017
. 
. replace Age_num = . if Name == "David Bonderman" & year < 2017
. 
. replace Age_num = 44 if Name == "David Einhorn" & year == 2012
. replace Age_num = . if Name == "David Einhorn" & year > 2012
. 
. replace Age_num = . if Name == "David Filo" & year < 2017
. 
. replace Age_num = . if Name == "David Geffen" & year < 2017
. 
. replace Age_num = . if Name == "David Green" & year < 2017
. 
. replace Age_num = . if Name == "David Hamilton Koch" & year < 2017
. 
. replace Age_num = . if Name == "David Howard Murdock" & year < 2017
. 
. replace Age_num = 101 if Name == "David Rockefeller" & year == 2016
. replace Age_num = 99 if Name == "David Rockefeller" & year == 2014
. replace Age_num = . if Name == "David Rockefeller" & year < 2014
. 
. replace Age_num = . if Name == "David Rubenstein" & year < 2017
. 
. replace Age_num = . if Name == "David Shaw" & year < 2017
. 
. replace Age_num = . if Name == "David Siegel" & year < 2017 & Source == "Hedge Funds"
. 
. replace Age_num = . if Name == "David Sun" & year < 2017
. 
. replace Age_num = . if Name == "David Tepper" & year < 2017
. 
. replace Age_num = . if Name == "David Walentas" & year < 2017
. 
. replace Age_num = 92 if Name == "Dean White" & year == 2015
. 
. replace Age_num = . if Name == "Denise Debartolo York" & year < 2017
. 
. replace Age_num = . if Name == "Dennis Washington" & year < 2017
. 
. replace Age_num = . if Name == "Diane Hendricks" & year < 2017
. 
. replace Age_num = . if Name == "Dirk Edward Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Don Hankey" & year < 2017
. 
. replace Age_num = . if Name == "Donald Edward Newhouse" & year < 2017
. 
. replace Age_num = . if Name == "Donald Leroy Bren" & year < 2017
. 
. replace Age_num = . if Name == "Donald Sterling" & year < 2017
. 
. replace Age_num = . if Name == "Doris Feigenbaum Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Douglas Leone" & year < 2017
. 
. replace Age_num = . if Name == "Dustin Moskovitz" & year < 2017
. 
. replace Age_num = . if Name == "Edward Crosby Johnson" & year < 2016
. 
. replace Age_num = . if Name == "Edward John Debartolo Jr" & year < 2017
. 
. replace Age_num = 53 if Name == "Edward Lampert" & year == 2015
. 
. replace Age_num = . if Name == "Edward Perry Bass" & year < 2017
. 
. replace Age_num = . if Name == "Edward Roski" & year < 2017
. 
. replace Age_num = . if Name == "Eli Broad" & year < 2017
. 
. replace Age_num = 31 if Name == "Elizabeth Holmes" & year == 2015
. 
. replace Age_num = . if Name == "Elon Musk" & year < 2017
. 
. replace Age_num = . if Name == "Enos Stanley Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Eric Schmidt" & year < 2017
. 
. replace Age_num = . if Name == "Evan Spiegel" & year < 2017
. 
. replace Age_num = 43 if Name == "Evan Williams" & year == 2015 //Overwrote Forbes age
. 
. replace Age_num = 87 if Name == "Fayez Shalaby Sarofim" & year == 2015 //Overwrote Forbes age
. replace Age_num = . if Name == "Fayez Shalaby Sarofim" & year < 2015
. 
. replace Age_num = 84 if Name == "Forrest Edward Mars Jr" & year == 2015
. replace Age_num = . if Name == "Forrest Edward Mars Jr" & year < 2015
. 
. replace Age_num = 82 if Name == "Forrest Preston" & year == 2015
. 
. replace Age_num = . if Name == "Frank Fertitta" & year < 2017
. 
. replace Age_num = . if Name == "Frederick Wallace Smith" & year < 2017
. 
. replace Age_num = . if Name == "Gabe Newell" & year < 2017
. 
. replace Age_num = 73 if Name == "Gail Miller" & year == 2015
. replace Age_num = 74 if Name == "Gail Miller" & year == 2016
. 
. replace Age_num = . if Name == "Gary Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Gayle Cook" & year < 2013
. 
. replace Age_num = . if Name == "George B Kaiser" & year < 2017
. 
. replace Age_num = . if Name == "George Bishop" & year < 2017
. 
. replace Age_num = . if Name == "George L Lindemann" & year < 2017
. 
. replace Age_num = . if Name == "George Leon Argyros" & year < 2017
. 
. replace Age_num = . if Name == "George Lucas" & year < 2017
. 
. replace Age_num = . if Name == "George R Roberts" & year < 2017
. 
. replace Age_num = . if Name == "George Soros" & year < 2017
. 
. replace Age_num = . if Name == "Gerald J Ford" & year < 2017
. 
. replace Age_num = . if Name == "Glen Taylor" & year < 2017
. 
. replace Age_num = . if Name == "Glenn Dubin" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Earle Moore" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Peter Getty" & year < 2017
. 
. replace Age_num = . if Name == "Gwendolyn Sontheim Meyer" & year < 2017
. 
. replace Age_num = . if Name == "H Fisk Johnson" & year < 2017
. 
. replace Age_num = . if Name == "H Ty Warner" & year < 2017
. 
. replace Age_num = . if Name == "Haim Saban" & year < 2017
. 
. replace Age_num = 64 if Name == "Hamilton James" & year == 2015
. 
. replace Age_num = . if Name == "Harold Hamm" & year < 2017
. 
. replace Age_num = . if Name == "Harry Stine" & year < 2017
. 
. replace Age_num = . if Name == "Harry Wayne Huizenga" & year < 2017
. 
. replace Age_num = . if Name == "Helen Johnson-Leipold" & year < 2017
. 
. replace Age_num = 97 if Name == "Henry Lea Hillman" & year == 2016
. 
. replace Age_num = . if Name == "Henry Nicholas" & year < 2017
. 
. replace Age_num = . if Name == "Henry R Kravis" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot Jr" & year < 2017
. 
. replace Age_num = . if Name == "Henry Samueli" & year < 2017
. 
. replace Age_num = . if Name == "Herbert Kohler" & year < 2017
. 
. replace Age_num = 88 if Name == "Herbert Louis" & year == 2014
. 
. replace Age_num = . if Name == "Herbert Simon" & year < 2017
. 
. replace Age_num = . if Name == "Howard Marks" & year < 2017
. 
. replace Age_num = . if Name == "Howard Schultz" & year < 2017
. 
. replace Age_num = . if Name == "Igor Olenicoff" & year < 2017
. 
. replace Age_num = 86 if Name == "Imogene Powers Johnson" & year == 2017
. replace Age_num = . if Name == "Imogene Powers Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Ira L Rennert" & year < 2017
. 
. replace Age_num = . if Name == "Irwin Mark Jacobs" & year < 2014
. 
. replace Age_num = . if Name == "Isaac Perlmutter" & year < 2017
. 
. replace Age_num = . if Name == "Israel Englander" & year < 2017
. 
. replace Age_num = . if Name == "J Christopher Reyes" & year < 2017
. 
. replace Age_num = 93 if Name == "Jack Crawford Taylor" & year == 2015
. 
. replace Age_num = . if Name == "Jack Dangermond" & year < 2017
. 
. replace Age_num = . if Name == "Jack Dorsey" & year < 2017
. 
. replace Age_num = . if Name == "Jacqueline Mars" & year < 2017
. 
. replace Age_num = . if Name == "James C France" & year < 2016
. 
. replace Age_num = . if Name == "James Coulter"  & year < 2017
. 
. replace Age_num = . if Name == "James Dinan" & year < 2016
. 
. replace Age_num = . if Name == "James Goodnight" & year < 2017
. 
. replace Age_num = . if Name == "James H Clark" & year < 2017
. 
. replace Age_num = . if Name == "James Irsay" & year < 2017
. 
. replace Age_num = . if Name == "James Jannard" & year < 2017
. 
. replace Age_num = . if Name == "James Leprino" & year < 2017
. 
. replace Age_num = . if Name == "James R Cargill II" & year < 2017
. 
. replace Age_num = . if Name == "James Simons" & year < 2017
. 
. replace Age_num = . if Name == "Jan Koum" & year < 2017
. 
. replace Age_num = . if Name == "Jay Paul" & year < 2017
. 
. replace Age_num = . if Name == "Jay Robert (JB) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jean (Gigi) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Greene" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Sutton" & year < 2017
. 
. replace Age_num = . if Name == "Jeffery Hildebrand" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Lorberbaum" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey P Bezos" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Skoll" & year < 2017
. 
. replace Age_num = . if Name == "Jen-Hsun Huang" & year < 2017
. 
. replace Age_num = . if Name == "Jennifer Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Jeremy Maurice Jacobs" & year < 2017
. 
. replace Age_num = . if Name == "Jerral Wayne Jones" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Speyer" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Yang" & year < 2017
. 
. replace Age_num = . if Name == "Jim Breyer" & year < 2017
. 
. replace Age_num = . if Name == "Jim C Walton" & year < 2017
. 
. replace Age_num = 72 if Name == "Jim Davis" & year == 2015
. 
. replace Age_num = . if Name == "Jim Kennedy" & year < 2017
. 
. replace Age_num = 62 if Name == "Jimmy Haslam" & year == 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year > 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year < 2015
. 
. replace Age_num = . if Name == "Jin Sook & Do Won Chang" & year < 2017
. 
. replace Age_num = . if Name == "Joan Tisch" & year < 2016
. 
. replace Age_num = . if Name == "Joe Gebbia" & year < 2017
. 
. replace Age_num = . if Name == "John Andreas Catsimatidis" & year < 2017
. 
. replace Age_num = . if Name == "John Anthony Sobrato" & year < 2017
. 
. replace Age_num = 44 if Name == "John Arnold" & year == 2017
. replace Age_num = . if Name == "John Arnold" & year < 2017
. 
. replace Age_num = 78 if Name == "John Arrillaga" & year == 2015
. 
. replace Age_num = . if Name == "John C Malone" & year < 2017
. 
. replace Age_num = 90 if Name == "John Farber" & year == 2015
. 
. replace Age_num = . if Name == "John Franklyn Mars" & year < 2017
. 
. replace Age_num = . if Name == "John Henry" & year < 2017 & Source == "Sports"
. 
. replace Age_num = . if Name == "John J Fisher" & year < 2017 
. 
. replace Age_num = 72 if Name == "John Kapoor" & year == 2015
. 
. replace Age_num = . if Name == "John Middleton" & year < 2017
. 
. replace Age_num = . if Name == "John Morris" & year < 2017
. 
. replace Age_num = . if Name == "John Overdeck" & year < 2017
. 
. replace Age_num = . if Name == "John Paul Dejoria" & year < 2017
. 
. replace Age_num = . if Name == "John Paulson" & year < 2017
. 
. replace Age_num = 62 if Name == "John Pritzker" & year == 2015
. replace Age_num = . if Name == "John Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "John R Menard" & year < 2017
. 
. replace Age_num = 67 if Name == "John Sall" & year == 2015
. 
. replace Age_num = . if Name == "John Tu" & year < 2017
. 
. replace Age_num = . if Name == "John W Brown" & year < 2017 
. 
. replace Age_num = . if Name == "Johnelle Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Jon LLoyd Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Jonathan Gray" & year < 2017
. 
. replace Age_num = 59 if Name == "Jonathan Nelson" & year == 2015
. 
. replace Age_num = 66 if Name == "Jorge Perez" & year == 2015
. 
. replace Age_num = . if Name == "Joseph D Mansueto" & year < 2017
. 
. replace Age_num = . if Name == "Joseph Dahr Jamail" & year < 2014
. 
. replace Age_num = . if Name == "Joseph Grendys" & year < 2017
. 
. replace Age_num = 85 if Name == "Josephine Louis" & year == 2015
. 
. replace Age_num = . if Name == "Joshua Harris" & year < 2017
. 
. replace Age_num = . if Name == "Judy Faulkner" & year < 2017
. 
. replace Age_num = . if Name == "Julian Robertson" & year < 2017
. 
. replace Age_num = . if Name == "Julio Mario Santo Domingo" & year < 2017
. 
. replace Age_num = . if Name == "Karen Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Kavitark Ram Shriram" & year < 2017
. 
. replace Age_num = 87 if Name == "Keith Rupert Murdoch" & year == 2017
. replace Age_num = . if Name == "Keith Rupert Murdoch" & year < 2017
. 
. replace Age_num = . if Name == "Kelcy Warren" & year < 2017
. 
. replace Age_num = . if Name == "Ken Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth C Griffin" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth Feld" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth G Langone" & year < 2017
. 
. replace Age_num = . if Name == "Kevin Plank" & year < 2016
. 
. replace Age_num = . if Name == "Kieu Hoang" & year < 2017
. 
. replace Age_num = 97 if Name == "Kirk Kerkorian" & year == 2014
. 
. replace Age_num = . if Name == "L John Doerr" & year < 2017
. 
. replace Age_num = . if Name == "Larry E Page" & year < 2017
. 
. replace Age_num = 46 if Name == "Larry Robbins" & year == 2015
. 
. replace Age_num = 52 if Name == "Laurene Powell Jobs" & year == 2015
. 
. replace Age_num = . if Name == "Lawrence Joseph Ellison" & year < 2017
. 
. replace Age_num = . if Name == "Leandro Rizzuto" & year < 2016
. 
. replace Age_num = . if Name == "Lee Marshall Bass" & year < 2017
. 
. replace Age_num = . if Name == "Leon Black" & year < 2017
. 
. replace Age_num = . if Name == "Leon G Cooperman" & year < 2017
. 
. replace Age_num = 84 if Name == "Leonard Alan Lauder" & year == 2017 //Overwrote Forbes Age
. replace Age_num = . if Name == "Leonard Alan Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Leonard Norman Stern" & year < 2017
. 
. replace Age_num = . if Name == "Leslie Herbert Wexner" & year < 2017
. 
. replace Age_num = . if Name == "Linda Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Lorenzo Fertitta" & year < 2017
. 
. replace Name = "Louis Moore Bacon" if Name == "Lours Moore Bacon" //Name mistake
. replace Age_num = . if Name == "Louis Moore Bacon" & year < 2016
. 
. replace Age_num = . if Name == "Lynn Schusterman" & year < 2017
. 
. replace Age_num = . if Name == "M Jude Reyes" & year < 2017
. 
. replace Age_num = 88 if Name == "Manuel Moroun" & year == 2015
. 
. replace Age_num = . if Name == "Marc Benioff" & year < 2017
. 
. replace Age_num = 55 if Name == "Marc Lasry" & year == 2015
. 
. replace Age_num = 53 if Name == "Marc Rowan" & year == 2015
. 
. replace Age_num = . if Name == "Margaret C Whitman" & year < 2017
. 
. replace Age_num = . if Name == "Marianne Liebmann" & year < 2017
. 
. replace Age_num = . if Name == "Marilyn Carlson Nelson" & year < 2014
. 
. replace Age_num = . if Name == "Mark Cuban" & year < 2017
. 
. replace Age_num = . if Name == "Mark Shoen" & year < 2017
. 
. replace Age_num = . if Name == "Mark Stevens" & year < 2017
. 
. replace Age_num = . if Name == "Mark Walter" & year < 2017
. 
. replace Age_num = . if Name == "Mark Zuckerberg" & year < 2017
. 
. replace Age_num = . if Name == "Martha Robinson Rivers Ingram" & year < 2017
. 
. replace Age_num = . if Name == "Mary Alice Dorrance Malone" & year < 2017
. 
. replace Age_num = . if Name == "Michael Dell" & year < 2017
. 
. replace Age_num = . if Name == "Michael Moritz" & year < 2017
. 
. replace Age_num = . if Name == "Michael Robert Milken" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubens Bloomberg" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubin" & year < 2017
. 
. replace Age_num = . if Name == "Micky Arison" & year < 2017
. 
. replace Age_num = . if Name == "Milane Duncan Frantz" & year < 2017
. 
. replace Age_num = . if Name == "Min H Kao" & year < 2017
. 
. replace Age_num = . if Name == "Mitchell Rales" & year < 2017
. 
. replace Age_num = . if Name == "Mortimer Benjamin Zuckerman" & year < 2017
. 
. replace Age_num = . if Name == "Nancy Walton Laurie" & year < 2017
. 
. replace Age_num = . if Name == "Nathan Blecharczyk" & year < 2017
. 
. replace Age_num = . if Name == "Neil Gary Bluhm" & year < 2017
. 
. replace Age_num = 73 if Name == "Nelson Peltz" & year == 2015
. 
. replace Age_num = 40 if Name == "Nicholas Woodman" & year == 2015
. 
. replace Age_num = . if Name == "Noam Gottesman" & year < 2017
. 
. replace Age_num = . if Name == "Norman Braman" & year < 2017
. 
. replace Age_num = . if Name == "Oprah Winfrey" & year < 2017
. 
. replace Age_num = . if Name == "Pat Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Patrick George Ryan" & year < 2017
. 
. replace Age_num = 76 if Name == "Patrick Joseph Mcgovern" & year == 2013
. 
. replace Age_num = . if Name == "Patrick Soon-Shiong" & year < 2017
. 
. replace Age_num = 64 if Name == "Paul Gardner Allen" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Paul Gardner Allen" & year < 2017
. 
. replace Age_num = . if Name == "Paul Tudor Jones" & year < 2017
. 
. replace Age_num = 83 if Name == "Pauline Macmillan Keinath" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Pauline Macmillan Keinath" & year < 2017
. 
. replace Age_num = . if Name == "Peter Buck" & year < 2017
. 
. replace Age_num = . if Name == "Peter R Kellogg" & year < 2017
. 
. replace Age_num = . if Name == "Peter Thiel" & year < 2017
. 
. replace Age_num = . if Name == "Philip Hampson Knight" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Frederick Anschutz" & year < 2017
. 
. replace Age_num = 82 if Name == "Phillip Frost" & year == 2017
. replace Age_num = . if Name == "Phillip Frost" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Ruffin" & year < 2017
. 
. replace Age_num = . if Name == "Pierre M Omidyar" & year < 2017
. 
. replace Age_num = . if Name == "Ralph Lauren" & year < 2017
. 
. replace Age_num = . if Name == "Randa Williams" & year < 2017
. 
. replace Age_num = . if Name == "Randal J Kirk" & year < 2017
. 
. replace Age_num = . if Name == "Randall Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Ray Dalio" & year < 2017
. 
. replace Age_num = . if Name == "Ray Davis" & year < 2017
. 
. replace Age_num = . if Name == "Ray Lee Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Reid Hoffman" & year < 2017
. 
. replace Age_num = . if Name == "Reinhold Schmieding" & year < 2017
. 
. replace Age_num = . if Name == "Richard Kinder" & year < 2017
. 
. replace Age_num = . if Name == "Richard Lefrak" & year < 2017
. 
. replace Age_num = 91 if Name == "Richard M Devos" & year == 2017
. replace Age_num = . if Name == "Richard M Devos" & year < 2017
. 
. replace Age_num = . if Name == "Richard M Schulze" & year < 2017
. 
. replace Age_num = . if Name == "Richard Taylor Peery" & year < 2017
. 
. replace Age_num = . if Name == "Richard Yuengling" & year < 2016
. 
. replace Age_num = . if Name == "Rick Caruso" & year < 2017
. 
. replace Age_num = . if Name == "Riley P Bechtel" & year < 2017
. 
. replace Age_num = 80 if Name == "Robert C Mcnair" & year == 2017
. replace Age_num = . if Name == "Robert C Mcnair" & year < 2017
. 
. replace Age_num = . if Name == "Robert David Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Robert Drayton Mclane" & year < 2017
. 
. replace Age_num = . if Name == "Robert Duggan" & year < 2016
. 
. replace Age_num = . if Name == "Robert Edward (Ted) Turner" & year < 2017
. 
. replace Age_num = . if Name == "Robert Edward Rich Jr" & year < 2017
. 
. replace Age_num = . if Name == "Robert Kraft" & year < 2017
. 
. replace Age_num = . if Name == "Robert Muse Bass" & year < 2017
. 
. replace Age_num = 40 if Name == "Robert Pera" & year == 2017
. replace Age_num = . if Name == "Robert Pera" & year < 2017
. 
. replace Age_num = . if Name == "Robert Rowling" & year < 2017
. 
. replace Age_num = . if Name == "Robert Smith" & year < 2017
. 
. replace Age_num = . if Name == "Romesh T Wadhwani" & year < 2017
. 
. replace Age_num = . if Name == "Ron Baron" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Owen Perelman" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Steven Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Wanek" & year < 2017
. 
. replace Age_num = . if Name == "Ronda E Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Rupert Harris Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Russ Weiner" & year < 2017
. 
. replace Age_num = . if Name == "Alexander Gus Spanos" & year < 2017
. 
. replace Age_num = 63 if Name == "Alfred James Clark" & year == 1991
. 
. replace Age_num = . if Name == "Amar Gopal Bose" & year < 2008
. 
. replace Age_num = . if Name == "Arthur Charles Nielsen" & year < 1992
. 
. replace Age_num = 65 if Name == "David Durst" & year == 1990
. 
. replace Age_num = . if Name == "Donald John Trump" & year < 2016
. 
. replace Age_num = 83 if Name == "Dorothy Green" & year == 1989
. replace Age_num = . if Name == "Dorothy Green" & year < 1989
. 
. replace Age_num = . if Name == "Elizabeth Ann Reid" & year < 2004
. 
. replace Age_num = . if Name == "Estee Lauder" & year < 1995
. 
. replace Age_num = . if Name == "Fred Deluca" & year < 2014
. 
. replace Age_num = . if Name == "Harry Brakmann Helmsley" & year < 1996
. 
. replace Age_num = . if Name == "Irene Sophie Du Pont May" & year < 1997
. 
. replace Age_num = . if Name == "James LeVoy Sorenson" & year < 2007
. 
. replace Age_num = . if Name == "Jane B Engelhard" & year < 1996
. 
. replace Age_num = 77 if Name == "Larry Fisher" & year == 1985
. replace Age_num = . if Name == "Larry Fisher" & year < 1985
. 
. replace Age_num = . if Name == "Louis Larrick Ward" & year < 1994
. 
. replace Age_num = . if Name == "Marc Lasry" & year < 2015
. 
. replace Age_num = . if Name == "Patrick Joseph Mcgovern" & year < 2013
. 
. replace Age_num = . if Name == "Paul Milstein" & year < 2009
. 
. replace Age_num = . if Name == "Preston Robert Tisch" & year < 2005
. 
. replace Age_num = . if Name == "Richard Mellon Scaife" & year < 2013
. 
. replace Age_num = . if Name == "S Robson Walton" & year < 2017
. 
. replace Age_num = . if Name == "Samuel Irving Newhouse" & year < 2016
. 
. replace Age_num = . if Name == "Samuel Zell" & year < 2017
. 
. replace Age_num = . if Name == "Scott Duncan" & year < 2017
. 
. replace Age_num = . if Name == "Sergey Brin" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Adelson" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Henry Solow" & year < 2017
. 
. replace Age_num = . if Name == "Sid Richardson Bass" & year < 2017
. 
. replace Age_num = . if Name == "Stanley Druckenmiller" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Schwarzman" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Wynn" & year < 2017
. 
. replace Age_num = . if Name == "Stephen Ross" & year < 2017
. 
. replace Age_num = . if Name == "Steve Ballmer" & year < 2017
. 
. replace Age_num = . if Name == "Steven A Cohen" & year < 2017
. 
. replace Age_num = . if Name == "Steven Allan Spielberg" & year < 2017
. 
. replace Age_num = . if Name == "Steven Udvar-Hazy" & year < 2017
. 
. replace Age_num = . if Name == "Stewart Rahr" & year < 2017
. 
. replace Age_num = . if Name == "Sumner Murray Redstone" & year < 2017
. 
. replace Age_num = . if Name == "Theodore Nathan Lerner" & year < 2017
. 
. replace Age_num = . if Name == "Thomas F Frist" & year < 2017
. 
. replace Age_num = . if Name == "Thomas J Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Trevor Rees-Jones" & year < 2017
. 
. replace Age_num = . if Name == "Warren Stephens" & year < 2017
. 
. replace Age_num = . if Name == "Whitney Macmillan" & year < 2017
. 
. replace Age_num = . if Name == "William Bernard Ziff" & year < 1994
. 
. replace Age_num = . if Name == "William Herbert Hunt" & year < 2017
. 
. replace Age_num = 75 if Name == "William Ingrahm Koch" & year == 2015
. replace Age_num = . if Name == "William Ingrahm Koch" & year < 2015
. 
. replace Age_num = . if Name == "William Morse Davidson" & year < 2008
. 
. replace Age_num = . if Name == "William Wrigley" & year < 2017
. }
. 
. *tab Age_num
. *pause
. ///Impute age for individual-year obs when we observe age for same individual in another year
> sort nameid year
. tsset nameid  year, yearly
. sleep 1000
. foreach lag of num 1/36 {
  2.         replace Age_num = L`lag'.Age_num + (year - L`lag'.year) if Age_num==. & L`lag'.Age_num ~=.
  3. }
. foreach lag of num 1/36 {
  2.         replace Age_num = F`lag'.Age_num + (year - F`lag'.year) if Age_num==. & F`lag'.Age_num ~=.
  3. }
. replace Age_num = . if Age_num > 110
. replace Age_num = 96 if Age_num>=96 & Age_num~=.  //lumping together for graphing purposes
. 
. gen flag = 0
. replace flag = 1 if (Age_num ~= L.Age_num+1) & (L.Age_num~=. & Age_num~=.)
. tab Name if flag == 1
. 
. drop if Age_num==.
. tab Age_num
. histogram Age_num, start(20) width(5) xlabels(20(5)100) xtitle("Age (Lower End of 5-year Cohort)") fcolor(gs12) lcolor(white) graphreg
> ion(color(white)) frequency discrete
. graph export ../tables/hist_age.pdf, replace as(pdf)
. gen old = 0 if Age_num~=.
. replace old = 1 if Age_num >= 65 & Age_num~=.
. gen old60 = 0 if Age_num~=. 
. replace old60 = 1 if Age_num >= 60 & Age_num~=. 
. gen old70 = 0 if Age_num~=. & inrange(Age_num,65,69)==0
. replace old70 = 1 if Age_num >= 70 & Age_num~=.
. gen old75 = 0 if Age_num~=. & inrange(Age_num,65,74)==0
. replace old75 = 1 if Age_num >= 75 & Age_num~=.
. gen footloose = (our_wealthy | old)
. label variable Age_num "Age"
. gen wealth = (NetWorthMill/1000)/cpi
. label variable wealth "Net Worth (billions, 2017 dollars)"
. 
. drop if inrange(year,2002,2002)  // no location for Forbes 400 in 2002...and possibly exclude phase-out period
. 
. gen post=(year>`postyear')
. gen AgeXpost = Age_num*post
. label variable post "post-`postyear'"
. label variable AgeXpost "Age X post-`postyear'"
. label variable Age_num "Age"
. encode abbr, gen(statenum)
. */
. 
. drop _m
. merge 1:1 Name year Forbes_Rank using "stata_data\Forbes_2015_top_100_companies.dta", keep(1 3) keepusing(company* officer* company_lo
> cation*) gen(from_company)
. 
. ******** construct officer_tied = 1 if any officer* are non-missing AND Residence==company_location* 
. generate company_state = substr(company_location,-2,2)
. generate company_state_2 = substr(company_location_2,-2,2)
. generate company_state_3 = substr(company_location_3,-2,2)
. generate company_tied = .
. replace company_tied = 0 if from_company==3
. *replace company_tied = 1 if from_company==3 & inlist(officer,"","Chairman Emeritus")==0 & abbr==company_state
. replace company_tied = 1 if from_company==3 & abbr==company_state
. 
. *replace company_tied = 1 if officer != "" & abbr == company_state
. *replace company_tied = 1 if officer_2 != "" & abbr == company_state_2
. *replace company_tied = 1 if officer_3 != "" & abbr == company_state_3
. 
. save ./stata_data/IndivAnalysisDataset.dta, replace
. 
. /// GET STATE*YEAR DATA ON PIT RATES TO MERGE IN BELOW
> use stata_data/State_Max_Tax_Rates.dta, clear
. rename Year year
. rename State_ID irsstatecode
. *pause
. merge m:1 irsstatecode using stata_data/irscode_fips_xwalk.dta
. rename stateabbrev abbr
. rename fips statefips
. drop irsstatecode statefips
. sort abbr year
. tempfile PIT
. save `PIT'
. 
. /// Get state CIT rates
> use stata_data/CIT_rates.dta, clear
. rename Year year
. keep year State state_tax
. rename state_tax CIT_rate
. label var CIT_rate "state corp income tax rate"
. tempfile CIT
. save `CIT'
. 
. //Import CEPR/CPS data (h/t Olivia Lofton) on state-year population for top 3%, top 10%, and total
. use "stata_data/styr_pop_by_wpctile.dta", clear
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop
. save `toppop'
. 
. use "stata_data/styr_pop_by_wpctile_young.dta", clear
. append using "stata_data/styr_pop_by_wpctile_old.dta", gen(old)
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop_old
. save `toppop_old'
. 
. /// CREATE STATE*YEAR PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change gdp Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 State year using `CIT', nogen keep(1 3)
. merge 1:1 State year using `toppop', nogen keep(1 3)
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/StateyearAnalysisDataset.dta, replace
. 
. preserve
. gen EI_GDP = EI_Tax/(gdp)
. line EI_Tax year if abbr=="NY"
. restore
. 
. 
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES 100, 200, 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'
  4.         gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
  5.         label variable stock "Population of Forbes 200"
  6.         label variable Age_num "Age"
  7.         label variable wealth "Net Worth (billions 2017 dollars)"
  8.         label variable NetWorthMill "Net Worth of Forbes 200 (billions nom. dollars)"
  9.         *replace wealth = . if wealth == 0
. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
 10.         replace abbr = "AK" if _n==1
 11.         replace year = 1982 if abbr=="AK"
 12. 
.         fillin abbr year
 13.         replace wealth = 0 if _fillin | abbr=="AK"
 14.         replace stock = 0 if _fillin | abbr=="AK"
 15. 
.         merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
 16.         label variable EI "Estate Tax Indicator"
 17. 
.         merge 1:1 abbr year using `PIT', nogen keep(1 3)
 18.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 19.         label variable avg "Top PIT Rate"
 20. 
.         merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
 21.         gen EIshare = EI_Tax/Total_Taxes
 22. 
.         egen stateyear = group(abbr year)
 23.         sort abbr year
 24.         encode abbr, gen(statenum)
 25.         tsset statenum year, yearly
 26.         save ./stata_data/StateyearTop`x'AnalysisDataset.dta, replace
 27. }
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/Stateyear10obsAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*AGE PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change cpi, by(year abbr Age_num)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth of Forbes 400 (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace Age_num = 96 if abbr=="AK"
. fillin abbr year Age_num
. 
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. 
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. encode abbr, gen(statenum)
. egen stateyear = group(abbr year)
. save ./stata_data/StateyearAgeAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET
> foreach v in old old60 old70 old75 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if `v'==.
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr `v')
  5.         rename `v' old
  6. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  7.         replace abbr = "AK" if _n==1
  8.         replace year = 1982 if abbr=="AK"
  9.         replace old = 0 if abbr=="AK"
 10.         fillin abbr year old
 11.         replace wealth = 0 if _fillin | abbr=="AK"
 12.         replace stock = 0 if _fillin | abbr=="AK"
 13. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 14.         label variable EI "Estate Tax Indicator"
 15.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 16.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 17.         label variable avg "Top Personal Income Tax (PIT) Rate"
 18.         merge 1:1 State year old using `toppop_old', nogen keep(1 3)
 19. 
.         gen post=(year>`postyear')
 20.         label variable EI "ET-state"
 21.         label variable post "post-`postyear'"
 22.         gen EIxPost = EI*post
 23.         label variable EIxPost "ET-state X post-`postyear'"
 24.         gen avgxPost = avg*post
 25.         label variable avgxPost "PIT X post-`postyear'"
 26.         gen EIratecombinedxPost = EIratecombined*post
 27.         label variable EIratecombinedxPost "ET rate X post-`postyear'"
 28.         gen EIxold = EI*old
 29.         label variable EIxold "ET-state X old"
 30.         gen avgxold = avg*old
 31.         label variable avgxold "PIT X old"
 32.         gen oldxPost = old*post
 33.         label variable oldxPost "old X post-`postyear'"
 34.         gen EIxPostxold = EI*post*old
 35.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 36.         gen avgxPostxold = avg*post*old
 37.         label variable avgxPostxold "PIT X post-`postyear' X old"
 38.         gen EIratecombinedxPostxold = EIratecombined*post*old
 39.         label variable EIratecombinedxPostxold "ET rate X post-`postyear' X old"
 40.         egen stateold = group(abbr old)
 41. 
.         encode abbr, gen(statenum)
 42.         tsset stateold year, yearly
 43.         save ./stata_data/Stateyear`v'AnalysisDataset.dta, replace
 44. }
.         
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR TOP 100, 200, AND 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'     
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
  5. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  6.         replace abbr = "AK" if _n==1
  7.         replace year = 1982 if abbr=="AK"
  8.         replace old = 0 if abbr=="AK"
  9.         fillin abbr year old
 10.         replace wealth = 0 if _fillin | abbr=="AK"
 11.         replace stock = 0 if _fillin | abbr=="AK"
 12. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 13.         label variable EI "Estate Tax Indicator"
 14.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 15.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 16.         label variable avg "Top PIT Rate"
 17. 
.         gen post=(year>`postyear')
 18.         label variable EI "ET-state"
 19.         label variable post "post-`postyear'"
 20.         gen EIxPost = EI*post
 21.         label variable EIxPost "ET-state X post-`postyear'"
 22.         gen EIxold = EI*old
 23.         label variable EIxold "ET-state X old"
 24.         gen oldxPost = old*post
 25.         label variable oldxPost "old X post-`postyear'"
 26.         gen EIxPostxold = EI*post*old
 27.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 28.         egen stateold = group(abbr old)
 29. 
.         encode abbr, gen(statenum)
 30.         tsset stateold year, yearly
 31.         save ./stata_data/StateyearOldTop`x'AnalysisDataset.dta, replace
 32. }
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. egen stateold = group(abbr old)
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly
. save ./stata_data/StateyearOld10obsAnalysisDataset.dta, replace
. 
. /// CREATE STATE*YEAR*OLD UNDER-40 PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. keep if Age_num>=40
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. 
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "PIT"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. egen stateold = group(abbr old)
. 
. gen avgxold = avg*old
. label variable avgxold "PIT X old"
. gen avgxPostxold = avg*post*old
. label variable avgxPostxold "PIT X post-`postyear' X old"
. gen avgxPost = avg*post
. label variable avgxPost "PIT X post-`postyear'"
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly     
. save ./stata_data/StateyearOldU40AnalysisDataset.dta, replace
. */
. }  //end BuildData IF code

. 
. 
. *********************************************** ANALYSES **********************************************************
. /// 1. ANALYSIS OF STATE*YEAR FORBES POPULATION
> if "$run2D" == "yes" {
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. 
. list abbr avg EI if year==2015
. bysort EI: sum avg
. bysort EI: sum State_Rate_Wages
. bysort EI: sum State_Rate_Long_Gains
. corr EI avg
. corr EI avg if avg>0
. corr EI State_Rate_Long_Gains
. corr EI State_Rate_Wages
. sum avg if EI==0 & year==`postyear'
. local mean0 = r(mean)
. histogram avg if EI==0 & year==`postyear', bin(25) xline(`mean0') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(wh
> ite))
. graph export ../tables/hist_avg_`postyear'_EI0.pdf, replace as(pdf)
. sum avg if EI==1 & year==`postyear'
. local mean1 = r(mean)
. histogram avg if EI==1 & year==`postyear', bin(25) xline(`mean1') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(wh
> ite))
. graph export ../tables/hist_avg_`postyear'_EI1.pdf, replace as(pdf)
. *histogram avg if year==`postyear', by(EI) bin(25) xline(`mean0') xline(`mean1')
. 
. sum avg if EI==0 & year==2017
. local mean0 = r(mean)
. histogram avg if EI==0 & year==2017, bin(25) xline(`mean0') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
. graph export ../tables/hist_avg_2017_EI0.pdf, replace as(pdf)
. sum avg if EI==1 & year==2017
. local mean1 = r(mean)
. histogram avg if EI==1 & year==2017, bin(25) xline(`mean1') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
. graph export ../tables/hist_avg_2017_EI1.pdf, replace as(pdf)
. *histogram avg if year==2017, by(EI) bin(25) xline(`mean0') xline(`mean1')
. *pause
. 
. /// PROBIT ANALYSIS OF ET ADOPTION
> gen post = (year>`postyear')
. label variable post "post-`postyear'"
. gen avgXpost = avg*post
. gen CITXpost = CIT_rate*post
. gen gdp_changeXpost = gdp_change*post
. label var gdp_change "Log Change in real GDP"
. label var CIT_rate "Top Corp. Income Tax (CIT) Rate"
. label var avgXpost "Top PIT Rate X post-2001"
. label var CITXpost "Top CIT Rate X post-2001"
. label var gdp_changeXpost "GDP Change X post-2001"
. eststo adopt1: reg EI avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)
.         estadd local yearFE       "No",   replace:   adopt1
.         estadd local stateFE      "No",   replace:   adopt1
. eststo adopt2: reg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)
.         estadd local yearFE       "Yes",   replace:   adopt2
.         estadd local stateFE      "No",   replace:   adopt2
. eststo adopt3: xtreg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, fe cluster(statenum)
.         estadd local yearFE       "Yes",   replace:   adopt3
.         estadd local stateFE      "Yes",   replace:   adopt3
. *logit EI avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, 
. *logit EI i.year avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, 
. *xtlogit EI i.year avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, fe 
. #delimit ;
delimiter now ;
.         esttab adopt1 adopt2 adopt3
>           using ../tables/adopt`postyear'.tex, replace se scalars(stateFE yearFE) drop(*year)
>                 noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0
> .1 ** 0.05 *** 0.01 )
>                 postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize Standard errors (clustered by state) in parentheses.}\\"
>                 "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. 
. 
. /// MAPS
> preserve
. gen state = abbr
. keep if year<=`postyear'
. *keep if year==`postyear'
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../tables/Pre`postyear'_EImap.pdf, replace as(pdf)
. restore
. preserve
. gen state = abbr
. keep if year>`postyear'
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../tables/Post`postyear'_EImap.pdf, replace as(pdf)
. restore
. /*
> preserve
> use "C:\ado\personal\maptile_geographies\statehex_database.dta", clear
> keep _polygonid state __label_X __label_Y
> tempfile centroid
> save `centroid'
> restore
> 
> foreach t of num 1983/2001 2003/2017 {
>         preserve
>         keep if year==`t'
>         gen state = abbr
>         gen statehex = abbr
>         label values stock .
>         egen natl_stock = total(stock)
>         gen share = stock/natl_stock
>         merge m:1 state using `centroid', nogen keep(1 3)
>         *maptile EI if year==`t', geo(statehex) geoid(state) ndfcolor(gray) nquantiles(2) twopt( legend( lab(2 "Non-ET") lab(3 "ET")  
> ) title("`t'") )
>         spmap EI using "C:\ado\personal\maptile_geographies\statehex_coords.dta" , id(_polygonid) clnumber(2) fcolor(BuRd) ///
>                 point(x(__label_X) y(__label_Y) proportional(share) fcolor(yellow))  ///
>                 label(x(__label_X) y(__label_Y) label(state) color(black))  ///
>                 legend( lab(2 "Non-ET") lab(3 "ET")  pos(5)) title("`t'")
>         *pause
>         qui graph export "s:/dan/Paper - Forbes/tables/EImap_`t'.png", replace as(png)
>         restore
> }
> */
. 
. /// TIME-SERIES GRAPH OF FORBES POPULATION IN EI VS NON-EI STATES
> preserve
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. reg stock i.year avg
. predict stockA, r
. collapse (mean) stock stockA `wealth', by(EI year)
. reshape wide stock stockA `wealth', i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. gen propA = stockA1/(stockA1 + stockA0)
. gen propW = `wealth'1/(`wealth'1 + `wealth'0)
. *twoway line prop /*stock1 stock0*/ year, legend(order(1 "Non-EI states" 2 "EI states")) xline(`postyear')
. twoway line prop year, title(Fraction of Forbes 400 Living in Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion(color(w
> hite))
. twoway line stockA1 year, title(Proportion of Forbes 400 Living in Estate Tax State) ytitle(Proportion)  xline(`postyear') graphregion
> (color(white))
. twoway line propW year, title(Fraction of Forbes 400 Wealth in Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion(color(
> white))
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. qui reg stock i.year
. predict stockA, r
. qui reg stock i.year i.statenum
. predict stockB, r
. qui reg stock i.year i.statenum avg
. predict stockC, r
. collapse (sum) stock stockA stockB stockC `wealth', by(EI`postyear' year)
. reshape wide stock stockA stockB stockC `wealth', i(year) j(EI`postyear')
. gen prop = (stock1/(stock1 + stock0))*100
. gen propA = stockA1/(stockA1 + stockA0)
. gen propW = `wealth'1/(`wealth'1 + `wealth'0)
. qui sum prop if year<=`postyear'
. gen premean = r(mean) if year<2002
. qui sum prop if year>`postyear'
. gen postmean = r(mean) if year>2002
. 
. twoway line prop premean postmean year, ytitle(Percentage) yscale(range(0 30)) xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyea
> r', lcolor(black)) graphregion(color(white)) ylabel(#10) lcolor(black red red) lpattern(solid dash dash) legend(off)
. graph export "../tables/ShareIn2001ET.pdf", replace as(pdf)
. *pause
. *twoway line prop year, title(Fraction of Forbes 400 Living in a `postyear' Estate Tax State /*legend(order(1 "States with EI in `post
> year'" 2 "States without EI in `postyear'"))*/ ytitle(Fraction) yscale(range(0 .22)) xline(`postyear') graphregion(color(white))
. *twoway line stock1 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Fraction) xline(`postyear') g
> raphregion(color(white))
. twoway line stock1 stock0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with ET
>  in `postyear'" 2 "States without ET in `postyear'")) xline(`postyear') graphregion(color(white))
. *twoway line stockA1 stockA0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on year
>  FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockA1 stockA0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on year FEs)  xline(`postyear') graphregion(color(white))
. *twoway line stockB1 stockB0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on year
>  and state FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockB1 stockB0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on year and state FEs)  xline(`postyear') graphregion(colo
> r(white))
. *twoway line stockC1 stockC0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on PIT 
> and year and state FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockC1 stockC0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on PIT and year and state FEs)  xline(`postyear') graphreg
> ion(color(white))
. /*
> reg prop i.year
> predict prop2, r
> twoway line prop2 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by year fixed effects)
> pause
> reg prop i.year i.statenum
> predict prop3, r
> twoway line prop3 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by year and state fixed effects)
> pause
> reg prop i.year i.statenum avg
> predict prop4, r
> twoway line prop4 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by PIT and year and state fixed effects)
> pause
> */
. *twoway line propW year, title(Fraction of Forbes 400 Wealth in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregio
> n(color(white))
. *pause
. 
. 
. /*
> gen interval = "1982-87" if inrange(year,1982,1987)
> replace interval = "1988-92" if inrange(year,1988,1992)
> replace interval = "1992-96" if inrange(year,1992,1996)
> replace interval = "1997-01" if inrange(year,1997,2001)
> replace interval = "2002-06" if inrange(year,2002,2006)
> replace interval = "2007-11" if inrange(year,2007,2011)
> replace interval = "2012-17" if inrange(year,2012,2017)
> collapse (sum) stock*, by(interval)
> gen prop = stock1/(stock1 + stock0)
> graph bar (asis) prop, over(interval)
> */
. restore
. 
. estpost sum stock wealth EI avg, detail
. esttab using "../tables/Summary_Stats_2.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median
> )) sd(fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label
. 
. ///Event Study Around EI switches
> preserve
. sort statenum year
. gen dEI = D.EI
. gen beta = .
. gen beta_lb = .
. gen beta_ub = .
. gen h = .
. gen zero = 0
. gen y = .
. local c = 0
. foreach h of num -3/5 {
  2.  local c = `c' + 1
  3.  *replace y = F`h'.stock - L1.stock
.  qui ivreg2 F(`h').stock dEI i.year i.statenum if year>2001, dkraay(3) partial(i.year i.statenum)
  4.  qui replace beta = _b[dEI] if _n==`c'
  5.  qui replace beta_lb = _b[dEI] - 1.65*_se[dEI] if _n==`c'
  6.  qui replace beta_ub = _b[dEI] + 1.65*_se[dEI] if _n==`c'
  7.  qui replace h = `h' if _n==`c'
  8. }
. twoway (rarea beta_lb beta_ub h, color(gs14)) (line beta h, color(black)) (line zero h, lcolor(black) lwidth(thin)) if inrange(h,-3,5)
> , xline(0, lcolor(black) lwidth(thin))
. *pause
. restore
. 
. /// B. DIFF-IN-DIFF (BEFORE/AFTER `postyear')
> replace avg = avg*100
. replace State_Rate_Wages = State_Rate_Wages*100
. replace State_Rate_Long_Gains =  State_Rate_Long_Gains*100
. 
. label variable EI "ET-state"
. label variable avg "PIT"
. gen EIxPost = EI*post
. gen avgxPost = avg*post
. gen EIratecombinedxPost = EIratecombined*post
. label variable EIxPost "ET-state X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. label variable EIratecombinedxPost "ET rate X post-`postyear'"
. gen logwealth = ln(wealth+.001)
. gen logstock = ln(stock)
. gen stockpc = (stock/pop)*1000
. gen logstockpc = log(stockpc)
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. 
. foreach drop in no yes {
  2.         preserve
  3.   drop if stock==0 & "`drop'"=="yes"
  4. 
.         sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'
  5.         local baseline_stock = r(mean)
  6.         *pause
.   sum wealth if year>2001
  7.         local post_wealth_mean = r(mean)
  8.         sum wealth if year==2001
  9.         local pre_wealth_mean = r(mean)
 10.         sum wealth if year==2001 & EI==1, detail //yields baseline statewide wealth of billionaires pre-`postyear'
 11.         local baseline_wealth = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 12.         sum stockpc if year==2001 & EI==1       //yields baseline number of billionaires pre-`postyear'
 13.         local baseline_stockpc = r(mean)
 14.         sum wealth_share if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'
 15.         local baseline_wealth_share = r(mean)
 16.         sum wealth_normalized if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'
 17.         local baseline_wealth_normalized = r(mean)
 18. 
. /*
> eststo: ivreg2 `wealth' EIxPost `controls' EI post, dkraay(10)
> esttab using "../tables/wealth_EI.tex",replace  se star(* 0.10 ** 0.05 *** 0.01) label 
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> //Adding i.year
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> sleep 1000 //gives state time to finish esttab above before adding to it
> //Adding i.statenum
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> sleep 1000
> //Adding PIT
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum avgxPost avg, dkraay(10) partial(i.statenum i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and State FE" "Ad
> d Pers Income Tax (PIT)")
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> eststo clear
> */
. 
.         eststo stock_EI1: ivreg2 stock EIxPost `controls' EI post, dkraay(10)
 19.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI1
 20.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI1
 21.         estadd local yearFE       "No",   replace:   stock_EI1
 22.         estadd local stateFE      "No",   replace:   stock_EI1
 23. 
.         //Adding i.year
.         eststo stock_EI2: ivreg2 stock EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
 24.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI2
 25.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI2
 26.         estadd local yearFE      "Yes",   replace:   stock_EI2
 27.         estadd local stateFE     "No",   replace:    stock_EI2
 28. 
.         sleep 1000 //gives stata time to finish esttab above before adding to it
 29.         //Adding i.statenum
.         eststo stock_EI3: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 30.         *ivreghdfe stock EIxPost `controls' EI , dkraay(10) absorb(i.statenum i.year i.statenum#c.year)
.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
 31.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
 32.         estadd local yearFE      "Yes",   replace:   stock_EI3
 33.         estadd local stateFE     "Yes",   replace:   stock_EI3
 34. 
.         //Replace ET dummy with ET rate
.         eststo stock_EIrate3: ivreg2 stock EIratecombinedxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 35. *       eststo stock_EIrate3: ivreg2 stock EIratecombinedxPost `controls' i.year i.statenum, dkraay(10) partial(i.statenum i.year)
.         estadd local yearFE      "Yes",   replace:   stock_EIrate3
 36.         estadd local stateFE     "Yes",   replace:   stock_EIrate3
 37. *pause
. 
.         // Interact EIxPost with average billionaire wealth in the state-year
.         cap gen Avgwealth = wealth/stock
 38.         cap gen EIxPostxAvgwealth = EIxPost*Avgwealth
 39.         ivreg2 stock EIxPost EIxPostxAvgwealth `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 40. *pause
.         
.         sleep 1000
 41.         //poisson or NB
.         eststo stock_EI3b: xtpoisson stock EIxPost `controls' EI i.year, fe vce(robust)
 42.         estadd local elas = .,   replace:   stock_EI3b
 43.         estadd local stderr = .,   replace:   stock_EI3b
 44.         estadd local yearFE      "Yes",   replace:   stock_EI3b
 45.         estadd local stateFE     "Yes",   replace:   stock_EI3b
 46. 
.         //Change dep var to stock p.c.
.         eststo stock_EI9: ivreg2 stockpc EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 47.         estadd local elas = round((_b[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
 48.         estadd local stderr = round((_se[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
 49.         estadd local yearFE      "Yes",   replace:   stock_EI9
 50.         estadd local stateFE     "Yes",   replace:   stock_EI9
 51. 
.         sleep 1000
 52.         //Adding PIT
.         eststo stock_EI4: ivreg2 stock EIxPost `controls' EI i.year i.statenum avgxPost avg, dkraay(10) partial(i.statenum i.year)
 53.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
 54.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
 55.         estadd local yearFE      "Yes",  replace:   stock_EI4
 56.         estadd local stateFE     "Yes",  replace:   stock_EI4
 57. 
.         //Control for ordinary high earner population
.         egen pop_90to97_natl = total(pop_90to97), by(year)
 58.         gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
 59.         label var topshr_90to97 "High earners share"
 60.         eststo stock_EI10: ivreg2 stock EIxPost `controls' EI i.year i.statenum topshr_90to97, dkraay(10) partial(i.statenum i.year
> )
 61.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
 62.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
 63.         estadd local yearFE      "Yes",  replace:   stock_EI10
 64.         estadd local stateFE     "Yes",  replace:   stock_EI10
 65.         // Try placebo check
.         ivreg2 topshr_90to97 EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 66. *       pause
. 
. /*
> //Fix post-`postyear' EI values at `postyear' values
> gen EItrue = EI
> gen EIxPosttrue = EIxPost
> levelsof abbr if year==`postyear' & EI==1, local(temp)
> cap di "`temp'"
> replace EI = 0
> replace EIxPost = 0
> foreach s of local temp {
>         di "`s'"
>         replace EI = 1 if abbr == "`s'" & year>=`postyear'
> }
> replace EIxPost = EI*post
> eststo stock_EI5: ivreg2 stock EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
> estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
> estadd local yearFE       "Yes",   replace:    stock_EI5
> estadd local stateFE      "No",   replace:    stock_EI5
> replace EI = EItrue
> replace EIxPost = EIxPosttrue
> drop *true
> */
.         //Reduced-Form reg replacing post-`postyear' EI with 2001 EI
.         levelsof abbr if year==2001 & EI==1, local(temp)
 67.         gen EI2001 = 0
 68.         foreach s of local temp {
 69.                 di "`s'"
 70.                 replace EI2001 = 1 if abbr == "`s'" & year>=2001
 71.         }
 72.         
.         gen EI2001xPost = EI2001*post
 73.         label variable EI2001xPost "ET-state-2001 X post-2001"
 74.         eststo stock_EI5: ivreg2 stock  `controls' EI2001 EI2001xPost i.year i.statenum, dkraay(10) partial(i.year i.statenum)
 75.         estadd local elas = round((_b[EI2001xPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
 76.         estadd local stderr = round((_se[EI2001xPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
 77.         estadd local yearFE       "Yes",   replace:    stock_EI5
 78.         estadd local stateFE      "Yes",   replace:    stock_EI5
 79. 
.         eststo stock_EI6: ivreg2 stock  `controls' i.year i.statenum (EI EIxPost = EI2001 EI2001xPost), dkraay(10) partial(i.year i.st
> atenum) first endog(EI EIxPost)
 80.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
 81.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
 82.         estadd local yearFE       "Yes",   replace:    stock_EI6
 83.         estadd local stateFE      "Yes",   replace:    stock_EI6
 84. 
.         eststo stock_EI7: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 85.         if "`wealth'" == "logwealth" estadd local elas = round((_b[EIxPost])*1000)/1000,   replace:   stock_EI7
 86.         if "`wealth'" == "wealth"        estadd local elas = round((_b[EIxPost]/`baseline_wealth')*1000)/1000,   replace:   stock_E
> I7
 87.         if "`wealth'" == "wealth_normalized"     estadd local elas = round((_b[EIxPost]/`baseline_wealth_normalized')*1000)/1000, r
> eplace:   stock_EI7
 88.         if "`wealth'" == "logwealth" estadd local stderr = round((_se[EIxPost])*1000)/1000,   replace:   stock_EI7
 89.         if "`wealth'" == "wealth"        estadd local stderr = round((_se[EIxPost]/`baseline_wealth')*1000)/1000,   replace:   stoc
> k_EI7
 90.         if "`wealth'" == "wealth_normalized"     estadd local stderr = round((_se[EIxPost]/`baseline_wealth_normalized')*1000)/1000
> , replace:   stock_EI7
 91.         estadd local yearFE      "Yes",   replace:   stock_EI7
 92.         estadd local stateFE     "Yes",   replace:   stock_EI7
 93.         
.   //Drop NY
.         eststo stock_EI3d: ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="NY", dkraay(10) partial(i.statenum i.year)
 94.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3d
 95.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3d
 96.         estadd local yearFE      "Yes",   replace:   stock_EI3d
 97.         estadd local stateFE     "Yes",   replace:   stock_EI3d
 98. 
.   //Drop PA
.         eststo stock_EIxPA: ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="PA", dkraay(10) partial(i.statenum i.year)
 99.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EIxPA
100.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EIxPA
101.         estadd local yearFE      "Yes",   replace:   stock_EIxPA
102.         estadd local stateFE     "Yes",   replace:   stock_EIxPA
103.         pause
104. 
.         //Drop each ET state (shown in Figure 1B) one at a time 
.         local i=1
105.         qui ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
106.         lincom EIxPost
107.         gen beta=r(estimate) if _n==`i'
108.         gen ub = r(ub) if _n==`i'
109.         gen lb = r(lb) if _n==`i'
110.         gen n = `i' if _n==`i'
111.         label define n `i' "None", add
112.         foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
113.           local ++i
114.                 qui ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="`s'", dkraay(10) partial(i.statenum i.year)
115.                 di "State: `s'"
116.                 *sum EIxPost if abbr=="`s'" & post==1
.                 lincom EIxPost
117.                 *pause
.                 replace beta=r(estimate) if _n==`i'
118.                 replace ub = r(ub) if _n==`i'
119.                 replace lb = r(lb) if _n==`i'
120.                 replace n = `i' if _n==`i'
121.                 label define n `i' "`s'", add
122.         }
123.         label values n n
124.         #delimit ;
delimiter now ;
.         twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
>                 xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
>                 ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
>                 yscale(range(-5 1)) ylabel(-5(1)1, nogrid)
>                 ;
125.         #delimit cr
delimiter now cr
.         graph export ../tables/DD_drop_each_ET_state_drop0`drop'.pdf, replace as(pdf)
126.         drop beta ub lb n
127.         
.   //Drop CA
.         ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="CA", dkraay(10) partial(i.statenum i.year)
128. *       pause
.   //Drop PA
.         ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="PA", dkraay(10) partial(i.statenum i.year)
129. *       pause
.         
.         //Drop phase-out period (2002-2004)
.         eststo stock_EI3e: ivreg2 stock EIxPost `controls' EI i.year i.statenum if inrange(year,2002,2004)==0, dkraay(10) partial(i.st
> atenum i.year)
130.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
131.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
132.         estadd local yearFE      "Yes",   replace:   stock_EI3e
133.         estadd local stateFE     "Yes",   replace:   stock_EI3e
134. 
.         //Use only post period
.         eststo stock_EI3f: ivreg2 stock EI2001 `controls' i.year i.statenum if year>`postyear', dkraay(10) partial(i.statenum i.year)
135.         estadd local elas = round((_b[EI2001]/`baseline_stock')*1000)/1000,   replace:   stock_EI3f
136.         estadd local stderr = round((_se[EI2001]/`baseline_stock')*1000)/1000,   replace:   stock_EI3f
137.         estadd local yearFE      "Yes",   replace:   stock_EI3f
138.         estadd local stateFE     "Yes",   replace:   stock_EI3f
139.         
.         //Count Inheritance-tax-only cases as EI=1 (be sure to do this reg last because it changes EI data)
.         replace EI = 1 if Ionly==1
140.         eststo stock_EI3c: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
141.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
142.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
143.         estadd local yearFE      "Yes",   replace:   stock_EI3c
144.         estadd local stateFE     "Yes",   replace:   stock_EI3c
145.         
.   if "`drop'"=="yes" {
146.                 #delimit ;
delimiter now ;
.                 esttab /*stock_EI1 stock_EI2*/ stock_EI3 stock_EI4 stock_EI10 stock_EI6 stock_EI9 stock_EI7 stock_EI3c stock_EI3e stoc
> k_EIrate3
>                   using ../tables/stock_EI`postyear'.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "IV" "Per Capita
> " "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate") /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" yearFE "Year Fixe
> d Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. IV regression instruments for ET-state\textsubscript{s,t}} \\" 
>                         "\multicolumn{9}{l}{\footnotesize and its interactions using a variable (and its corresponding interactions) e
> qual to ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001}} \\"
>                         "\multicolumn{9}{l}{\footnotesize  for t$\geq$2001.  \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.
> 01\)}  \end{tabular} }");
147.                 #delimit cr
delimiter now cr
.                 }
148.         if "`drop'"=="no" {
149.                 #delimit ;
delimiter now ;
.                 esttab /*stock_EI1 stock_EI2*/ stock_EI3 stock_EI4 stock_EI10 stock_EI6 stock_EI9 stock_EI7 stock_EI3c stock_EI3e stoc
> k_EIrate3
>                   using ../tables/stock_EI`postyear'with0.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "" "IV" "Pe
> r Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate") /*drop(*year *cons)*/
>                 noconstant label compress substitute(0000000000001 "" \_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" 
> yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. IV regression instruments for ET-state\textsubscript{s,t}} \\" 
>                         "\multicolumn{9}{l}{\footnotesize and its interactions using a variable (and its corresponding interactions) e
> qual to ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001}} \\"
>                         "\multicolumn{9}{l}{\footnotesize  for t$\geq$2001.  \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.
> 01\)}  \end{tabular} }");
150.                 esttab stock_EI3 stock_EI4 stock_EI6
>                   using ../tables/stock_EI`postyear'with0_ForSlides.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "
> IV") /*drop(*year *cons)*/
>                 noconstant label compress substitute(0000000000001 "" \_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" 
> yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} 
> \(p<0.01\)}  \end{tabular} }");
151.                 #delimit cr
delimiter now cr
.         }
152. 
.         //Restrict to top 100, 200, 300, or 10+ observations
.   local m = 10
153.   foreach x in Top100 Top200 Top300 10obs {
154.                 use ./stata_data/Stateyear`x'AnalysisDataset.dta, clear
155.                 gen post = (year>`postyear')
156.         drop if stock==0 & "`drop'"=="yes"
157.                 sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'
158.                 local baseline_stock`x' = r(mean)
159.                 label variable post "post-`postyear'"
160.                 label variable EI "ET-state"
161.                 gen EIxPost = EI*post
162.                 label variable EIxPost "ET-state X post-`postyear'"
163.                 label variable avg "PIT"
164.                 gen avgxPost = avg*post
165.                 label variable avgxPost "PIT X post-`postyear'"
166.                 eststo stock_EI`m': ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
167.                 estadd local elas = round((_b[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
168.                 estadd local stderr = round((_se[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
169.                 estadd local yearFE      "Yes",   replace:   stock_EI`m'
170.                 estadd local stateFE     "Yes",   replace:   stock_EI`m'
171.                 local m = `m'+1
172.         }
173.   if "`drop'"=="yes" {
174.                 #delimit ;
delimiter now ;
.                 esttab stock_EI10 stock_EI11 stock_EI12 stock_EI13
>                   using ../tables/stock_EI`postyear'TopX.tex, replace se scalars(elas stderr) mtitle("Top 100" "Top200" "Top300" "10+ 
> Obs" ) /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}") star(* 0.1 ** 0.
> 05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses.} \\" 
>                         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
175.                 #delimit cr
delimiter now cr
.         }
176.   if "`drop'"=="no" {
177.                 #delimit ;
delimiter now ;
.                 esttab stock_EI10 stock_EI11 stock_EI12 stock_EI13
>                   using ../tables/stock_EI`postyear'TopXwith0.tex, replace se scalars(elas stderr) mtitle("Top 100" "Top200" "Top300" 
> "10+ Obs" ) /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}") star(* 0.1 ** 0.
> 05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses.} \\" 
>                         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
178.                 #delimit cr
delimiter now cr
.         }
179.   restore
180. }
. } // end Run2D IF code

. 
. 
. /// 2. ANALYSIS OF STATE*YEAR*OLD FORBES POPULATION
> if "$run3D" == "yes" {
. use ./stata_data/StateyearoldAnalysisDataset.dta, clear
. local v ""
. *use ./stata_data/Stateyearold70AnalysisDataset.dta, clear
. *local v "70"
. *use ./stata_data/Stateyearold75AnalysisDataset.dta, clear
. *local v "75"
. *use ./stata_data/Stateyearold60AnalysisDataset.dta, clear
. *local v "60"
. 
. preserve
. collapse (sum) stock, by(EI year old)
. keep if old
. reshape wide stock, i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Old Forbes 400 Living in ET State)
. *pause
. restore
. preserve
. collapse (sum) stock, by(EI year old)
. keep if old==0
. reshape wide stock, i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Young Forbes 400 Living in ET State)
. *pause
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. collapse (sum) stock, by(EI`postyear' year old)
. keep if old==1
. reshape wide stock, i(year) j(EI`postyear')
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Old Forbes 400 Living in 2001 ET State) yscale(range(0 .3)) ylabel(#10)
. *pause
. restore
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. collapse (sum) stock, by(EI`postyear' year old)
. keep if old==0
. reshape wide stock, i(year) j(EI`postyear')
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Young Forbes 400 Living in 2001 ET State) yscale(range(0 .3)) ylabel(#10)
. *pause
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. egen total_wealth = total(wealth), by(year old)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. qui reg stock i.year
. predict stockA, r
. qui reg stock i.year avg
. predict stockC, r
. collapse (mean) stock stockA stockC `wealth', by(EI`postyear' year old)
. reshape wide stock stockA stockC `wealth', i(year old) j(EI`postyear')
. reshape wide stock* `wealth'*, i(year) j(old) 
. label var stock11 stockETold
. label var stock01 stockNonETold
. label var stock10 stockETyoung
. label var stock00 stockNonETyoung
. twoway (line stock11 stock01 stock10 stock00 year),  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphre
> gion(color(white))
. *pause
. 
. foreach a of numlist 1 0 {
  2.         gen prop`a' = /*stock1`a'/(stock1`a' + stock0`a')*/ stock1`a' - stock0`a'
  3.         gen propA`a' = /*stockA1`a'/(stockA1`a' + stockA0`a')*/ stockA1`a' - stockA0`a'
  4.         gen propC`a' = /*stockC1`a'/(stockC1`a' + stockC0`a')*/ stockC1`a' - stockC0`a'
  5.         gen propW`a' = `wealth'1`a'/(`wealth'1`a' + `wealth'0`a')
  6. }
. rename prop1 propETold
. rename prop0 propETyoung
. rename propA1 propAETold
. rename propA0 propAETyoung
. rename propC1 propCETold
. rename propC0 propCETyoung
. twoway (line propETold year) (line propETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, ax
> is(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregion(
> color(white))
. *pause
. twoway (line propAETold year) (line propAETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, 
> axis(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregio
> n(color(white))
. *pause
. twoway (line propCETold year) (line propCETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, 
> axis(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregio
> n(color(white))
. *pause
. twoway (line propETold year) (line propETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, ax
> is(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregion(
> color(white))
. twoway line propW1 propW0 year, title(Proportion of Old Forbes 400 Wealth in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear
> ') graphregion(color(white))
. restore
. 
. ///Event Study Around EI switches
> preserve
. gen dEI = D.EI
. gen beta = .
. gen beta_lb = .
. gen beta_ub = .
. gen h = .
. gen zero = 0
. gen y = .
. local c = 0
. foreach h of num -3/5 {
  2.  local c = `c' + 1
  3.  *replace y = F`h'.stock - L1.stock
.  qui ivreg2 F(`h').stock dEI i.year i.statenum if year>2001 & old, dkraay(3) partial(i.year i.statenum)
  4.  qui replace beta = _b[dEI] if _n==`c'
  5.  qui replace beta_lb = _b[dEI] - 1.65*_se[dEI] if _n==`c'
  6.  qui replace beta_ub = _b[dEI] + 1.65*_se[dEI] if _n==`c'
  7.  qui replace h = `h' if _n==`c'
  8. }
. twoway (rarea beta_lb beta_ub h, color(gs14)) (line beta h, color(black)) (line zero h, lcolor(black) lwidth(thin)) if inrange(h,-3,5)
> , xline(0, lcolor(black) lwidth(thin))
. restore
. 
. 
. *`drop_condition'
. foreach drop in no yes {
  2.   preserve
  3.   drop if stock==0 & "`drop'"=="yes"
  4. 
.         gen stockpc = (stock/pop)*1000
  5.         sum stock if year==2001 & EI==1 & old==1        //yields baseline number of old billionaires pre-`postyear'
  6.         local baseline_stock_old = r(mean)
  7.         sum stock if year==2001 & EI==1 & old==0        //yields baseline number of young billionaires pre-`postyear'
  8.         local baseline_stock_young = r(mean)
  9.         sum stockpc if year==2001 & EI==1 & old==1      //yields baseline number of old billionaires p.c. pre-`postyear'
 10.         local baseline_stockpc_old = r(mean)
 11.         sum stockpc if year==2001 & EI==1 & old==0      //yields baseline number of young billionaires p.c. pre-`postyear'
 12.         local baseline_stockpc_young = r(mean)
 13.   sum wealth if year>2001
 14.         local post_wealth_mean = r(mean)
 15.         sum wealth if year==2001
 16.         local pre_wealth_mean = r(mean)
 17.         sum wealth if year==2001 & EI==1 & old==1, detail //yields baseline statewide wealth of old billionaires pre-`postyear'
 18.         local baseline_wealth_old = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 19.         sum wealth if year==2001 & EI==1 & old==0, detail //yields baseline statewide wealth of young billionaires pre-`postyear'
 20.         local baseline_wealth_young = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 21. 
.         egen total_wealth = total(wealth), by(year)
 22.         sum total_wealth if year==2001 & old==1
 23.         sum total_wealth if year==2017 & old==1 
 24.         gen wealth_normalized = (wealth)*(r(mean)/(total_wealth))   //rescale each state-year-generation's wealth so national total
>  is constant over time (equal to 2017 national total).
 25.   sum wealth_normalized if year==2001 & EI==1 & old==1
 26.         local baseline_wealth_normalized_old = r(mean)
 27.   sum wealth_normalized if year==2001 & EI==1 & old==0
 28.         local baseline_wealth_normalized_yng = r(mean)
 29.         
.         /// A. TRIPLE-DIFF REGRESSIONS (BEFORE/AFTER AND OLD/YOUNG)
>         eststo stock_EI_old1: ivreg2 stock `controls' EIxPostxold EIxold EIxPost EI old post,  dkraay(10)
 30.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old1
 31.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old1
 32.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 1
 33.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 34.   local stderr_old = round(_se[elas_old]*1000)/1000
 35.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old1
 36.         estadd local yearFE      "No",   replace:   stock_EI_old1
 37.         estadd local stateFE     "No",   replace:   stock_EI_old1
 38.         
.         //Adding i.year
.         eststo stock_EI_old2: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year, dkraay(10) partial(i.year)
 39.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
 40.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
 41.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 2
 42.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 43.   local stderr_old = round(_se[elas_old]*1000)/1000
 44.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old2
 45.         estadd local yearFE      "Yes",   replace:   stock_EI_old2
 46.         estadd local stateFE     "No",   replace:   stock_EI_old2
 47. 
.         //Adding i.statenum
. *       eststo stock_EI_old3: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum i.statenum#c.year, 
> dkraay(10) partial(i.year i.statenum i.statenum#c.year)
.         eststo stock_EI_old3: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partial
> (i.year i.statenum)
 48.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3
 49.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3
 50.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3
 51.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 52.   local stderr_old = round(_se[elas_old]*1000)/1000
 53.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3
 54.         estadd local yearFE      "Yes",   replace:   stock_EI_old3
 55.         estadd local stateFE     "Yes",   replace:   stock_EI_old3
 56. 
.         //Replace ET dummy with ET rate
.         label var EIratecombinedxPostxold  "ET rate X post-2001 X old"
 57.         label var EIratecombinedxPost "ET rate X post-2001"
 58.         eststo stock_EIrate_old3: ivreg2 stock `controls' EIratecombinedxPostxold EIxold EIratecombinedxPost oldxPost EI old i.year
>  i.statenum, dkraay(10) partial(i.year i.statenum)
 59. *       eststo stock_EIrate_old3: ivreg2 stock `controls' EIratecombinedxPostxold EIratecombinedxPost oldxPost old i.year i.statenu
> m, dkraay(10) partial(i.year i.statenum)
.         estadd local yearFE      "Yes",   replace:   stock_EIrate_old3
 60.         estadd local stateFE     "Yes",   replace:   stock_EIrate_old3
 61. *pause  
.         
.         //Adding PIT
.         label var avgxPostxold  "PIT X post-2001 X old"
 62.         label var avgxold  "PIT X old"
 63.         label var avgxPost  "PIT X post-2001"
 64.         label var avg "PIT"
 65.         eststo stock_EI_old4: ivreg2 stock `controls' EIxPostxold EIxold EIxPost avgxPostxold avgxold avgxPost oldxPost EI avg old 
> i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 66.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
 67.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
 68.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 4
 69.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 70.   local stderr_old = round(_se[elas_old]*1000)/1000
 71.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old4
 72.         estadd local yearFE      "Yes",  replace:   stock_EI_old4
 73.         estadd local stateFE     "Yes",  replace:   stock_EI_old4
 74. 
.         //Control for ordinary high earners
.         egen pop_90to97_natl = total(pop_90to97), by(year old)
 75.         gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
 76.         label var topshr_90to97 "High earners share"
 77.         eststo stock_EI_old20: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old topshr_90to97 i.year i.statenum, 
> dkraay(10) partial(i.statenum i.year)
 78.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
 79.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
 80.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 20
 81.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 82.   local stderr_old = round(_se[elas_old]*1000)/1000
 83.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old20
 84.         estadd local yearFE      "Yes",  replace:   stock_EI_old20
 85.         estadd local stateFE     "Yes",  replace:   stock_EI_old20
 86.         // Try placebo check
.         *ivreg2 topshr_90to97 `controls' EIxPostxold EIxold EIxPost /*avgxPostxold avgxold avgxPost*/ oldxPost EI /*avg*/ old i.year i
> .statenum, dkraay(10) partial(i.statenum i.year)
.         *pause
.         
.         //wealth
.         eststo stock_EI_old7: ivreg2 `wealth' `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) part
> ial(i.statenum i.year)
 87.         if "`wealth'" == "logwealth" estadd local elas = round((_b[EIxPostxold])*1000)/1000,   replace:   stock_EI_old7
 88.         if "`wealth'" == "wealth"        estadd local elas = round((_b[EIxPostxold]/`baseline_wealth_old')*1000)/1000,   replace:  
>  stock_EI_old7
 89.         if "`wealth'" == "wealth_normalized" {
 90.                 estadd local elas_young = round((_b[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI_ol
> d7
 91.                 estadd local stderr_young = round((_se[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI
> _old7
 92.                 estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old')*1000)/1000,   rep
> lace:   stock_EI_old7
 93.                 nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old', post
 94.                 local stderr_old = round(_se[elas_old]*1000)/1000
 95.                 estadd local stderr_old = `stderr_old',   replace:   stock_EI_old7
 96.         }       
 97.         estadd local yearFE      "Yes",   replace:   stock_EI_old7
 98.         estadd local stateFE     "Yes",   replace:   stock_EI_old7
 99. *di "elas = " round((_b[EIxPostxold]/`baseline_wealth_normalized_old')*1000)/1000
. *pause
.         
.         //poisson
.         eststo stock_EI_old8: poisson stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year, vce(robust)
100.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old8
101.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old8
102.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 8
103.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
104.   local stderr_old = round(_se[elas_old]*1000)/1000
105.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old8
106.         estadd local stderr = round((_se[EIxPostxold]/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old8
107.         estadd local yearFE      "Yes",   replace:   stock_EI_old8
108.         estadd local stateFE     "Yes",   replace:   stock_EI_old8
109. 
.         //Change dep var to stock p.c.
.         eststo stock_EI_old9: ivreg2 stockpc `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) parti
> al(i.year i.statenum)
110.         estadd local elas_young = round((_b[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
111.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
112.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old')*1000)/1000,   replace:   stock_EI_o
> ld9
113.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old', post
114.   local stderr_old = round(_se[elas_old]*1000)/1000
115.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old9
116.         estadd local yearFE      "Yes",   replace:   stock_EI_old9
117.         estadd local stateFE     "Yes",   replace:   stock_EI_old9
118. 
.         //Instrument post-2001 EI with 2001 EI
.         levelsof abbr if year==2001 & EI==1, local(temp)
119.         gen EI2001 = 0
120.         foreach s of local temp {
121.                 di "`s'"
122.                 replace EI2001 = 1 if abbr == "`s'" & year>=2001
123.         }
124.         gen EI2001xPost = EI2001*post
125.         gen EI2001xPostxold = EI2001xPost*old
126.         gen EI2001xold = EI2001*old
127.         eststo stock_EI_old6: ivreg2 stock  `controls' oldxPost old i.year i.statenum (EI EIxold EIxPost EIxPostxold = EI2001 EI200
> 1xold EI2001xPost EI2001xPostxold), dkraay(10) partial(i.year i.statenum)
128.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
129.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
130.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 6
131.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
132.   local stderr_old = round(_se[elas_old]*1000)/1000
133.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old6
134.         estadd local yearFE       "Yes",   replace:    stock_EI_old6
135.         estadd local stateFE      "Yes",   replace:    stock_EI_old6
136.         
.         //Drop NY
.         eststo stock_EI_old3d: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="NY", dkr
> aay(10) partial(i.year i.statenum)
137.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3d
138.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3d
139.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3d
140.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
141.   local stderr_old = round(_se[elas_old]*1000)/1000
142.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3d
143.         estadd local yearFE      "Yes",   replace:   stock_EI_old3d
144.         estadd local stateFE     "Yes",   replace:   stock_EI_old3d
145. 
.         //Drop PA
.         eststo stock_EI_oldxPA: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="PA", dk
> raay(10) partial(i.year i.statenum)
146.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_oldxPA
147.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_oldxPA
148.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> xPA
149.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
150.   local stderr_old = round(_se[elas_old]*1000)/1000
151.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_oldxPA
152.         estadd local yearFE      "Yes",   replace:   stock_EI_oldxPA
153.         estadd local stateFE     "Yes",   replace:   stock_EI_oldxPA
154. 
.         //Drop each ET state (shown in Figure 1B) one at a time 
.         local i=1
155.         qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partial(i.year i.state
> num)
156.         lincom EIxPostxold
157.         gen beta=r(estimate) if _n==`i'
158.         gen ub = r(ub) if _n==`i'
159.         gen lb = r(lb) if _n==`i'
160.         gen n = `i' if _n==`i'
161.         label define n `i' "None", add
162.         foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
163.           local ++i
164.                 qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="`s'", dkraay(10)
>  partial(i.year i.statenum)
165.                 di "State: `s'"
166.                 lincom EIxPostxold
167.                 replace beta=r(estimate) if _n==`i'
168.                 replace ub = r(ub) if _n==`i'
169.                 replace lb = r(lb) if _n==`i'
170.                 *replace s = "`s'"
.                 replace n = `i' if _n==`i'
171.                 label define n `i' "`s'", add
172.         }
173.         label values n n
174.         #delimit ;
delimiter now ;
.         twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
>                 xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
>                 ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
>                 yscale(range(-3 1)) ylabel(-3(1)1)
>                 ;
175.         #delimit cr
delimiter now cr
.         graph export ../tables/DDD_drop_each_ET_state_drop0`drop'`v'.pdf, replace as(pdf)
176.         
.         //Drop phase-out period (2002-2004)
.         eststo stock_EI_old3e: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if inrange(year,20
> 02,2004)==0, dkraay(10) partial(i.year i.statenum)
177.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
178.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
179.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3e
180.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
181.   local stderr_old = round(_se[elas_old]*1000)/1000
182.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3e
183.         estadd local yearFE      "Yes",   replace:   stock_EI_old3e
184.         estadd local stateFE     "Yes",   replace:   stock_EI_old3e
185. 
.         //Use only post period
.         eststo stock_EI_old3f: ivreg2 stock `controls' EIxold EI old i.year i.statenum if year>`postyear', dkraay(10) partial(i.year i
> .statenum)
186.         estadd local elas = round((_b[EIxold]/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old3f
187.         estadd local yearFE      "Yes",   replace:   stock_EI_old3f
188.         estadd local stateFE     "Yes",   replace:   stock_EI_old3f
189.         
.         //Count Inheritance-tax-only cases as EI=0
.         replace EI = 1 if Ionly==1
190.         eststo stock_EI_old3c: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) par
> tial(i.year i.statenum)
191.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
192.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
193.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3c
194.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
195.   local stderr_old = round(_se[elas_old]*1000)/1000
196.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3c
197.         estadd local yearFE      "Yes",   replace:   stock_EI_old3c
198.         estadd local stateFE     "Yes",   replace:   stock_EI_old3c
199. 
.         //Restrict to top 100, 200, 300, or 10+ observations
.   local m = 10
200.   foreach x in Top100 Top200 Top300 10obs {
201.           use ./stata_data/StateyearOld`x'AnalysisDataset.dta, clear
202.         drop if stock==0 & "`drop'"=="yes"
203.                 sum stock if year==2001 & EI==1 & old==1        //yields baseline number of billionaires pre-`postyear'
204.                 local baseline_stock_old = r(mean)
205.                 eststo stock_EI_old`m': ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraa
> y(10) partial(i.year i.statenum)
206.                 estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
207.                 estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
208.                 estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stoc
> k_EI_old`m'
209.                 nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
210.                 local stderr_old = round(_se[elas_old]*1000)/1000
211.                 estadd local stderr_old = `stderr_old',   replace:   stock_EI_old`m'
212.                 estadd local yearFE      "Yes",   replace:   stock_EI_old`m'
213.                 estadd local stateFE     "Yes",   replace:   stock_EI_old`m'
214.                 local m = `m'+1
215.         }
216. 
.         
.         //Exclude Forbes pop under 40
.         use ./stata_data/StateyearOldU40AnalysisDataset.dta, clear
217. 
.         *`drop_condition'
.         eststo stock_EI_old40: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partia
> l(i.year i.statenum)
218.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old40
219.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old40
220.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 40
221.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
222.   local stderr_old = round(_se[elas_old]*1000)/1000
223.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old40
224.         estadd local yearFE      "Yes",   replace:   stock_EI_old40
225.         estadd local stateFE     "Yes",   replace:   stock_EI_old40
226. 
.         if "`drop'"=="yes" {
227.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old6 stock_EI_old9 stock_EI_old7 stock_EI_old3c stock_EI_old3e stock_EIrat
> e_old3
>         using ../tables/stock_EI_old`postyear'`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("" "" "I
> V" "Per Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions include year fixed effects. Note state fixed effects are absorbed by} \\" 
>                         "\multicolumn{9}{l}{\footnotesize old-young differencing. IV regression instruments for ET-state\textsubscript
> {s,t} and its interactions using a variable (and its corresponding interactions) equal to} \\"
>                         "\multicolumn{9}{l}{\footnotesize ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,200
> 1} for t$\geq$2001..} \\"
>                         "\multicolumn{9}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
228.                 #delimit cr             
delimiter now cr
.                 
.         }
229.         if "`drop'"=="no" {             
230.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old20 stock_EI_old6 stock_EI_old9 stock_EI_old7 stock_EI_old3c stock_EI_ol
> d3e stock_EIrate_old3
>         using ../tables/stock_EI_old`postyear'with0`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("" 
> "" "" "IV" "Per Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate")  /*drop(*year *cons)*/
>         noconstant label compress 
>                         substitute(topshr_90to97 "High Earners Share" EIratecombinedxPostxold "ET rate X post-2001 X old" EIratecombin
> edxPost "ET rate X post-2001" 0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{Std. Error}" elas
> _old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions include year fixed effects. Note state fixed effects are absorbed by} \\" 
>                         "\multicolumn{9}{l}{\footnotesize old-young differencing. IV regression instruments for ET-state\textsubscript
> {s,t} and its interactions using a variable (and its corresponding interactions) equal to} \\"
>                         "\multicolumn{9}{l}{\footnotesize ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,200
> 1} for t$\geq$2001..} \\"
>                         "\multicolumn{9}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
231.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old6 
>         using ../tables/stock_EI_old`postyear'with0_ForSlides`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) 
> mtitle("" "" "IV" "Per Capita" "Wealth" "Incl. inher. tax" "Drop NY" "Drop 2002-04")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} 
> \(p<0.01\)}  \end{tabular} }");
232.                 #delimit cr
delimiter now cr
.         }
233.         if "`drop'"=="yes" {
234.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old10 stock_EI_old11 stock_EI_old12 stock_EI_old13
>         using ../tables/stock_EI_old`postyear'TopX`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("Top
>  100" "Top200" "Top300" "10+ Obs")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions} \\" 
>                         "\multicolumn{5}{l}{\footnotesize include year fixed effects. State fixed effects are absorbed by old-young di
> fferencing.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
235.                         #delimit cr
delimiter now cr
.         }
236.         if "`drop'"=="no" {
237.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old10 stock_EI_old11 stock_EI_old12 stock_EI_old13
>         using ../tables/stock_EI_old`postyear'TopXwith0`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle
> ("Top 100" "Top200" "Top300" "10+ Obs")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions} \\" 
>                         "\multicolumn{5}{l}{\footnotesize include year fixed effects. State fixed effects are absorbed by old-young di
> fferencing.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
238.                 #delimit cr
delimiter now cr
.         }
239. 
.         restore
240. }
. */
. 
. /*
> /// B. FALSIFICATION TESTS USING INCOME TAX RATES
> use ./stata_data/StateyearoldAnalysisDataset.dta, clear
> foreach t of varlist avg state_tax {
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old, dkraay(10)
>         esttab using "../tables/stock_`t'_old.tex",replace  se star(* 0.10 ** 0.05 *** 0.01) label
> 
>         //Adding i.year
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old i.year, dkraay(10) partial(i.year)
>         esttab using "../tables/stock_`t'_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> 
>         sleep 1000
>         //Adding i.statenum
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old i.year i.statenum, dkraay(10) partial(i.year i.statenum)
>         esttab using "../tables/stock_`t'_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and S
> tate FE")
>         eststo clear
> 
>         use ./stata_data/StateyearOldU40AnalysisDataset.dta
>         eststo: ivreg2 stock `controls' `t'xPostxold `t'xold `t'xPost `t' old oldxPost i.year i.statenum, dkraay(10) partial(i.year i.
> statenum)
>         esttab using "../tables/stock_EI_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and St
> ate FE" "Drop Age $\leq$ 40")
>         eststo clear
> }
> */
. } // end run3D IF code

. 
. 
. /// 3. INDIVIDUAL LEVEL ANALYSIS
> if "$runINDIV" == "yes" {
. 
. use ./stata_data/IndivAnalysisDataset.dta, clear
. tsset nameid year, yearly
. gen oldXpost = old*post
. gen LEI = L.EI
. gen EIxPost = EI*post
. gen LEIxPost = L.EI*post
. gen avgxPost = avg*post
. label variable EI "ET-state"
. label variable LEI "ET-state(t-1)"
. label variable avg "PIT"
. label variable EIxPost "ET-state X post-`postyear'"
. label variable LEIxPost "ET-state(t-1) X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. 
. 
. /// A. INDIVIDUAL LEVEL SUMMARY STATISTICS
> eststo clear
. estpost sum Age_num wealth, detail
. esttab using "../tables/Summary_Stats_1.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median
> )) sd(fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label
. *stop
. sum Age_num if year>`postyear', detail
. local median = r(p50)
. 
. /// LIST TOP 10 AND  BOTTOM 10 BILLIONAIRES
> list Name Age_num NetWorthMill temp_city State if year==2017 & Forbes_Rank<=10
. list Name Age_num NetWorthMill temp_city State if year==2017 & Forbes_Rank>=388
. 
. /// DISPLAY WEALTH DISTRIBUTION AS OF 2017
> histogram wealth if year==2017, freq discrete xscale(range(0 90)) xlabel(0(10)90) graphregion(color(white))
. graph export ../tables/histogram_wealth2017.pdf, replace as(pdf)
. sum NetWorthMill if year==2017, detail
. gen rowlabel = "Net Worth (bill)"
. tabout rowlabel using "../tables/wealth_percentiles.tex", style(tex) h2(nil) bt replace sum cells(p1 wealth p10 wealth p25 wealth p50 
> wealth p75 wealth p90 wealth p99 wealth) f(1 1 1 1 1 1 1) oneway clab(1st 10th 25th 50th 75th 90th 99th)
. *stop
. 
. /// PLOT AVERAGE WEALTH OVER TIME
> preserve
. collapse (mean) wealth NetWorthMill (count) nameid, by(year)
. gen NetWorthBill = NetWorthMill/1000
. label variable NetWorthBill "Nominal"
. label variable wealth "Real (2017 $)"
. twoway bar nameid year, ytitle("Count") graphregion(color(white)) 
. twoway line wealth NetWorthBill year, ytitle("Billions ($)") graphregion(color(white)) ylabels(0(1)7) lpattern(solid dash) lwidth(thic
> k .) lcolor(navy red)
. graph export ../tables/avg_wealth_tsgraph.pdf, replace as(pdf)
. restore
. 
. /// Event-study of potential deaths
> /*
> preserve
> sort nameid year
> gen tag = (ourrank<=300 & Age_num>50 & nameid[_n-3]==nameid & nameid[_n-2]==nameid & nameid[_n-1]==nameid ///
>   & nameid[_n+1]~=nameid & year<2016 & (EI==1 | year<=2001) )
> br nameid year Age_num ourrank EI if tag
> pause
> restore
> */
. preserve
. import excel using ../data/raw_data/ForbesDeaths2.xlsx, firstrow clear sheet(Table_For_Export)
. drop Notes ResidenceStateForbes
. rename YearofDeath death_year
. rename StateofDeath state_of_death
. drop if death_year==.
. tempfile deaths
. save `deaths', replace
. restore
. 
. preserve
. *drop _merge
. merge 1:1 Name year using `deaths', keep(1 3)
. gen death = (_merge==3)
. drop _merge
. sum death_year if death==1
. sum death_year if death==1 & abbr~=state_of_death
. sum death_year if death==1 & abbr~=ResidenceStateObituary
. sum death_year if death==1 & state_of_death~=ResidenceStateObituary
. sum death_year if death==1 & abbr==state_of_death & death_married==0
. sum death_year if death==1 & abbr==ResidenceStateObituary & death_married==0
. sum death_year if death==1 & death_married==0 & year>2001
. sum death_year if death==1 & death_married==0 & inrange(year,2001,2003)
. sum death_year if death==1 & death_married==0 & year>2001 & EI==1
. sum death_year if death==1 & death_married==0 & year>2001 & Ionly==0
. *pause 
. gen tag1 = (death==1 & state_of_death==abbr & death_married==0)
. gen tag2 = (death==1 & state_of_death==abbr)
. gen tag3 = (death==1)
. gen tag4 = (death==1 & death_married==0)
. sum tag*
. sum wealth if tag4==1 & (year>2004 & EI==0)==0
. *pause
. 
. *collapse (sum) tag*, by(state_of_death death_year)
. *rename state_of_death abbr
. collapse (sum) tag*, by(ResidenceStateObituary death_year)
. rename ResidenceStateObituary abbr
. *collapse (sum) tag*, by(abbr death_year)
. 
. rename death_year year
. keep if -tag3<0
. *br year abbr tag4
. 
. tempfile deathcounts
. save `deathcounts'
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. drop _merge
. merge 1:1 abbr year using `deathcounts', keep(1 3) nogen
. tsset statenum year, yearly
. foreach i of num 1/4 {
  2.         replace tag`i' = 0 if tag`i'==. 
  3.         replace tag`i' = 1 if -tag`i'<-1
  4.         replace tag`i' = 0 if year>2004 & EI==0
  5.         gen dtag`i' = D.tag`i' 
  6. }
. 
. replace EI_Tax = 0 if EI_Tax==.
. replace EI_Tax = (EI_Tax/cpi)/1000 //convert to millions
. sum EI_Tax if inrange(year,1985,2015)
. di (165*35)/(r(mean)*r(N))  *100   //calculate share of total EI tax revenues accounted for by forbes 400 deaths
. *pause
. gen dEI_Tax = D.EI_Tax
. gen lnEI_Tax = ln(EI_Tax)
. gen dlnEI_Tax = D.lnEI_Tax
. gen TaxXEI = Total_Tax - EI_Tax
. gen lnTaxXEI = ln(TaxXEI)
. gen dlnTaxXEI = lnTaxXEI - L.lnTaxXEI
. reg dEI_Tax L(-3/5).dtag4
. xtreg dEI_Tax L(-3/5).dtag4, fe
. reg dEI_Tax i.year L(-3/5).dtag4
. xtreg dEI_Tax i.year L(-3/5).dtag4, fe
. gen Post = (year>`postyear')
. capture drop cEI_Tax* eventtime b b_*
. gen eventtime = .
. gen b = .
. gen b_lb = .
. gen b_ub = .
. foreach h of num 1/5 {
  2.   gen cEI_TaxL`h' = 0
  3. *       replace cEI_TaxL`h' = (L`h'.EI_Tax - L.EI_Tax)
.         replace cEI_TaxL`h' = (L`h'.EI_Tax)
  4.         xtreg cEI_TaxL`h' i.year tag4, fe
  5. *       areg L`h'.dEI_Tax dtag4, absorb(year)
.         local i = 6-`h'
  6.   replace eventtime = -`h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10. }
. *replace eventtime = -1 if _n==5
. *replace b = 0 if _n==5
. *replace b_lb = 0 if _n==5
. *replace b_ub = 0 if _n==5
. foreach h of num 0/12 {
  2.   gen cEI_TaxF`h' = 0
  3. *       replace cEI_TaxF`h' = (F`h'.EI_Tax - L.EI_Tax)
.         replace cEI_TaxF`h' = (F`h'.EI_Tax)
  4.         xtreg cEI_TaxF`h' i.year tag4, fe
  5. *       areg F`h'.dEI_Tax dtag4, absorb(year)
.   local i = 6 + `h'
  6.   replace eventtime = `h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10. }
. #delimit ;
delimiter now ;
. twoway 
>         (connected b eventtime if eventtime<=-1, color(black))  (connected b eventtime if eventtime>=-1 & eventtime<6, color(black) )
>         (line b_lb eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_lb eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash))
>         (line b_ub eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_ub eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash)), 
>                 legend(off) ytitle(State E&I Tax Revenues (Millions of 2017 $)) xtitle(Years Since Death (t=0)) yscale(range(0 250)) y
> label(0 50 100 150 200 250, nogrid)
>                 yline(99,lcolor(gs10)) graphregion(color(white)) plotregion(color(white))
> ;
. #delimit cr
delimiter now cr
. graph export ../tables/death_event_study.pdf, replace as(pdf)
. 
. *levelsof abbr if -tag4<0, local(temp)
. twoway connected EI_Tax year if abbr=="OH", xline(1988 1994 1998 2011, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregio
> n(color(white)) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. *connected dlnTax dlnTaxXEI year if abbr=="OH" , xline(1994)
. twoway connected EI_Tax year if abbr=="OK", xline(2003, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../tables/death_GaylordOK.pdf, replace as(pdf)
. *line dlnTax dlnTaxXEI year if abbr=="OK" , xline(2003)
. twoway connected EI_Tax year if abbr=="AR", xline(1995, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../tables/death_Bud_WaltonAR.pdf, replace as(pdf)
. *line dlnTax dlnTaxXEI year if abbr=="AR" , xline(1995)
. *twoway connected EI_Tax year if abbr=="CA", xline(2003, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white)
> ) color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. *twoway connected EI_Tax year if abbr=="NY", xline(2004, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white)
> ) color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. restore
. */
. 
. 
. /// C. FALSIFICATION TEST: PROB OF CHOOSING HIGH-MTR STATE
> gen Age_num_trunc = Age_num
. *replace Age_num_trunc = 90 if Age_num_trunc>=90 & Age_num_trunc~=.  //lumping together for graphing purposes
. replace Age_num_trunc = 85 if Age_num_trunc>=85 & Age_num_trunc~=.  //lumping together for graphing purposes
. *replace Age_num_trunc = 40 if Age_num_trunc<=40 & Age_num_trunc~=.
. 
. gen highMTR = (avg > .03)
. binscatter highMTR Age_num_trunc if Age_num>40 & post==0, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 45 5
> 0 55 60 65 70 75 80 85 "85+")  ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
. graph export ../tables/binscatteravg_Age_pre`postyear'.pdf, replace as(pdf)
. eststo highMTR_age1: reghdfe highMTR Age_num if Age_num>40 & post==0, cluster(stateyear) absorb(year)
. estadd local stateFE     "No",   replace:   highMTR_age1
. estadd local indivFE     "No",   replace:   highMTR_age1
. estadd local yearFE      "Yes",   replace:   highMTR_age1
. 
. binscatter highMTR Age_num_trunc if Age_num>40 & post==1, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 45 5
> 0 55 60 65 70 75 80 85 "85+") ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
. graph export ../tables/binscatteravg_Age_post`postyear'.pdf, replace as(pdf)
. eststo highMTR_age2: reghdfe highMTR Age_num if Age_num>40 & post==1, cluster(stateyear) absorb(year)
. estadd local stateFE     "No",   replace:   highMTR_age2
. estadd local indivFE     "No",   replace:   highMTR_age2
. estadd local yearFE      "Yes",   replace:   highMTR_age2
. 
. eststo highMTR_age3: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(stateyear) absorb(year)
. estadd local stateFE     "No",   replace:   highMTR_age3
. estadd local indivFE     "No",   replace:   highMTR_age3
. estadd local yearFE      "Yes",   replace:   highMTR_age3
. 
. eststo highMTR_age4: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum year)
. estadd local stateFE     "Yes",   replace:   highMTR_age4
. estadd local indivFE     "No",   replace:   highMTR_age4
. estadd local yearFE      "Yes",   replace:   highMTR_age4
. 
. eststo highMTR_age5: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(nameid) absorb(statenum nameid year)
. estadd local stateFE     "Yes",   replace:   highMTR_age5
. estadd local indivFE     "Yes",   replace:   highMTR_age5
. estadd local yearFE      "Yes",   replace:   highMTR_age5
. 
. sleep 1000
. 
. #delimit ;
delimiter now ;
. esttab highMTR_age1 highMTR_age2 highMTR_age3 highMTR_age4 
>      using ../tables/highMTR_age`postyear'.tex, replace se scalars(yearFE stateFE ) mtitle("1982-`postyear'" "`py1'-2017" "1982-2017" 
> "1982-2017") 
>      noconstant label compress substitute(\_ _ yearFE "Year Fixed Effects" stateFE "State Fixed Effects" ) star(* 0.1 ** 0.05 *** 0.01
>  )
>          postfoot("\hline \hline" "\multicolumn{4}{l}{\footnotesize Standard errors (in parentheses) two-way clustered by individual a
> nd by state.} \\" 
>          "\multicolumn{4}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. */
. 
. 
. /// B. SCATTERPLOTS BY AGE
> 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==0 /*& inlist(abbr,"CA")==0*/, discrete reportreg yscale(range(0 .55)) xlabel(4
> 0 45 50 55 60 65 70 75 80 85 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("A
> ge") 
. graph export ../tables/binscatterEI_Age_pre`postyear'.pdf, replace as(pdf)
. *eststo EI_age1: reghdfe EI Age_num if Age_num>40 & post==0 , cluster(stateyear nameid) absorb(year)
. *eststo EI_age1: reghdfe EI Age_num if post==0, cluster(stateyear nameid) absorb(year)
. eststo EI_age1: ivreg2 EI Age_num i.year if post==0, dkraay(2)  partial(i.year)
. estadd local stateFE     "No",   replace:   EI_age1
. estadd local indivFE     "No",   replace:   EI_age1
. estadd local yearFE      "Yes",   replace:   EI_age1
. ivreg2 EI Age_num_trunc i.year if post==0, dkraay(2)  partial(i.year)
. local pretrend = _b[Age_num_trunc]
. qui reghdfe EI Age_num_trunc if Age_num_trunc>40 & post==0 & inlist(abbr,"CA")==0, cluster(stateyear nameid) absorb(year)
. local pretrendNoCA = _b[Age_num_trunc]
. *pause
. 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==1 /*& inlist(abbr,"CA")==0*/, discrete reportreg yscale(range(0 .55)) xlabel(4
> 0 45 50 55 60 65 70 75 80 85 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("A
> ge") 
. graph export ../tables/binscatterEI_Age_post`postyear'.pdf, replace as(pdf)
. *eststo EI_age2: reghdfe EI Age_num if Age_num>40 & post==1 /*& inlist(abbr,"CA")==0*/, cluster(stateyear nameid) absorb(year)
. *eststo EI_age2: reghdfe EI Age_num if post==1 /*& inlist(abbr,"CA")==0*/, cluster(stateyear nameid) absorb(year)
. eststo EI_age2: ivreg2 EI Age_num i.year if post==1, dkraay(2) partial(i.year)
. estadd local stateFE     "No",   replace:   EI_age2
. estadd local indivFE     "No",   replace:   EI_age2
. estadd local yearFE      "Yes",   replace:   EI_age2
. ivreg2 EI Age_num_trunc i.year if post==1, dkraay(2)  partial(i.year)
. local posttrend = _b[Age_num_trunc]
. reghdfe EI Age_num_trunc if Age_num_trunc>40 & post==1 & inlist(abbr,"CA")==0, cluster(stateyear nameid) absorb(year)
. local posttrendNoCA = _b[Age_num_trunc]
. *pause
. 
. 
. /*
> *****************   NEW ******************
> ivreg2 EI Age_num officer_tied c.Age_num#i.officer_tied if post==0, cluster(stateyear nameid)
> ivreg2 EI Age_num officer_tied c.Age_num#1.officer_tied if post==1, cluster(stateyear nameid)
> ivreg2 EI Age_num our_wealthy c.Age_num#1.our_wealthy if post==1, cluster(stateyear nameid)
> ******************************************
> */
. 
. eststo EI_age3: ivreg2 EI AgeXpost Age_num i.year, dkraay(2)  partial(i.year)
. *eststo EI_age3: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(year)
. *eststo EI_age3: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(year)
. estadd local stateFE     "No",   replace:   EI_age3
. estadd local indivFE     "No",   replace:   EI_age3
. estadd local yearFE      "Yes",   replace:   EI_age3
. 
. eststo EI_age4: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. *eststo EI_age4: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum year) keepsingletons
. *eststo EI_age4: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(statenum year) keepsingletons
. estadd local stateFE     "Yes",  replace:   EI_age4
. estadd local indivFE     "No",   replace:   EI_age4
. estadd local yearFE      "Yes",   replace:   EI_age4
. 
. /*
> eststo EI_age6: reghdfe EI AgeXpost Age_num company_tied, cluster(stateyear nameid) absorb(statenum year) keepsingletons
> estadd local stateFE     "Yes",  replace:   EI_age6
> estadd local indivFE     "No",   replace:   EI_age6
> estadd local yearFE      "Yes",   replace:   EI_age6
> */
. 
. *eststo EI_age5: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(nameid) absorb(statenum nameid year) keepsingletons
. eststo EI_age5: ivreg2 EI AgeXpost Age_num i.statenum i.year i.nameid, dkraay(2)  partial(i.statenum i.year i.nameid)
. *eststo EI_age5: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(statenum nameid year) keepsingletons
. estadd local stateFE     "Yes",   replace:   EI_age5
. estadd local indivFE     "Yes",   replace:   EI_age5
. estadd local yearFE      "Yes",   replace:   EI_age5
. egen temp = mean(statenum) if e(sample), by(nameid)
. codebook nameid if temp~=statenum & e(sample)
. *pause
. 
. local py1 = `postyear'+1
. if `postyear'==2001 {
.         local py1 = 2003  //no data in 2002
. }
. 
. #delimit ;
delimiter now ;
. esttab EI_age1 EI_age2 EI_age3 EI_age4 EI_age5 highMTR_age4 
>      using ../tables/EI_age`postyear'.tex, replace se scalars(yearFE stateFE indivFE) mtitle("1982-`postyear'" "`py1'-2017" "1982-2017
> " "1982-2017" "1982-2017" "High MTR") 
>      noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" indivFE "Individual Fixed Ef
> fects") star(* 0.1 ** 0.05 *** 0.01 )
>          postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors (in parentheses).} \\" 
>          "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. 
. /// CONSTRUCT TABLE B6(C)
> preserve
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>100     
. eststo EI_age10: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>200     
. eststo EI_age11: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>300     
. eststo EI_age12: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. eststo EI_age13: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. #delimit ;
delimiter now ;
. esttab EI_age10 EI_age11 EI_age12 EI_age13
>         using ../tables/EI_age`postyear'TopX.tex, replace se mtitle("Top 100" "Top200" "Top300" "10+ Obs" ) /*drop(*year *cons)*/
>         noconstant label compress substitute(\_ _ ) star(* 0.1 ** 0.05 *** 0.01 )
>         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors in parentheses.} \\" 
>         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. restore
. 
. /*
> gen moveNonETtoET
> reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum nameid year) keepsingletons
> */
. 
. /*
> foreach t of num 1982/2001 2003/2017 {
>         cap binscatter EI Age_num if Age_num>40 & year==`t', discrete yscale(range(0 .55)) ylabel(0 .2 .4 .6 .8 1) ytitle("Fraction of
>  Age Group Living in State with Estate Tax") xtitle("Age") title("`t'")
>         graph export "s:/dan/Paper - Forbes/tables/binscatterEI_Age_`t'.png", replace as(png)
>         local input `input' binscatterEI_Age_`t'.png
> }
> */
. *shell convert -delay 150 -loop 0 `input' ../tables/ETvAGE.gif  //convert in linux command
. *shell rm -fR ../tables/*.png
> */
. 
. gen y = _n + 1981 if _n <= 2017 - 1981
. label variable y "year"
. gen b = .
. gen b_lb = .
. gen b_ub = .
. gen c = .
. gen c_lb = .
. gen c_ub = .
. *replace Age_num = Age_num - 40
. foreach y of num 1982/2001 2003/2017 {
  2.         *di "year = " `y'
.         qui ivreg2 EI Age_num_trunc if Age_num_trunc>40  & year==`y' /*& inlist(abbr,"CA")==0*/, cluster(stateyear)
  3.         replace c = _b[_cons] if _n==`y'-1981
  4.         replace c_lb = _b[_cons] - 1.65*_se[_cons] if _n==`y'-1981
  5.         replace c_ub = _b[_cons] + 1.65*_se[_cons] if _n==`y'-1981
  6.         replace b = _b[Age_num] if _n==`y'-1981
  7.         replace b_lb = _b[Age_num] - 1.65*_se[Age_num] if _n==`y'-1981
  8.         replace b_ub = _b[Age_num] + 1.65*_se[Age_num] if _n==`y'-1981
  9. }
. #delimit ;
delimiter now ;
. twoway (rcap c_lb c_ub y, lcolor(ltblue)) (scatter c y, mcolor(blue)) 
>         if y<=2017, yline(0, lcolor(black)) xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white)) plotregion(colo
> r(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Intercept for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. graph export ../tables/InterceptByyear.pdf, replace as(pdf);
. *gen pretrend = `pretrend' if y<2002;
. *gen posttrend = `posttrend' if y>2002;
. *pause;
. egen pretrend = mean(b) if y<2002;
. egen posttrend = mean(b) if y>2002;
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) /*(line pretrend posttrend y, lcolor(maroon maroon) lpattern(das
> h dash))*/
>         if y<=2017, yline(0, lcolor(black) lwidth(vthin)) xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white)) p
> lotregion(color(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. graph export ../tables/AgeGradientByyearV1.pdf, replace as(pdf);
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrend posttrend y, lcolor(maroon maroon) lpattern(dash 
> dash))
>         if y<=2017, /*yline(0, lcolor(black) lpattern(dot))*/ xline(`postyear'(.1)2004, lwidth(thick) lcolor(gs15)) xline(2001, lcolor
> (black)) graphregion(color(white)) plotregion(color(white)) legend(off) 
>         /*note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)*/
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearV2.pdf, replace as(pdf);
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrend posttrend y, lcolor(maroon maroon) lpattern(dash 
> dash))
>         if y<=2017, yline(0, lcolor(black) lwidth(vthin)) /*xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15))*/ xline(`postyear') graph
> region(color(white)) plotregion(color(white)) legend(off) 
>         /*note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)*/
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearV3.pdf, replace as(pdf);
. #delimit cr
delimiter now cr
. 
. foreach y of num 1982/2001 2003/2017 {
  2.         *di "year = " `y'
.         qui ivreg2 EI Age_num if Age_num>40 & year==`y' & inlist(abbr,"CA")==0, cluster(stateyear)
  3.         replace c = _b[_cons] if _n==`y'-1981
  4.         replace c_lb = _b[_cons] - 1.65*_se[_cons] if _n==`y'-1981
  5.         replace c_ub = _b[_cons] + 1.65*_se[_cons] if _n==`y'-1981
  6.         replace b = _b[Age_num] if _n==`y'-1981
  7.         replace b_lb = _b[Age_num] - 1.65*_se[Age_num] if _n==`y'-1981
  8.         replace b_ub = _b[Age_num] + 1.65*_se[Age_num] if _n==`y'-1981
  9. }
. gen pretrendNoCA = `pretrendNoCA' if y<=2001
. gen posttrendNoCA = `posttrendNoCA' if y>2002
. #delimit ;
delimiter now ;
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrendNoCA posttrendNoCA y, lcolor(maroon maroon) lpatte
> rn(dash dash))
>         if y<=2017, /*yline(0, lcolor(black) lwidth(vthin))*/ xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white
> )) plotregion(color(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearNoCA.pdf, replace as(pdf);
. #delimit cr
delimiter now cr
. 
. *replace Age_num = Age_num + 40
. */
. }  //end runINDIV IF code

. 
. 
. /// 4. ANALYSES OF MOVERS
> if "$runMOVERS" == "yes" {
. use ./stata_data/IndivAnalysisDataset.dta, clear
. 
. *drop if inlist(abbr,"IL","HI","DE")  //drop these states to see if their ET adoption in 2009 and 2010 affects results 
. *drop if inlist(abbr,"KS","OK")  //drop these states to see if their ET adoption in 2009 and 2010 affects results 
. *replace EI=1 if abbr=="NY"
. 
. levelsof abbr if year==2001 & EI==1, local(EI2001states)
. levelsof abbr if year==1992 & EI==1, local(EI1992states)
. sort nameid year
. keep nameid year abbr EI Age_num
. reshape wide abbr EI Age_num, i(nameid) j(year)
. gen one=1
. 
. preserve
. drop if abbr2001 == ""  //keep only individuals observed in 2001 (N=376)
. *drop if Age_num2001 >= 65
. 
. local startyr = 2001
. matrix A = J(9,2009-`startyr'-1 + 8,.)
. matrix colnames A=1993 1994 1995 1996 1997 1998 1999 2000 2003 2004 2005 2006 2007 2008 2009
. /*
> matrix rownames A="\%_of_2001" "2" "3" ///
> "4" "5" "6" "7" "8" "9"
> */
. 
. matrix rownames A="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. */
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1993/2000 {
  4.                 local j = `endyr'-1992
  5.                 qui sum one if abbr`endyr'~="" & Age_num2001 `ifc'
  6.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
  7.                 local num_E`startyr' = r(N)
  8.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
  9.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & strmatch(`EI`startyr'
> states',abbr`endyr')==0 & Age_num2001 `ifc'
.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix A[`m'+1,`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 13.                 local num_N`startyr' = r(N)
 14.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 15.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr')& strmatch(`EI`startyr'
> states',abbr`endyr')==1 & Age_num2001 `ifc'
.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix A[`m',`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row2' - `row1'
 19.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.                 *pause
.         }
 24.         foreach endyr of num 2003/2009 {
 25.                 local j = `endyr'-2002 + 8 
 26.                 qui sum one if abbr`endyr'~="" & Age_num2001 `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
 28.                 local num_E`startyr' = r(N)
 29.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 30.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & strmatch(`EI`startyr'
> states',abbr`endyr')==0 & Age_num2001 `ifc'
. *               br name abbr`endyr' abbr`startyr' Age_num2001 if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=a
> bbr`endyr') & Age_num2001 `ifc'
. *               pause
.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix A[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 34.                 local num_N`startyr' = r(N)
 35.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 36.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr')& strmatch(`EI`startyr'
> states',abbr`endyr')==1 & Age_num2001 `ifc'
.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix A[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list A
. matrix A1 = A[1..3,1..15]
. matrix A2 = A[4..6,1..15]
. matrix A3 = A[7..9,1..15]
. *pause
. outtable using "../tables/mover_table1a", mat(A1) replace center format(%3.2f)
. outtable using "../tables/mover_table2a", mat(A2) replace center  format(%3.2f)
. outtable using "../tables/mover_table3a", mat(A3) replace center  format(%3.2f)
. foreach i of num 1/3 {
  2.         clear
  3.         svmat A`i'
  4.         gen type = _n
  5.         reshape long A`i', i(type) j(year)
  6.         replace year = year+1992
  7.         replace year = year+2 if year>=2001
  8.         tempfile A`i'
  9.         save `A`i''
 10. }
. merge 1:1 type year using `A1', keep(3) nogen
. merge 1:1 type year using `A2', keep(3) nogen
. rename A1 all
. rename A2 over64
. rename A3 under65
. gen flow = "fromET" if type==1
. replace flow = "toET" if type==2
. replace flow = "Difference" if type==3
. drop type
. reshape wide all over64 under65, i(year) j(flow) string
. insobs 1
. replace year=2001 if year==.
. sort year
. twoway connected allfromET alltoET year if inrange(year,1993,2009), legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to
>  ET") rows(1) )  graphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 1
> 5 20 25 30 35 40 45, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmiss
> ing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_all1.pdf, replace as(pdf)
. *pause
. twoway connected allDifference year,  legend(  order(1 "Prob moved from ET to non-ET minus Prob moved from non-ET to ET") rows(1) )  g
> raphregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, lcol
> or(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993
> (2)2009)
. graph export ../tables/FlowsByYear_all2.pdf, replace as(pdf)
. *pause
. 
. twoway connected over64fromET over64toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  gra
> phregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45,
>  nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, 
> lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_over641.pdf, replace as(pdf)
. *pause
. twoway connected over64Difference year,  legend(  order(1 "Prob moved from ET to non-ET minus Prob moved from non-ET to ET") rows(1) )
>   graphregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, l
> color(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1
> 993(2)2009)
. graph export ../tables/FlowsByYear_over642.pdf, replace as(pdf)
. *pause
. 
. twoway connected under65fromET under65toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  g
> raphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 4
> 5, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0
> , lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_under651.pdf, replace as(pdf)
. *pause
. twoway connected under65Difference year,  legend(  order(1 "% moved from ET to non-ET minus % moved from non-ET to ET") rows(1) )  gra
> phregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, lcolor
> (black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993(2
> )2009)
. graph export ../tables/FlowsByYear_under652.pdf, replace as(pdf)
. *pause
. restore
. 
. 
. /// REPEAT EXERCISE WITH 1997 AS BASE YEAR
> preserve
. local startyr = 1997
. keep if abbr`startyr' ~= ""     //keep only individuals observed in startyr
. *pause
. 
. matrix B = J(9,2008-`startyr' -1,.)
. matrix colnames B=1998 1999 2000 2001   2003 2004 2005 2006 2007 2008
. 
. matrix rownames B="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. 
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1998/2001 {
  4.                 local j = `endyr'-`startyr' 
  5.                 sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
  6.                 sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
  7.                 *pause
.                 local num_E`startyr' = r(N)
  8.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc' & abbr`endyr'~="CA"
  9.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix B[`m',`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 13.                 local num_N`startyr' = r(N)
 14.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc' & abbr`endyr'~="CA"
 15.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix B[`m'+1,`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row1' - `row2'
 19.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.         *       pause
.         }
 24.         foreach endyr of num 2003/2008 {
 25.                 local j = `endyr'-`startyr' -1
 26.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 28.                 local num_E`startyr' = r(N)
 29.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc' & abbr`endyr'~="CA"
 30.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix B[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 34.                 local num_N`startyr' = r(N)
 35.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc' & abbr`endyr'~="CA"
 36.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix B[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list B
. matrix B1 = B[1..3,1..10]
. matrix B2 = B[4..6,1..10]
. matrix B3 = B[7..9,1..10]
. *pause
. outtable using "../tables/mover_placebo_table1", mat(B1) replace center format(%3.2f)
. outtable using "../tables/mover_placebo_table2", mat(B2) replace center  format(%3.2f)
. outtable using "../tables/mover_placebo_table3", mat(B3) replace center  format(%3.2f)
. restore
. 
. 
. 
. /// REPEAT WITH 1991 AS BASE YEAR
> preserve
. local startyr = 1991
. drop if abbr`startyr' == ""     //keep only individuals observed in 2001 (N=376)
. 
. matrix B = J(9,2000-`startyr' + 6,.)
. matrix colnames B=1985 1986 1987 1988 1989 1990    1992 1993 1994 1995 1996 1997 1998 1999 2000
. 
. matrix rownames B="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. 
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1985/1990 {
  4.                 local j = `endyr'-1984
  5.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
  6.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc'
  7.                 local num_E`startyr' = r(N)
  8.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc'
  9.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix B[`m'+1,`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc'
 13.                 local num_N`startyr' = r(N)
 14.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc'
 15.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix B[`m',`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row2' - `row1'
 19.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.         *       pause
.         }
 24.         foreach endyr of num 1992/2000 {
 25.                 local j = `endyr'-`startyr' + 6 
 26.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc'
 28.                 local num_E`startyr' = r(N)
 29.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc'
 30.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix B[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc'
 34.                 local num_N`startyr' = r(N)
 35.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc'
 36.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix B[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list B
. matrix B1 = B[1..3,1..15]
. matrix B2 = B[4..6,1..15]
. matrix B3 = B[7..9,1..15]
. sleep 1000
. outtable using "../tables/mover_placebo_table1", mat(B1) replace center format(%3.2f)
. outtable using "../tables/mover_placebo_table2", mat(B2) replace center  format(%3.2f)
. outtable using "../tables/mover_placebo_table3", mat(B3) replace center  format(%3.2f)
. restore
. 
. 
. local p = 5
. foreach ifc in old~=. old==1 old==0 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         keep if `ifc'
  4.   tsset nameid year, yearly
  5.         gen move = 0
  6.         replace move = 1 if L`p'.statenum~=statenum & L`p'.statenum~=.
  7.         gen moveEItoNonEI = 0 if move==0
  8.         replace moveEItoNonEI = 1 if move==1 & L`p'.EI==1 & EI==0
  9.         gen moveNonEItoEI = 0 if move==0
 10.         replace moveNonEItoEI = 1 if move==1 & L`p'.EI==0 & EI==1
 11.         graph bar (mean) moveEItoNonEI moveNonEItoEI if year>=1982+`p' & year~=(2002+`p'), over(year, label(angle(vertical)))
 12.         if "`ifc'"=="old~=." graph export ../tables/MovesByYear_all.pdf, replace as(pdf)
 13.         if "`ifc'"=="old==1" graph export ../tables/MovesByYear_old.pdf, replace as(pdf)
 14.         if "`ifc'"=="old==0" graph export ../tables/MovesByYear_young.pdf, replace as(pdf)
 15.         gen post2001 = 0 if year<2001
 16.         replace post2001 = 1 if year>=2001
 17.         bysort post2001: sum moveEItoNonEI moveNonEItoEI
 18.         pause
 19. }
. 
. /*
> levelsof abbr if year==2001 & EI==1, local(temp)
> gen EI2001 = 0
> foreach s of local temp {
>                 di "`s'"
>                 replace EI2001 = 1 if abbr == "`s'"
> }
> levelsof abbr if year==2004 & EI==1, local(temp)
> gen EI2004 = 0
> foreach s of local temp {
>                 di "`s'"
>                 replace EI2004 = 1 if abbr == "`s'"
> }
> 
> gen move = .
> replace move = 1 if (statenum~=statenum[_n-1] & nameid==nameid[_n-1] & year-year[_n-1]<=2)
> replace move = 0 if (statenum==statenum[_n-1] & nameid==nameid[_n-1] & year-year[_n-1]<=2)
> gen moveEItoNonEI = 0 if move==1
> replace moveEItoNonEI = 1 if (move==1 & EI==0 & EI[_n-1]==1)
> gen moveNonEItoEI = 0 if move==1
> replace moveNonEItoEI = 1 if (move==1 & EI==1 & EI[_n-1]==0)
> gen movetoEI = 0
> replace movetoEI = 1 if move==1 & EI==1
> gen movetoNonEI = 0
> replace movetoNonEI = 1 if move==1 & EI==0
> sum move
> di "# of moves: " r(mean)*r(N)
> bysort post: sum move*
> *stop
> 
> egen moveever = max(move), by(nameid)
> sort nameid year
> *br nameid year abbr if moveever==1
> *pause
> gen movepost = .
> replace movepost = 1 if (statenum~=statenum[_n-1] & nameid==nameid[_n-1] & post)
> replace movepost = 0 if (statenum==statenum[_n-1] & nameid==nameid[_n-1] & post)
> egen moveeverpost = max(movepost), by(nameid)
> 
> bysort post: sum EI if move ==1
> bysort post: sum EI2001 if move==1 
> reg EI2001 i.post#i.old if move==1
> gen post2004 = (year>2004)
> reg EI2004 i.post2004#i.old if move==1
> reg EI i.post#i.old if move==1
> 
> replace moveNonEItoEI = 0 if moveNonEItoEI==.
> replace moveEItoNonEI = 0 if moveEItoNonEI==.
> 
> areg move LEI LEIxPost post, absorb(statenum)
> reg move LEI LEIxPost post
> areg movetoNonEI LEI LEIxPost post, absorb(statenum)
> reg movetoNonEI LEI LEIxPost post
> *pause
> areg movetoNonEI LEI LEIxPost post if move==1, absorb(statenum)
> reg movetoNonEI LEI LEIxPost post if move==1
> *pause
> areg movetoEI LEI LEIxPost post , absorb(statenum)
> reg movetoEI LEI LEIxPost post
> *pause
> areg movetoEI LEI LEIxPost post if move==1, absorb(statenum)
> reg movetoEI LEI LEIxPost post if move==1
> *pause 
> 
> reghdfe moveNonEItoEI post, absorb(year statenum nameid)
> reghdfe moveNonEItoEI post if move==1, absorb(year statenum nameid)
> stop
> 
> 
> sort nameid year
> local endyear = 2006
> sum EI if year==`endyear' & EI[_n - (`endyear'-2001)+1] == 1 & nameid[_n]==nameid[_n-(`endyear'-2001)+1] & year[_n-(`endyear'-2001)+1]
> ==2001
> local fractionA = 1 - r(mean)  // fraction in E state in 2001 that moved to N state by 2010
> sum EI if year==`endyear' & EI[_n - (`endyear'-2001)+1] == 0 & nameid[_n]==nameid[_n-(`endyear'-2001)+1] & year[_n-(`endyear'-2001)+1]
> ==2001
> local fractionB = r(mean)       // fraction in non-E state in 2001 that moved to E state by 2010
> sum EI if year==2001 & EI[_n - (`endyear'-2001)] == 1 & nameid[_n]==nameid[_n-(`endyear'-2001)] & year[_n-(`endyear'-2001)]==1996
> local fractionC = 1 - r(mean)  // fraction in E state in 1992 that moved to N state by 2001
> sum EI if year==2001 & EI[_n - (`endyear'-2001)] == 0 & nameid[_n]==nameid[_n-(`endyear'-2001)] & year[_n-(`endyear'-2001)]==1996
> local fractionD = r(mean)       // fraction in non-E state in 1992 that moved to E state by 2001
> local diff1 =  `fractionA' - `fractionC'
> local diff2 =  `fractionB' - `fractionD'
> di "diff1 =  `diff1'"
> di "diff2 =  `diff2'"
> di "diff1 - diff2 =  " `diff1' - `diff2'
> 
> 
> /// conditional on living in E state in 2001, what fraction of those in year t live in E state, for t from 1990 to 2017
> matrix A = J(50,3,.)
> foreach t of num 1990/2000 {
>         preserve
>         keep if inlist(year,`t',2001)
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n+1] == 1 & nameid==nameid[_n+1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n+1] == 0 & nameid==nameid[_n+1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n+1] & nameid==nameid[_n+1])
>         *br nameid year EI inEin2001 moved
>         *pause
>         keep if year==`t' & inEin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',1] = 1-r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> foreach t of num 2003/2017 {
>         preserve
>         keep if inlist(year,2001,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inEin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',1] = 1-r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> 
> /// do same above for N
> foreach t of num 1990/2000 {
>         preserve
>         keep if inlist(year,`t',2001)
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n+1] == 1 & nameid==nameid[_n+1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n+1] == 0 & nameid==nameid[_n+1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n+1] & nameid==nameid[_n+1])
>         *br nameid year EI inEin2001 moved
>         *pause
>         keep if year==`t' & inNin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',2] = r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> foreach t of num 2003/2017 {
>         preserve
>         keep if inlist(year,2001,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inNin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',2] = r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> preserve
> clear
> svmat A, names(col)
> rename c1 movefromE
> rename c2 movefromN
> rename c3 year
> label var year "t"
> twoway scatter movefromE year, xline(2001, lcolor(gs8)) ytitle("Fraction in ET in 2001 and in Non-ET in Year t") note("Conditional on 
> moving.")
> pause
> twoway scatter movefromN year, xline(2001, lcolor(gs8)) ytitle("Fraction in non-ET in 2001 and in ET state in Year t") note("Condition
> al on moving.")
> pause
> restore
> 
> /// conditional on living in E state in 2001, what fraction live in E state in 20...then do same for each prior 5 yr gap and subsequen
> t versions
> matrix B = J(50,3,.)
> foreach t of num 1992/2001 2003/2011 2013/2017 {
>         preserve
>         keep if inlist(year,`t'-10,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEinStart = 0
>         replace inEinStart =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNinStart = 0
>         replace inNinStart =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inEinStart==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1992+1
>         sum EI
>         matrix B[`row',1] = 1-r(mean)
>         matrix B[`row',3] = `t'
> *       pause
>         restore
> }
> 
> /// do same above for N
> foreach t of num 1992/2001 2003/2011 2013/2017 {
>         preserve
>         keep if inlist(year,`t'-10,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2 & year~=.
>         sort nameid year
>         gen inEinStart = 0
>         replace inEinStart =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNinStart = 0
>         replace inNinStart =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inNinStart==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1992+1
>         sum EI
>         matrix B[`row',2] = r(mean)
>         *pause
>         restore
> }
> 
> preserve
> clear
> svmat B, names(col)
> rename c1 livedinE10yrsprior
> rename c2 livedinN10yrsprior
> rename c3 year
> label var livedinE10yrsprior "Lived in E state 10 yrs prior"
> label var livedinN10yrsprior "Lived in non-E state 10 yrs prior"
> twoway scatter livedinE10yrsprior year, ytitle("Fraction living in non-ET state")
> *pause
> twoway scatter livedinN10yrsprior year, ytitle("Fraction living in ET state")
> restore
> 
> preserve
> drop if year==2002 | year==2012
> sort nameid year
> gen condN = 0
> replace condN = 1 if (EI==0 & EI[_n-10]==1 & abbr~=abbr[_n-10])
> gen condE = 0
> replace condE = 1 if (EI==1 & EI[_n-10]==0 & abbr~=abbr[_n-10])
> reg condN post if year>=1992 & year<2010
> areg condN post if year>=1992 & year<2010, absorb(statenum)
> reg condE post if year>=1992 & year<2010
> areg condE post if year>=1992 & year<2010, absorb(statenum)
> restore
>         
> 
> areg moveNonEItoEI post  , absorb(statenum)
> reg moveNonEItoEI post  
> areg moveNonEItoEI post  if move==1, absorb(statenum)
> reg moveNonEItoEI post   if move==1  
> *pause
> 
> areg moveEItoNonEI post  , absorb(statenum)
> reg moveEItoNonEI post  
> areg moveEItoNonEI post if move==1 , absorb(statenum)
> reg moveEItoNonEI post  if move==1
> *pause 
> 
> *preserve
> collapse (sum) move*, by(year)
> replace movetoEI = -movetoEI
> label var movetoEI "Moves to Estate-Tax States"
> label var movetoNonE "Moves to Non-Estate-Tax States"
> label var moveNonEItoEI "Moves to ET from Non-ET States"
> label var moveEItoNonEI "Moves to Non-ET from ET States"
> twoway bar movetoEI movetoNonEI year, ylabels(-5 "5" 0 5 10 15) graphregion(color(white)) ytitle(Number of Moves)
> pause
> replace moveNonEItoEI = -moveNonEItoEI
> twoway bar moveNonEItoEI moveEItoNonEI year, ylabels(-2 "2" 0 2 4 6) graphregion(color(white)) ytitle(Number of Moves)
> pause
> restore
> */
. 
. }   //end runMOVERS section

. 
. 
. /// 5. COST-BENEFIT ANALYSIS (AND DECOMPOSITION)
> if "$runCB" == "yes" { 
. 
. matrix R1 = J(11,6,.)
. matrix colnames R1="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
. matrix rownames R1= "ET_States_(10)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(28)" "Average_CB_ratio" "Number_wit
> h_CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(38)"
. matrix R2 = R1
. matrix colnames R2="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
. matrix rownames R2="ET_States_(14)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(36)" "Average_CB_ratio" "Number_with
> _CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(50)"
. local col = 0
. 
. foreach scenario in baseline alt1 alt2 alt3 alt4 alt5 {
  2. 
. local col = `col'+1
  3. /// locals and scalars for baseline scenario:
> local t = 2017
  4. scalar eta = 0.328              //DiD table, column 7
  5. local tauE = 0.16
  6. scalar eta0 = 0.0016            //from Table 6
  7. *scalar delta = (0.00394+0.00257)/2  //estimated age gradient -- avg of estimates in columns 3 and 4 of Table 6
. scalar delta = 0.00394  //estimated age gradient -- column 3 of Table 6
  8. *scalar delta = 0.00257  //estimated age gradient -- column 3 of Table 6
. local LP = 89.783/82.585  //Male life exp of someone at 100th percentile income relative to 50th percentile income from Chetty et al (
> 2016 JAMA)
  9. local r = 0.02
 10. local g = 1
 11. local spouse = 0
 12. preserve
 13.         use ./stata_data/IndivAnalysisDataset.dta, clear
 14.         sum wealth if year==2017, detail
 15. restore
 16. local W = r(mean)*1000*(8.25/16)
 17. local Y = `W'*0.103  //0.103 is ratio of taxable income to taxable estate values according to IRS SOI (08es03lk.xls)
 18. 
. 
. /// set locals and scalars for each scenario
> if "`scenario'" == "alt1" {
 19.         local g = 1.070  //annual growth rate of real wealth in Fig 1
 20. }       
 21. if "`scenario'" == "alt2" {
 22.         local spouse = 10
 23. }       
 24. if "`scenario'" == "alt3" {
 25.         local r = 0.01
 26. }       
 27. if "`scenario'" == "alt4" {
 28.         local r = 0.03
 29. }       
 30. if "`scenario'" == "alt5" {
 31.         local Y = 159*(245.134/236.715)  //Saez-Zucman (2019) estimate of mean gross income for top 400 income taxpayers in 2014 (i
> n millions, adjusted to 2017 dollars)
 32. }       
 33. 
. di `W'
 34. di `Y'
 35. 
. 
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
 36. gen EInextyear = EI
 37. if `t' == `postyear' {
 38.         replace EInextyear = F.EI 
 39. }
 40. keep if year==`t'
 41. 
. replace wealth = wealth*1000 //convert to millions
 42. 
. local T = (23.7+`spouse')*(`LP')        //CDC + 5 for 65 year old times Chetty et al's (2016) longevity premium for wealthy
 43. gen cost = 0
 44. foreach i of num 1/`T' {
 45.         replace cost = cost + (1/(1+`r'))^(`i')*(`Y'*(`g'^`i'))*eta*(avg/100)*stock
 46. }
 47. gen benefit = (1/(1+`r'))^(`T')*(`W'*(`g'^`T'))*(1-eta)*`tauE'*stock
 48. gen CBratio = cost/benefit
 49. gen net_revenues = (benefit - cost)
 50. sort CBratio
 51. foreach x of num 0 1 {
 52.         #delimit ;
delimiter now ;
.         tabout State using "../tables/CBratiosEI`x'_`t'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0 2 2 0)
>                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benef
> it&from Adopting (mil)\\) total(Average);
 53.         #delimit cr
delimiter now cr
. }
 54. *list state CBratio
. sum CBratio
 55. *pause
. 
. rename abbr state
 56. maptile CBratio, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
 57. graph export ../tables/CBratio_map_`t'.pdf, replace as(pdf)
 58. *pause
. *** Note: cost is upper bound b/c:
. ***             1. forbes 400 likely to have taxable income below that of top 400 income-tax payers (due to shelters)
. ***     2. we're assuming all of Y is taxed at state's avg of top MTR on wages/salaries and LTCG; true effective rate may be lower
. ***     3. we're assuming lost billionaires live another 29 years. median age of EI-sensitive billionaires is older, like 74, and so T
>  is more like 24.
. *** But could be lower bound b/c:
. ***     1. ignores property and sales tax revenues from lost billionaires
. 
. 
. 
. /// NOW ALLOW FOR AGE HETEROGENEITY
> use ./stata_data/StateyearAgeAnalysisDataset.dta, clear
 59. egen stateage = group(abbr Age_num)
 60. tsset stateage year, yearly
 61. gen EInextyear = EI
 62. if `t' == 2001 {
 63.         replace EInextyear = F.EI 
 64. }
 65. keep if year==`t'
 66. 
. qui {
 67. /// Set T by age according to IRS Pub 590-B, Appendix B, Tables I (age<30) and II (30<=age<70), assuming spouse 10 years younger, a
> nd III for age>=70 (which appears to assume spouse is 10 years younger) :
> gen T = 82.04 if Age_num==0
 68. replace T = 81.6 + 10 if Age_num==1
 69. replace T = 75.8 + 10 if inrange(Age_num,5,9)
 70. replace T = 70.8 + 10 if inrange(Age_num,10,14)
 71. replace T = 66 + 10 if inrange(Age_num,15,19)
 72. replace T = 61.1 + 10 if inrange(Age_num,20,24)
 73. replace T = 56.2 + 10 if inrange(Age_num,25,29)
 74. replace T = 64.3 if inrange(Age_num,30,34)
 75. replace T = 59.4 if inrange(Age_num,35,39)
 76. replace T = 54.4 if inrange(Age_num,40,44)
 77. replace T = 49.5 if inrange(Age_num,45,49)
 78. replace T = 44.6 if inrange(Age_num,50,54)
 79. replace T = 39.7 if inrange(Age_num,55,59)
 80. replace T = 34.9 if inrange(Age_num,60,64)
 81. replace T = 30.2 if inrange(Age_num,65,69)
 82. 
. replace T = 27.4 if Age_num==70
 83. replace T = 26.5 if Age_num==71
 84. replace T = 25.6 if Age_num==72
 85. replace T = 24.7 if Age_num==73
 86. replace T = 23.8 if Age_num==74
 87. replace T = 22.9 if Age_num==75
 88. replace T = 22.0 if Age_num==76
 89. replace T = 21.2 if Age_num==77
 90. replace T = 20.3 if Age_num==78
 91. replace T = 19.5 if Age_num==79
 92. replace T = 18.7 if Age_num==80
 93. replace T = 17.9 if Age_num==81
 94. replace T = 17.1 if Age_num==82
 95. replace T = 16.3 if Age_num==83
 96. replace T = 15.5 if Age_num==84
 97. replace T = 14.8 if Age_num==85
 98. replace T = 14.1 if Age_num==86
 99. replace T = 13.4 if Age_num==87
100. replace T = 12.7 if Age_num==88
101. replace T = 12.0 if Age_num==89
102. replace T = 11.4 if Age_num==90
103. replace T = 10.8 if Age_num==91
104. replace T = 10.2 if Age_num==92
105. replace T = 9.6 if Age_num==93
106. replace T = 9.1 if Age_num==94
107. replace T = 8.6 if Age_num==95
108. replace T = 8.1 if Age_num==96
109. replace T = 7.6 if Age_num==97
110. replace T = 7.1 if Age_num==98
111. replace T = 6.7 if Age_num==99
112. replace T = 6.3 if Age_num==100
113. replace T = 5.9 if Age_num==101
114. replace T = 5.5 if Age_num==102
115. replace T = 5.2 if Age_num==103
116. replace T = 4.9 if Age_num==104
117. replace T = 3.5 if Age_num>105
118. }
119. 
. /// Adjust T by Chetty et al longevity premium for wealthy
> replace T = T*`LP' + `spouse'
120. 
. replace wealth = wealth*1000   //convert to millions
121. 
. gen cost = 0
122. *gen benefit = 0
. levelsof Age_num, local(agelevels)
123. foreach a of local agelevels {
124.         preserve
125.         keep if Age_num == `a'
126.         qui sum T
127.         local T = int(round(r(mean)))
128.         *sum wealth, detail
.         *scalar W_a = r(p50)*`s'
.         foreach i of num 1/`T' {
129.                 qui replace cost = cost + (1/(1+`r'))^(`i')*(`Y'*(`g'^`i'))*(eta0 + delta*`a')*(avg/100)*stock
130. *               qui replace cost = cost + (1/(1+`r'))^(`i')*W_a*(`Y'/`W')*(eta0 + delta*`a')*(avg/100)*stock
.         }
131. *       qui replace benefit = (1/(1+`r'))^(`T')*(`W')*`tauE'*(1-(eta0 + delta*`a'))*stock
. *       sum benefit
. *       qui replace benefit = (1/(1+`r'))^(`T')*(W_a)*`tauE'*(1-(eta0 + delta*`a'))*stock
.         qui save age`a'.dta, replace
132.         restore
133. }
134. clear
135. foreach a of local agelevels {
136.         *di "Age = " `a'
.         if `a' ~= 0 append using age`a'.dta 
137. }
138. 
. gen benefit = (1/(1+`r'))^(T)*(`W'*(`g'^T))*(1-(eta0 + delta*Age_num))*`tauE'*stock
139. *gen benefit = (1/(1+`r'))^(T)*(wealth*`s')*(1-eta)*`tauE'*stock
. *gen benefit = (1/(1+`r'))^(T)*(wealth*`s')*(1-(eta0 + delta*Age_num))*`tauE'*stock
. *estpost sum cost benefit EI avg stock wealth, detail
. 
. gcollapse (sum) cost benefit stock wealth (mean) EInextyear avg, by(State abbr)
140. gen CBratio = cost/benefit
141. *list State CBratio if EI==1
. *list State CBratio if EI==0
. sum CBratio
142. matrix R1[10,`col'] = r(mean)
143. sum CBratio if CBratio>=1
144. matrix R1[11,`col'] = r(N)
145. sum CBratio if EInextyear==1
146. matrix R1[2,`col'] = r(mean)
147. sum CBratio if EInextyear==1 & CBratio>=1
148. matrix R1[3,`col'] = r(N)
149. sum CBratio if EInextyear==0
150. matrix R1[6,`col'] = r(mean)
151. sum CBratio if EInextyear==0 & CBratio>=1
152. matrix R1[7,`col'] = r(N)
153. outtable using "../tables/CBrobustnessBillionaire", mat(R1) replace center  format(%3.2f)
154. 
. rename abbr state
155. *maptile CBratio, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
. *graph export ../tables/CBratioAge_map_`t'`scenario'.pdf, replace as(pdf)
. 
. gen net_revenues = (benefit - cost)
156. *pause
. foreach x of num 0 1 {
157.         #delimit ;
delimiter now ;
.         tabout State using "../tables/CBratiosAgeEI`x'_`t'`scenario'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0c 2 2 0c) 
>                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benef
> it&from Adopting (mil)\\) total(Average);
158.         #delimit cr
delimiter now cr
. }
159. *tabout State using "../tables/CBratiosEI1.tex" if EI2005==1, style(tex) h2(nil) bt replace sum cells(sum avg sum stock sum wealth 
> sum CBratio sum net_revenues) f(2 0 2m 2 3m) oneway clab(PIT_Rate Forbes_Population Forbes_Wealth Cost/Benefit Net-Revenues) ptotal(no
> ne)
. 
. eststo clear
160. 
. 
. /// COMPUTE CB RATIOS FOR ALL POTENTIAL ESTATE TAX PAYERS
> import excel using ./raw_data/15es02st.xls, clear cellrange(A9:I59)
161. keep A C
162. rename A statename
163. rename C amount
164. gen year = 2015
165. tempfile soi15
166. save `soi15'
167. import excel using ./raw_data/16es02st.xls, clear cellrange(A9:I59)
168. keep A C
169. rename A statename
170. rename C amount
171. gen year = 2016
172. tempfile soi16
173. save `soi16'
174. import excel using ./raw_data/17es02st.xls, clear cellrange(A9:I59)
175. keep A B C
176. rename A statename
177. rename B number
178. rename C amount
179. destring amount, replace force
180. destring number, replace force
181. gen year = 2017
182. 
. if "`scenario'"=="baseline" {
183.         preserve
184.         import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
185.         rename State statename
186.         rename abbr state
187.         keep state statename
188.         tempfile mapping
189.         save `mapping'
190.         restore
191.         merge 1:1 statename using `mapping', nogen keep(1 3) 
192.         maptile number, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 50 100 200 500 1000) twopt(legend(lab(2 "0") lab(3 "1 - 
> 50") ))
193.         graph export ../tables/AllEstateTaxpayersMap2017.pdf, replace as(pdf)
194.         *pause
.         drop number state
195. }
196. append using `soi15'
197. append using `soi16'
198. collapse (mean) amount, by(statename)
199. tempfile soi
200. save `soi'
201. 
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
202. gen EInextyear = EI
203. keep if year==2017
204. 
. merge 1:1 statename using `soi', keep(1 3) nogen
205. 
. scalar natlW_U70 = 30529954/1000
206. scalar natlW_7079 = 33297568/1000
207. scalar natlW_O79 = 53305929/1000
208. scalar natlW = natlW_U70 + natlW_7079 + natlW_O79 
209. *sum Age_num if Age_num < 70, detail
. *sum Age_num if inrange(Age_num,70,79), detail
. *sum Age_num if Age_num > 79, detail
. /// set prob of death equal to mortality rates from SSA for mean age in forbes for each group, taking 75/25 weighted avg of male and f
> emale rates
> scalar prob_death_U70 = .75*0.013302 + .25*0.007893     //62yr old 
210. scalar prob_death_7079 = .75*0.030070 + .25*0.020705    //73yr old 
211. scalar prob_death_O79 = .75*0.107390 + .25*0.082465             //86yr old 
212. /// adjust using mortality differential for top 1% from Fig 3 of Saez-Zucman (2019)
> scalar prob_death_U70 =  prob_death_U70*.3
213. scalar prob_death_7079 = prob_death_7079*.5
214. scalar prob_death_O79 = prob_death_O79*.7  //see fig 3 of SZ 2019
215. 
. scalar natl_YW_ratio_U70 = 0.103                //see 08es03lk.xls
216. scalar natl_YW_ratio_7079 = 0.071
217. scalar natl_YW_ratio_O79 = 0.058
218. 
. *local s = .4  //this is the ratio of TAXED estate wealth to FORBES estimate of estate wealth (based on Raub et al (2010) study and SO
> I data on non-spousal deductions)
. ///merge in estate values from IRS SOI for 2015-2017; average by state
> gen W_U70 = (amount/1000)*(natlW_U70/natlW)/prob_death_U70 
219. gen W_7079 = (amount/1000)*(natlW_7079/natlW)/prob_death_7079 
220. gen W_O79 = (amount/1000)*(natlW_O79/natlW)/prob_death_O79
221. gen Y_U70 = W_U70*(natl_YW_ratio_U70) 
222. gen Y_7079 = W_7079*(natl_YW_ratio_7079) 
223. gen Y_O79 = W_O79*(natl_YW_ratio_O79)
224.  
. scalar tauE = 0.16*(.25/.40)  // .25 is federal estate ATR, .4 is federal statutory top MTR, so this accounts for progressivity
225. 
. local T_U70 = 31.6*`LP' + `spouse'
226. local T_7079 = 22.9*`LP'+ `spouse'
227. local T_O79 = 14.8*`LP'+ `spouse'
228. 
. local etaBaseU70 = eta0 + delta*62
229. local etaAltU70 = `etaBaseU70'/2
230. local etaBase7079 = eta0 + delta*73
231. local etaAlt7079 = `etaBase7079'/2
232. local etaBaseO79 = eta0 + delta*86
233. local etaAltO79 = `etaBaseO79'/2
234. 
. rename abbr state
235. foreach j in Base Alt {
236.         gen cost_`j'U70 = 0
237.         foreach i of num 1/`T_U70' {
238.                 replace cost_`j'U70 = cost_`j'U70 + (1/(1+`r'))^(`i')*(Y_U70*(`g'^`i'))*`eta`j'U70'*(avg/100)
239.         }
240.         gen benefit_`j'U70 = (1/(1+`r'))^(`T_U70')*(W_U70*(`g'^`T_U70'))*(1-`eta`j'U70')*tauE
241.         gen cost_`j'7079 = 0
242.         foreach i of num 1/`T_7079' {
243.                 replace cost_`j'7079 = cost_`j'7079 + (1/(1+`r'))^(`i')*(Y_7079*(`g'^`i'))*`eta`j'7079'*(avg/100)
244.         }
245.         gen benefit_`j'7079 = (1/(1+`r'))^(`T_7079')*(W_7079*(`g'^`T_7079'))*(1-`eta`j'7079')*tauE
246.         gen cost_`j'O79 = 0
247.         foreach i of num 1/`T_O79' {
248.                 replace cost_`j'O79 = cost_`j'O79 + (1/(1+`r'))^(`i')*(Y_O79*(`g'^`i'))*`eta`j'O79'*(avg/100)
249.         }
250.         gen benefit_`j'O79 = (1/(1+`r'))^(`T_O79')*(W_O79*(`g'^`T_O79'))*(1-`eta`j'O79')*tauE
251. 
.         gen CBratio`j' = (cost_`j'U70+cost_`j'7079+cost_`j'O79)/(benefit_`j'U70+benefit_`j'7079+benefit_`j'O79)
252.         gen net_revenues`j' = benefit_`j'U70+benefit_`j'7079+benefit_`j'O79 - (cost_`j'U70+cost_`j'7079+cost_`j'O79)
253. }
254. 
. sort CBratioBase
255. foreach x of num 0 1 {
256.                 #delimit ;
delimiter now ;
.                 tabout State using "../tables/CBratiosALL`x'_2017`scenario'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum
>  
>                         cells(mean avg mean CBratioBase mean net_revenuesBase mean CBratioAlt mean net_revenuesAlt) f(2 2 0c 2 0c)
>                         oneway h3(& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elastic
> ity}}\\ &Personal Income & &EPV Net Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Ad
> opting (mil)\\) total(Average);
257.                 #delimit cr
delimiter now cr
. }
258. maptile CBratioBase, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
259. graph export ../tables/CBratioAll_map_2017_Base`scenario'.pdf, replace as(pdf)
260. 
. *list state CBratio
. sum CBratioBase CBratioAlt
261. 
. sum CBratioBase
262. matrix R2[10,`col'] = r(mean)
263. sum CBratioBase if CBratioBase>=1
264. matrix R2[11,`col'] = r(N)
265. sum CBratioBase if EInextyear==1
266. matrix R2[2,`col'] = r(mean)
267. sum CBratioBase if EInextyear==1 & CBratioBase>=1
268. matrix R2[3,`col'] = r(N)
269. sum CBratioBase if EInextyear==0
270. matrix R2[6,`col'] = r(mean)
271. sum CBratioBase if EInextyear==0 & CBratioBase>=1
272. matrix R2[7,`col'] = r(N)
273. 
. outtable using "../tables/CBrobustnessBroad", mat(R2) replace center format(%3.2f)
274. 
. *pause
. drop cost_* benefit_* CBratio* net_revenues*
275. }  //end scenario loop

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
355.5188
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.46&605 \\
Arkansas&5&84000&5.33&0.54&507 \\
California&92&617800&14.10&1.44&-9034 \\
Colorado&5&42700&4.77&0.49&571 \\
Florida&35&148000&0.00&0.00&7798 \\
Georgia&9&42900&6.18&0.63&739 \\
Idaho&1&2700&7.49&0.77&52 \\
Indiana&3&12900&3.23&0.33&448 \\
Iowa&1&3900&6.38&0.65&78 \\
Kansas&2&51600&5.28&0.54&205 \\
Kentucky&1&2700&6.18&0.63&82 \\
Louisiana&1&2800&4.17&0.43&128 \\
Michigan&6&26500&4.25&0.43&756 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&0.62&422 \\
Montana&3&14100&6.11&0.62&251 \\
Nebraska&2&82200&7.71&0.79&95 \\
Nevada&8&59800&0.00&0.00&1782 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.56&293 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.51&327 \\
Oklahoma&5&34300&2.59&0.26&820 \\
South Carolina&1&3500&5.55&0.57&96 \\
South Dakota&1&2200&0.00&0.00&223 \\
Tennessee&8&30500&0.00&0.00&1782 \\
Texas&34&190400&0.00&0.00&7575 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.60&360 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&0.66&672 \\
Wyoming&4&46800&0.00&0.00&891 \\
Average&7&47249&4.25&0.46&529 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&0.71&446 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&1.14&-32 \\
Illinois&14&48200&4.35&0.44&1733 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.60&631 \\
Massachusetts&8&47900&5.10&0.52&854 \\
Minnesota&3&10500&10.15&1.04&-25 \\
New Jersey&6&30500&8.97&0.92&112 \\
New York&71&444200&6.89&0.70&4682 \\
Oregon&1&25200&9.99&1.02&-5 \\
Pennsylvania&5&17500&3.07&0.31&765 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&2228 \\
Average&9&63353&6.75&0.67&759 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .5249922    .3401264          0   1.440744
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .4741964    .3386255          0   1.446668

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          2    1.439135    .0106541   1.431601   1.446668

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11    .6379244    .3531534          0   1.431601

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          1    1.431601           .   1.431601   1.431601

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27    .4074924    .3150399          0   1.446668

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          1    1.446668           .   1.446668   1.446668

Table output written to: ../tables/CBratiosAgeEI0_2017baseline.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.46&586 \\
Arkansas&5&84,000&5.33&0.52&532 \\
California&92&617,800&14.10&1.45&-8,259 \\
Colorado&5&42,700&4.77&0.42&665 \\
Florida&35&148,000&0.00&0.00&7,678 \\
Georgia&9&42,900&6.18&0.55&917 \\
Idaho&1&2,700&7.49&0.83&35 \\
Indiana&3&12,900&3.23&0.33&421 \\
Iowa&1&3,900&6.38&0.54&111 \\
Kansas&2&51,600&5.28&0.47&249 \\
Kentucky&1&2,700&6.18&0.40&160 \\
Louisiana&1&2,800&4.17&0.20&222 \\
Michigan&6&26,500&4.25&0.34&948 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.58&473 \\
Montana&3&14,100&6.11&0.58&279 \\
Nebraska&2&82,200&7.71&0.45&299 \\
Nevada&8&59,800&0.00&0.00&1,792 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.46&382 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.43&403 \\
Oklahoma&5&34,300&2.59&0.21&953 \\
South Carolina&1&3,500&5.55&0.58&89 \\
South Dakota&1&2,200&0.00&0.00&258 \\
Tennessee&8&30,500&0.00&0.00&1,704 \\
Texas&34&190,400&0.00&0.00&7,062 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.60&348 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.61&776 \\
Wyoming&4&46,800&0.00&0.00&829 \\
Average&7&47,249&4.25&0.41&569 \\

Table output written to: ../tables/CBratiosAgeEI1_2017baseline.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&0.74&376 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&1.43&-73 \\
Illinois&14&48,200&4.35&0.48&1,403 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.56&649 \\
Massachusetts&8&47,900&5.10&0.50&865 \\
Minnesota&3&10,500&10.15&0.68&249 \\
New Jersey&6&30,500&8.97&0.88&150 \\
New York&71&444,200&6.89&0.66&5,184 \\
Oregon&1&25,200&9.99&0.73&68 \\
Pennsylvania&5&17,500&3.07&0.35&627 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&2,005 \\
Average&9&63,353&6.75&0.64&767 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_000028.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_000029.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
(3 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00002b.tmp saved

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                51  
    -----------------------------------------
(file ../tables/AllEstateTaxpayersMap2017.pdf written in PDF format)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00002c.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017baseline.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.47&2,773&0.20&4,955 \\
Alaska&0.00&0.00&970&0.00&1,144 \\
Arizona&4.47&0.62&3,460&0.26&7,855 \\
Arkansas&5.33&0.73&1,311&0.31&4,012 \\
California&14.10&1.94&-141,167&0.82&31,066 \\
Colorado&4.77&0.66&3,424&0.28&8,506 \\
Florida&0.00&0.00&95,195&0.00&112,277 \\
Georgia&6.18&0.85&1,901&0.36&9,670 \\
Idaho&7.49&1.03&-42&0.44&861 \\
Indiana&3.23&0.45&4,552&0.19&7,851 \\
Iowa&6.38&0.88&612&0.37&3,753 \\
Kansas&5.28&0.73&1,460&0.31&4,373 \\
Kentucky&6.18&0.85&635&0.36&3,232 \\
Louisiana&4.17&0.57&2,006&0.24&4,209 \\
Michigan&4.25&0.59&6,675&0.25&14,289 \\
Mississippi&5.07&0.70&771&0.30&2,125 \\
Missouri&6.08&0.84&2,558&0.36&12,012 \\
Montana&6.11&0.84&364&0.36&1,752 \\
Nebraska&7.71&1.06&-295&0.45&3,047 \\
Nevada&0.00&0.00&12,080&0.00&14,247 \\
New Hampshire&0.00&0.00&3,150&0.00&3,715 \\
New Mexico&3.83&0.53&800&0.22&1,549 \\
North Carolina&5.50&0.76&2,817&0.32&9,324 \\
North Dakota&2.34&0.32&952&0.14&1,430 \\
Ohio&5.00&0.69&3,974&0.29&10,674 \\
Oklahoma&2.59&0.36&4,216&0.15&6,558 \\
South Carolina&5.55&0.77&1,363&0.32&4,622 \\
South Dakota&0.00&0.00&1,859&0.00&2,193 \\
Tennessee&0.00&0.00&7,049&0.00&8,314 \\
Texas&0.00&0.00&41,481&0.00&48,925 \\
Utah&5.00&0.69&865&0.29&2,324 \\
Virginia&5.83&0.80&2,774&0.34&10,985 \\
West Virginia&6.50&0.90&140&0.38&983 \\
Wisconsin&6.51&0.90&826&0.38&5,847 \\
Wyoming&0.00&0.00&3,349&0.00&3,950 \\
Average&4.25&0.59&2,139&0.25&10,647 \\

Table output written to: ../tables/CBratiosALL1_2017baseline.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&0.96&500&0.41&9,556 \\
Delaware&6.80&0.94&86&0.40&977 \\
Hawaii&11.20&1.54&-1,346&0.65&1,009 \\
Illinois&4.35&0.60&11,101&0.25&24,389 \\
Maine&7.15&0.99&29&0.42&1,401 \\
Maryland&5.83&0.80&2,157&0.34&8,541 \\
Massachusetts&5.10&0.70&4,794&0.30&13,363 \\
Minnesota&10.15&1.40&-4,247&0.59&5,107 \\
New Jersey&8.97&1.24&-5,241&0.52&12,440 \\
New York&6.89&0.95&3,977&0.40&55,753 \\
Oregon&9.99&1.38&-2,170&0.58&2,825 \\
Pennsylvania&3.07&0.42&14,110&0.18&23,676 \\
Rhode Island&5.99&0.83&615&0.35&2,705 \\
Vermont&8.80&1.21&-233&0.51&628 \\
Washington&0.00&0.00&10,969&0.00&12,938 \\
Average&6.75&0.93&2,340&0.39&11,687 \\
(file ../tables/CBratioAll_map_2017_Basebaseline.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .6896028     .439073          0   1.943592
  CBratioAlt |         50    .2923414     .186135          0   .8239415

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .6896028     .439073          0   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          8    1.351037    .2947293   1.032447   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    .9307184    .4039708          0   1.543846

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          5    1.353898    .1344428   1.213022   1.543846

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35    .5862676    .4171327          0   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          3     1.34627    .5175176   1.032447   1.943592

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
355.5188
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.20&5080 \\
Arkansas&5&84000&5.33&0.24&4833 \\
California&92&617800&14.10&0.64&42449 \\
Colorado&5&42700&4.77&0.22&4994 \\
Florida&35&148000&0.00&0.00&44574 \\
Georgia&9&42900&6.18&0.28&8258 \\
Idaho&1&2700&7.49&0.34&842 \\
Indiana&3&12900&3.23&0.15&3263 \\
Iowa&1&3900&6.38&0.29&906 \\
Kansas&2&51600&5.28&0.24&1939 \\
Kentucky&1&2700&6.18&0.28&918 \\
Louisiana&1&2800&4.17&0.19&1033 \\
Michigan&6&26500&4.25&0.19&6173 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&0.27&4617 \\
Montana&3&14100&6.11&0.28&2765 \\
Nebraska&2&82200&7.71&0.35&1659 \\
Nevada&8&59800&0.00&0.00&10188 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.25&2870 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.23&2957 \\
Oklahoma&5&34300&2.59&0.12&5623 \\
South Carolina&1&3500&5.55&0.25&954 \\
South Dakota&1&2200&0.00&0.00&1274 \\
Tennessee&8&30500&0.00&0.00&10188 \\
Texas&34&190400&0.00&0.00&43301 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.26&3751 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&0.29&8090 \\
Wyoming&4&46800&0.00&0.00&5094 \\
Average&7&47249&4.25&0.21&6531 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&0.32&6097 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&0.51&628 \\
Illinois&14&48200&4.35&0.20&14322 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.26&6564 \\
Massachusetts&8&47900&5.10&0.23&7838 \\
Minnesota&3&10500&10.15&0.46&2067 \\
New Jersey&6&30500&8.97&0.41&4541 \\
New York&71&444200&6.89&0.31&62245 \\
Oregon&1&25200&9.99&0.45&698 \\
Pennsylvania&5&17500&3.07&0.14&5484 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&12736 \\
Average&9&63353&6.75&0.30&8215 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .2323746    .1505484          0    .637709
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .1878365    .1156615          0   .4138575

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11     .228853    .1222558          0    .394824

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27    .1711261    .1108465          0   .4138575

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

Table output written to: ../tables/CBratiosAgeEI0_2017alt1.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.18&7,306 \\
Arkansas&5&84,000&5.33&0.21&7,295 \\
California&92&617,800&14.10&0.41&195,164 \\
Colorado&5&42,700&4.77&0.18&6,369 \\
Florida&35&148,000&0.00&0.00&70,211 \\
Georgia&9&42,900&6.18&0.21&15,047 \\
Idaho&1&2,700&7.49&0.31&1,331 \\
Indiana&3&12,900&3.23&0.11&6,763 \\
Iowa&1&3,900&6.38&0.26&898 \\
Kansas&2&51,600&5.28&0.22&2,222 \\
Kentucky&1&2,700&6.18&0.24&629 \\
Louisiana&1&2,800&4.17&0.14&556 \\
Michigan&6&26,500&4.25&0.16&7,902 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.25&5,918 \\
Montana&3&14,100&6.11&0.24&4,075 \\
Nebraska&2&82,200&7.71&0.28&1,064 \\
Nevada&8&59,800&0.00&0.00&16,574 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.22&3,111 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.20&3,291 \\
Oklahoma&5&34,300&2.59&0.10&5,364 \\
South Carolina&1&3,500&5.55&0.22&1,537 \\
South Dakota&1&2,200&0.00&0.00&908 \\
Tennessee&8&30,500&0.00&0.00&16,949 \\
Texas&34&190,400&0.00&0.00&92,078 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.23&6,151 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.25&12,177 \\
Wyoming&4&46,800&0.00&0.00&17,780 \\
Average&7&47,249&4.25&0.17&14,533 \\

Table output written to: ../tables/CBratiosAgeEI1_2017alt1.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&0.25&13,054 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&0.34&2,992 \\
Illinois&14&48,200&4.35&0.13&45,562 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.21&13,581 \\
Massachusetts&8&47,900&5.10&0.18&15,650 \\
Minnesota&3&10,500&10.15&0.39&1,655 \\
New Jersey&6&30,500&8.97&0.30&11,917 \\
New York&71&444,200&6.89&0.23&140,218 \\
Oregon&1&25,200&9.99&0.39&612 \\
Pennsylvania&5&17,500&3.07&0.11&13,397 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&25,057 \\
Average&9&63,353&6.75&0.23&18,913 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00004k.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00004l.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00004m.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017alt1.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.18&36,735&0.08&48,606 \\
Alaska&0.00&0.00&8,321&0.00&9,746 \\
Arizona&4.47&0.24&58,696&0.10&81,245 \\
Arkansas&5.33&0.29&30,204&0.12&43,543 \\
California&14.10&0.76&308,495&0.32&1,015,521 \\
Colorado&4.77&0.26&63,715&0.11&89,418 \\
Florida&0.00&0.00&816,416&0.00&956,240 \\
Georgia&6.18&0.33&73,418&0.14&110,587 \\
Idaho&7.49&0.40&6,643&0.17&10,797 \\
Indiana&3.23&0.17&58,123&0.07&76,296 \\
Iowa&6.38&0.34&28,560&0.15&43,490 \\
Kansas&5.28&0.28&32,910&0.12&47,327 \\
Kentucky&6.18&0.33&24,540&0.14&36,963 \\
Louisiana&4.17&0.22&31,376&0.10&42,852 \\
Michigan&4.25&0.23&106,580&0.10&146,077 \\
Mississippi&5.07&0.27&15,960&0.12&22,719 \\
Missouri&6.08&0.33&91,105&0.14&136,494 \\
Montana&6.11&0.33&13,291&0.14&19,944 \\
Nebraska&7.71&0.42&23,576&0.18&38,857 \\
Nevada&0.00&0.00&103,597&0.00&121,340 \\
New Hampshire&0.00&0.00&27,014&0.00&31,641 \\
New Mexico&3.83&0.21&11,518&0.09&15,497 \\
North Carolina&5.50&0.30&70,305&0.13&102,215 \\
North Dakota&2.34&0.13&10,528&0.05&13,351 \\
Ohio&5.00&0.27&80,122&0.11&113,671 \\
Oklahoma&2.59&0.14&48,352&0.06&61,884 \\
South Carolina&5.55&0.30&34,867&0.13&50,821 \\
South Dakota&0.00&0.00&15,944&0.00&18,674 \\
Tennessee&0.00&0.00&60,456&0.00&70,810 \\
Texas&0.00&0.00&355,756&0.00&416,685 \\
Utah&5.00&0.27&17,442&0.11&24,745 \\
Virginia&5.83&0.31&83,105&0.13&122,880 \\
West Virginia&6.50&0.35&7,487&0.15&11,478 \\
Wisconsin&6.51&0.35&44,550&0.15&68,312 \\
Wyoming&0.00&0.00&28,722&0.00&33,641 \\
Average&4.25&0.23&80,812&0.10&121,553 \\

Table output written to: ../tables/CBratiosALL1_2017alt1.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&0.38&73,235&0.16&115,469 \\
Delaware&6.80&0.37&7,473&0.16&11,653 \\
Hawaii&11.20&0.60&8,420&0.26&18,459 \\
Illinois&4.35&0.23&182,065&0.10&250,650 \\
Maine&7.15&0.39&10,762&0.16&17,130 \\
Maryland&5.83&0.31&64,613&0.13&95,537 \\
Massachusetts&5.10&0.27&100,392&0.12&143,113 \\
Minnesota&10.15&0.55&41,361&0.23&81,940 \\
New Jersey&8.97&0.48&98,244&0.21&176,732 \\
New York&6.89&0.37&426,757&0.16&668,928 \\
Oregon&9.99&0.54&22,792&0.23&44,524 \\
Pennsylvania&3.07&0.17&175,097&0.07&228,376 \\
Rhode Island&5.99&0.32&20,495&0.14&30,559 \\
Vermont&8.80&0.47&4,942&0.20&8,778 \\
Washington&0.00&0.00&94,076&0.00&110,188 \\
Average&6.75&0.36&88,715&0.16&133,469 \\
(file ../tables/CBratioAll_map_2017_Basealt1.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .2694994    .1715914          0   .7595628
  CBratioAlt |         50    .1150462    .0732504          0   .3242487

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .2694994    .1715914          0   .7595628

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    .3637283    .1578733          0   .6033407

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35    .2291156     .163017          0   .7595628

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          0

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
355.5188
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.74&234 \\
Arkansas&5&84000&5.33&0.88&106 \\
California&92&617800&14.10&2.33&-22028 \\
Colorado&5&42700&4.77&0.79&189 \\
Florida&35&148000&0.00&0.00&6288 \\
Georgia&9&42900&6.18&1.02&-36 \\
Idaho&1&2700&7.49&1.24&-43 \\
Indiana&3&12900&3.23&0.53&251 \\
Iowa&1&3900&6.38&1.06&-10 \\
Kansas&2&51600&5.28&0.87&45 \\
Kentucky&1&2700&6.18&1.02&-4 \\
Louisiana&1&2800&4.17&0.69&56 \\
Michigan&6&26500&4.25&0.70&320 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&1.01&-5 \\
Montana&3&14100&6.11&1.01&-6 \\
Nebraska&2&82200&7.71&1.28&-99 \\
Nevada&8&59800&0.00&0.00&1437 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.91&49 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.83&93 \\
Oklahoma&5&34300&2.59&0.43&514 \\
South Carolina&1&3500&5.55&0.92&15 \\
South Dakota&1&2200&0.00&0.00&180 \\
Tennessee&8&30500&0.00&0.00&1437 \\
Texas&34&190400&0.00&0.00&6108 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.96&25 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&1.08&-123 \\
Wyoming&4&46800&0.00&0.00&719 \\
Average&7&47249&4.25&0.75&-123 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&1.16&-197 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&1.85&-153 \\
Illinois&14&48200&4.35&0.72&705 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.96&45 \\
Massachusetts&8&47900&5.10&0.84&225 \\
Minnesota&3&10500&10.15&1.68&-366 \\
New Jersey&6&30500&8.97&1.48&-522 \\
New York&71&444200&6.89&1.14&-1785 \\
Oregon&1&25200&9.99&1.65&-117 \\
Pennsylvania&5&17500&3.07&0.51&442 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&1797 \\
Average&9&63353&6.75&1.09&5 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .8500486    .5507205          0   2.332801
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .7248665     .492123          0   2.126267

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          7    1.439621    .4159883   1.076858   2.126267

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11    .9563461    .4986234          0   1.942656

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          5    1.347261    .3440889   1.076858   1.942656

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27      .63056    .4659587          0   2.126267

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          2    1.670523    .6445192   1.214779   2.126267

Table output written to: ../tables/CBratiosAgeEI0_2017alt2.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.68&286 \\
Arkansas&5&84,000&5.33&0.78&198 \\
California&92&617,800&14.10&2.13&-17,083 \\
Colorado&5&42,700&4.77&0.65&328 \\
Florida&35&148,000&0.00&0.00&6,298 \\
Georgia&9&42,900&6.18&0.85&250 \\
Idaho&1&2,700&7.49&1.21&-37 \\
Indiana&3&12,900&3.23&0.48&266 \\
Iowa&1&3,900&6.38&0.85&30 \\
Kansas&2&51,600&5.28&0.73&103 \\
Kentucky&1&2,700&6.18&0.70&65 \\
Louisiana&1&2,800&4.17&0.41&135 \\
Michigan&6&26,500&4.25&0.55&533 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.88&109 \\
Montana&3&14,100&6.11&0.88&64 \\
Nebraska&2&82,200&7.71&0.83&77 \\
Nevada&8&59,800&0.00&0.00&1,470 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.74&154 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.67&189 \\
Oklahoma&5&34,300&2.59&0.34&657 \\
South Carolina&1&3,500&5.55&0.85&27 \\
South Dakota&1&2,200&0.00&0.00&212 \\
Tennessee&8&30,500&0.00&0.00&1,398 \\
Texas&34&190,400&0.00&0.00&5,794 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.88&82 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.93&111 \\
Wyoming&4&46,800&0.00&0.00&680 \\
Average&7&47,249&4.25&0.63&68 \\

Table output written to: ../tables/CBratiosAgeEI1_2017alt2.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&1.08&-91 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&1.94&-131 \\
Illinois&14&48,200&4.35&0.69&685 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.85&184 \\
Massachusetts&8&47,900&5.10&0.74&359 \\
Minnesota&3&10,500&10.15&1.18&-114 \\
New Jersey&6&30,500&8.97&1.32&-332 \\
New York&71&444,200&6.89&1.00&55 \\
Oregon&1&25,200&9.99&1.22&-45 \\
Pennsylvania&5&17,500&3.07&0.50&397 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&1,644 \\
Average&9&63,353&6.75&0.96&174 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00006u.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00006v.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_00006w.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017alt2.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.70&1,303&0.30&3,579 \\
Alaska&0.00&0.00&796&0.00&939 \\
Arizona&4.47&0.91&663&0.39&5,356 \\
Arkansas&5.33&1.09&-346&0.46&2,580 \\
California&14.10&2.87&-229,691&1.22&-31,458 \\
Colorado&4.77&0.97&234&0.41&5,690 \\
Florida&0.00&0.00&78,093&0.00&92,106 \\
Georgia&6.18&1.26&-2,722&0.53&5,792 \\
Idaho&7.49&1.53&-560&0.65&444 \\
Indiana&3.23&0.66&2,303&0.28&5,725 \\
Iowa&6.38&1.30&-1,246&0.55&2,205 \\
Kansas&5.28&1.08&-331&0.46&2,823 \\
Kentucky&6.18&1.26&-910&0.53&1,936 \\
Louisiana&4.17&0.85&584&0.36&2,922 \\
Michigan&4.25&0.87&1,778&0.37&9,873 \\
Mississippi&5.07&1.03&-68&0.44&1,393 \\
Missouri&6.08&1.24&-3,087&0.52&7,261 \\
Montana&6.11&1.24&-463&0.53&1,056 \\
Nebraska&7.71&1.57&-2,199&0.67&1,521 \\
Nevada&0.00&0.00&9,909&0.00&11,688 \\
New Hampshire&0.00&0.00&2,584&0.00&3,048 \\
New Mexico&3.83&0.78&307&0.33&1,096 \\
North Carolina&5.50&1.12&-1,148&0.47&5,919 \\
North Dakota&2.34&0.48&603&0.20&1,085 \\
Ohio&5.00&1.02&-192&0.43&7,031 \\
Oklahoma&2.59&0.53&2,545&0.22&4,923 \\
South Carolina&5.55&1.13&-620&0.48&2,923 \\
South Dakota&0.00&0.00&1,525&0.00&1,799 \\
Tennessee&0.00&0.00&5,783&0.00&6,821 \\
Texas&0.00&0.00&34,029&0.00&40,136 \\
Utah&5.00&1.02&-42&0.43&1,531 \\
Virginia&5.83&1.19&-2,171&0.50&6,789 \\
West Virginia&6.50&1.32&-357&0.56&570 \\
Wisconsin&6.51&1.32&-2,131&0.56&3,392 \\
Wyoming&0.00&0.00&2,747&0.00&3,240 \\
Average&4.25&0.87&-2,928&0.37&6,392 \\

Table output written to: ../tables/CBratiosALL1_2017alt2.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&1.42&-4,759&0.60&5,255 \\
Delaware&6.80&1.38&-434&0.59&549 \\
Hawaii&11.20&2.28&-2,601&0.97&79 \\
Illinois&4.35&0.89&2,595&0.38&16,752 \\
Maine&7.15&1.46&-764&0.62&756 \\
Maryland&5.83&1.19&-1,688&0.50&5,278 \\
Massachusetts&5.10&1.04&-512&0.44&8,740 \\
Minnesota&10.15&2.07&-9,315&0.88&1,274 \\
New Jersey&8.97&1.83&-15,034&0.77&4,838 \\
New York&6.89&1.40&-26,172&0.59&31,020 \\
Oregon&9.99&2.03&-4,883&0.86&766 \\
Pennsylvania&3.07&0.63&7,521&0.27&17,395 \\
Rhode Island&5.99&1.22&-636&0.52&1,648 \\
Vermont&8.80&1.79&-712&0.76&255 \\
Washington&0.00&0.00&8,999&0.00&10,613 \\
Average&6.75&1.38&-3,226&0.58&7,015 \\
(file ../tables/CBratioAll_map_2017_Basealt2.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    1.018844    .6487025          0   2.871533
  CBratioAlt |         50    .4319159    .2750027          0   1.217321

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    1.018844    .6487025          0   2.871533

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         30    1.423242    .4276981   1.018274   2.871533

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    1.375077    .5968412          0   2.280934

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         12     1.59292    .3960243   1.038639   2.280934

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35     .866173    .6162871          0   2.871533

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         18    1.310123     .420353   1.018274   2.871533

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
355.5188
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.40&862 \\
Arkansas&5&84000&5.33&0.48&752 \\
California&92&617800&14.10&1.26&-6892 \\
Colorado&5&42700&4.77&0.43&823 \\
Florida&35&148000&0.00&0.00&10052 \\
Georgia&9&42900&6.18&0.55&1156 \\
Idaho&1&2700&7.49&0.67&95 \\
Indiana&3&12900&3.23&0.29&613 \\
Iowa&1&3900&6.38&0.57&123 \\
Kansas&2&51600&5.28&0.47&303 \\
Kentucky&1&2700&6.18&0.55&128 \\
Louisiana&1&2800&4.17&0.37&180 \\
Michigan&6&26500&4.25&0.38&1068 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&0.54&655 \\
Montana&3&14100&6.11&0.55&391 \\
Nebraska&2&82200&7.71&0.69&178 \\
Nevada&8&59800&0.00&0.00&2298 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.49&438 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.45&476 \\
Oklahoma&5&34300&2.59&0.23&1104 \\
South Carolina&1&3500&5.55&0.50&145 \\
South Dakota&1&2200&0.00&0.00&287 \\
Tennessee&8&30500&0.00&0.00&2298 \\
Texas&34&190400&0.00&0.00&9765 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.52&550 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&0.58&1081 \\
Wyoming&4&46800&0.00&0.00&1149 \\
Average&7&47249&4.25&0.41&859 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&0.63&754 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&1.00&-0 \\
Illinois&14&48200&4.35&0.39&2457 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.52&962 \\
Massachusetts&8&47900&5.10&0.46&1250 \\
Minnesota&3&10500&10.15&0.91&80 \\
New Jersey&6&30500&8.97&0.80&341 \\
New York&71&444200&6.89&0.62&7828 \\
Oregon&1&25200&9.99&0.89&31 \\
Pennsylvania&5&17500&3.07&0.27&1042 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&2872 \\
Average&9&63353&6.75&0.59&1174 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .4594409    .2976577          0    1.26085
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .4083872     .280021          0   1.216423

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          2    1.157819    .0828787   1.099215   1.216423

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11    .5392173    .2791281          0   1.099215

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          1    1.099215           .   1.099215   1.099215

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27    .3550861    .2672597          0   1.216423

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          1    1.216423           .   1.216423   1.216423

Table output written to: ../tables/CBratiosAgeEI0_2017alt3.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.39&895 \\
Arkansas&5&84,000&5.33&0.45&813 \\
California&92&617,800&14.10&1.22&-5,671 \\
Colorado&5&42,700&4.77&0.37&945 \\
Florida&35&148,000&0.00&0.00&10,293 \\
Georgia&9&42,900&6.18&0.48&1,381 \\
Idaho&1&2,700&7.49&0.70&86 \\
Indiana&3&12,900&3.23&0.28&627 \\
Iowa&1&3,900&6.38&0.48&159 \\
Kansas&2&51,600&5.28&0.41&351 \\
Kentucky&1&2,700&6.18&0.36&198 \\
Louisiana&1&2,800&4.17&0.19&255 \\
Michigan&6&26,500&4.25&0.30&1,259 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.51&734 \\
Montana&3&14,100&6.11&0.51&438 \\
Nebraska&2&82,200&7.71&0.42&366 \\
Nevada&8&59,800&0.00&0.00&2,368 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.41&530 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.38&561 \\
Oklahoma&5&34,300&2.59&0.19&1,235 \\
South Carolina&1&3,500&5.55&0.49&150 \\
South Dakota&1&2,200&0.00&0.00&310 \\
Tennessee&8&30,500&0.00&0.00&2,335 \\
Texas&34&190,400&0.00&0.00&9,819 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.51&573 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.53&1,243 \\
Wyoming&4&46,800&0.00&0.00&1,145 \\
Average&7&47,249&4.25&0.36&954 \\

Table output written to: ../tables/CBratiosAgeEI1_2017alt3.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&0.62&765 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&1.10&-27 \\
Illinois&14&48,200&4.35&0.40&2,381 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.49&1,043 \\
Massachusetts&8&47,900&5.10&0.43&1,337 \\
Minnesota&3&10,500&10.15&0.62&349 \\
New Jersey&6&30,500&8.97&0.76&420 \\
New York&71&444,200&6.89&0.57&8,921 \\
Oregon&1&25,200&9.99&0.66&105 \\
Pennsylvania&5&17,500&3.07&0.29&1,009 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&2,864 \\
Average&9&63,353&6.75&0.54&1,278 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_000096.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_000097.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_000098.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017alt3.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.40&4,246&0.17&6,955 \\
Alaska&0.00&0.00&1,317&0.00&1,551 \\
Arizona&4.47&0.53&5,779&0.22&11,182 \\
Arkansas&5.33&0.63&2,487&0.27&5,788 \\
California&14.10&1.66&-134,817&0.71&70,212 \\
Colorado&4.77&0.56&5,929&0.24&12,162 \\
Florida&0.00&0.00&129,173&0.00&152,155 \\
Georgia&6.18&0.73&4,712&0.31&14,161 \\
Idaho&7.49&0.88&204&0.38&1,297 \\
Indiana&3.23&0.38&6,889&0.16&10,992 \\
Iowa&6.38&0.75&1,701&0.32&5,518 \\
Kansas&5.28&0.62&2,742&0.26&6,304 \\
Kentucky&6.18&0.73&1,575&0.31&4,733 \\
Louisiana&4.17&0.49&3,252&0.21&5,966 \\
Michigan&4.25&0.50&10,900&0.21&20,276 \\
Mississippi&5.07&0.60&1,395&0.25&3,053 \\
Missouri&6.08&0.72&6,054&0.30&17,558 \\
Montana&6.11&0.72&874&0.31&2,562 \\
Nebraska&7.71&0.91&575&0.39&4,612 \\
Nevada&0.00&0.00&16,391&0.00&19,307 \\
New Hampshire&0.00&0.00&4,274&0.00&5,035 \\
New Mexico&3.83&0.45&1,259&0.19&2,186 \\
North Carolina&5.50&0.65&5,546&0.28&13,489 \\
North Dakota&2.34&0.28&1,380&0.12&1,982 \\
Ohio&5.00&0.59&7,112&0.25&15,318 \\
Oklahoma&2.59&0.31&6,176&0.13&9,113 \\
South Carolina&5.55&0.66&2,715&0.28&6,692 \\
South Dakota&0.00&0.00&2,523&0.00&2,971 \\
Tennessee&0.00&0.00&9,565&0.00&11,267 \\
Texas&0.00&0.00&56,288&0.00&66,302 \\
Utah&5.00&0.59&1,548&0.25&3,334 \\
Virginia&5.83&0.69&5,980&0.29&15,985 \\
West Virginia&6.50&0.77&424&0.33&1,448 \\
Wisconsin&6.51&0.77&2,520&0.33&8,616 \\
Wyoming&0.00&0.00&4,544&0.00&5,353 \\
Average&4.25&0.50&5,235&0.21&15,584 \\

Table output written to: ../tables/CBratiosALL1_2017alt3.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&0.82&3,253&0.35&14,226 \\
Delaware&6.80&0.80&368&0.34&1,449 \\
Hawaii&11.20&1.32&-1,081&0.56&1,736 \\
Illinois&4.35&0.51&18,307&0.22&34,658 \\
Maine&7.15&0.84&432&0.36&2,094 \\
Maryland&5.83&0.69&4,649&0.29&12,428 \\
Massachusetts&5.10&0.60&8,719&0.26&19,206 \\
Minnesota&10.15&1.20&-2,858&0.51&8,360 \\
New Jersey&8.97&1.06&-1,764&0.45&19,508 \\
New York&6.89&0.81&20,061&0.35&82,821 \\
Oregon&9.99&1.18&-1,398&0.50&4,594 \\
Pennsylvania&3.07&0.36&21,167&0.15&33,086 \\
Rhode Island&5.99&0.71&1,403&0.30&3,947 \\
Vermont&8.80&1.04&-57&0.44&979 \\
Washington&0.00&0.00&14,885&0.00&17,533 \\
Average&6.75&0.80&5,739&0.34&17,108 \\
(file ../tables/CBratioAll_map_2017_Basealt3.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .5904383    .3759346          0   1.664104
  CBratioAlt |         50    .2506286    .1595763          0    .706377

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .5904383    .3759346          0   1.664104

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          6    1.243357    .2304062    1.03859   1.664104

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    .7968817    .3458801          0   1.321842

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          5    1.159208      .11511    1.03859   1.321842

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35    .5019626    .3571493          0   1.664104

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          1    1.664104           .   1.664104   1.664104

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
355.5188
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.52&413 \\
Arkansas&5&84000&5.33&0.62&325 \\
California&92&617800&14.10&1.65&-10398 \\
Colorado&5&42700&4.77&0.56&382 \\
Florida&35&148000&0.00&0.00&6065 \\
Georgia&9&42900&6.18&0.72&430 \\
Idaho&1&2700&7.49&0.88&21 \\
Indiana&3&12900&3.23&0.38&323 \\
Iowa&1&3900&6.38&0.75&44 \\
Kansas&2&51600&5.28&0.62&132 \\
Kentucky&1&2700&6.18&0.72&48 \\
Louisiana&1&2800&4.17&0.49&89 \\
Michigan&6&26500&4.25&0.50&522 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&0.71&249 \\
Montana&3&14100&6.11&0.72&148 \\
Nebraska&2&82200&7.71&0.90&33 \\
Nevada&8&59800&0.00&0.00&1386 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.64&185 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.59&215 \\
Oklahoma&5&34300&2.59&0.30&604 \\
South Carolina&1&3500&5.55&0.65&61 \\
South Dakota&1&2200&0.00&0.00&173 \\
Tennessee&8&30500&0.00&0.00&1386 \\
Texas&34&190400&0.00&0.00&5892 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.68&220 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&0.76&371 \\
Wyoming&4&46800&0.00&0.00&693 \\
Average&7&47249&4.25&0.53&286 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&0.82&219 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&1.31&-54 \\
Illinois&14&48200&4.35&0.51&1189 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.68&384 \\
Massachusetts&8&47900&5.10&0.60&558 \\
Minnesota&3&10500&10.15&1.19&-98 \\
New Jersey&6&30500&8.97&1.05&-53 \\
New York&71&444200&6.89&0.81&2370 \\
Oregon&1&25200&9.99&1.17&-30 \\
Pennsylvania&5&17500&3.07&0.36&555 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&1733 \\
Average&9&63353&6.75&0.77&452 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .6020657      .39006          0   1.652258
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38     .552296     .414632          0   1.892587

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          3    1.539374    .4605522   1.018473   1.892587

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11    .7584895    .4611916          0   1.892587

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          2     1.45553     .618092   1.018473   1.892587

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27    .4682912    .3708538          0   1.707062

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          1    1.707062           .   1.707062   1.707062

Table output written to: ../tables/CBratiosAgeEI0_2017alt4.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.54&368 \\
Arkansas&5&84,000&5.33&0.60&335 \\
California&92&617,800&14.10&1.71&-9,460 \\
Colorado&5&42,700&4.77&0.48&460 \\
Florida&35&148,000&0.00&0.00&5,797 \\
Georgia&9&42,900&6.18&0.62&594 \\
Idaho&1&2,700&7.49&0.99&1 \\
Indiana&3&12,900&3.23&0.38&283 \\
Iowa&1&3,900&6.38&0.61&75 \\
Kansas&2&51,600&5.28&0.53&173 \\
Kentucky&1&2,700&6.18&0.43&128 \\
Louisiana&1&2,800&4.17&0.21&194 \\
Michigan&6&26,500&4.25&0.37&719 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.67&286 \\
Montana&3&14,100&6.11&0.67&168 \\
Nebraska&2&82,200&7.71&0.48&243 \\
Nevada&8&59,800&0.00&0.00&1,375 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.52&271 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.49&284 \\
Oklahoma&5&34,300&2.59&0.24&733 \\
South Carolina&1&3,500&5.55&0.69&47 \\
South Dakota&1&2,200&0.00&0.00&215 \\
Tennessee&8&30,500&0.00&0.00&1,256 \\
Texas&34&190,400&0.00&0.00&5,165 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.70&193 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.71&449 \\
Wyoming&4&46,800&0.00&0.00&619 \\
Average&7&47,249&4.25&0.47&313 \\

Table output written to: ../tables/CBratiosAgeEI1_2017alt4.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&0.88&127 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&1.89&-94 \\
Illinois&14&48,200&4.35&0.58&790 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.65&391 \\
Massachusetts&8&47,900&5.10&0.57&547 \\
Minnesota&3&10,500&10.15&0.74&170 \\
New Jersey&6&30,500&8.97&1.02&-17 \\
New York&71&444,200&6.89&0.76&2,717 \\
Oregon&1&25,200&9.99&0.81&39 \\
Pennsylvania&5&17,500&3.07&0.44&378 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&1,414 \\
Average&9&63,353&6.75&0.76&431 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000bg.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000bh.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000bi.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017alt4.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.55&1,739&0.23&3,522 \\
Alaska&0.00&0.00&719&0.00&850 \\
Arizona&4.47&0.72&1,856&0.31&5,481 \\
Arkansas&5.33&0.86&508&0.36&2,749 \\
California&14.10&2.28&-141,836&0.96&4,639 \\
Colorado&4.77&0.77&1,699&0.33&5,899 \\
Florida&0.00&0.00&70,589&0.00&83,372 \\
Georgia&6.18&1.00&13&0.42&6,487 \\
Idaho&7.49&1.21&-203&0.51&555 \\
Indiana&3.23&0.52&2,908&0.22&5,598 \\
Iowa&6.38&1.03&-117&0.44&2,504 \\
Kansas&5.28&0.85&584&0.36&3,000 \\
Kentucky&6.18&1.00&4&0.42&2,168 \\
Louisiana&4.17&0.67&1,141&0.29&2,954 \\
Michigan&4.25&0.69&3,743&0.29&10,012 \\
Mississippi&5.07&0.82&343&0.35&1,465 \\
Missouri&6.08&0.98&205&0.42&8,080 \\
Montana&6.11&0.99&22&0.42&1,177 \\
Nebraska&7.71&1.25&-857&0.53&1,946 \\
Nevada&0.00&0.00&8,957&0.00&10,579 \\
New Hampshire&0.00&0.00&2,336&0.00&2,759 \\
New Mexico&3.83&0.62&479&0.26&1,094 \\
North Carolina&5.50&0.89&961&0.38&6,364 \\
North Dakota&2.34&0.38&648&0.16&1,033 \\
Ohio&5.00&0.81&1,820&0.34&7,368 \\
Oklahoma&2.59&0.42&2,828&0.18&4,722 \\
South Carolina&5.55&0.90&443&0.38&3,151 \\
South Dakota&0.00&0.00&1,379&0.00&1,628 \\
Tennessee&0.00&0.00&5,227&0.00&6,174 \\
Texas&0.00&0.00&30,759&0.00&36,330 \\
Utah&5.00&0.81&396&0.34&1,604 \\
Virginia&5.83&0.94&606&0.40&7,438 \\
West Virginia&6.50&1.05&-50&0.44&653 \\
Wisconsin&6.51&1.05&-304&0.45&3,887 \\
Wyoming&0.00&0.00&2,483&0.00&2,933 \\
Average&4.25&0.69&58&0.29&7,148 \\

Table output written to: ../tables/CBratiosALL1_2017alt4.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&1.13&-1,316&0.48&6,259 \\
Delaware&6.80&1.10&-101&0.47&644 \\
Hawaii&11.20&1.81&-1,486&0.77&507 \\
Illinois&4.35&0.70&6,107&0.30&17,056 \\
Maine&7.15&1.16&-235&0.49&913 \\
Maryland&5.83&0.94&471&0.40&5,783 \\
Massachusetts&5.10&0.82&2,105&0.35&9,204 \\
Minnesota&10.15&1.64&-5,052&0.69&2,848 \\
New Jersey&8.97&1.45&-7,389&0.61&7,500 \\
New York&6.89&1.11&-6,655&0.47&36,637 \\
Oregon&9.99&1.61&-2,622&0.68&1,595 \\
Pennsylvania&3.07&0.50&9,140&0.21&16,924 \\
Rhode Island&5.99&0.97&84&0.41&1,824 \\
Vermont&8.80&1.42&-343&0.60&382 \\
Washington&0.00&0.00&8,134&0.00&9,607 \\
Average&6.75&1.09&56&0.46&7,846 \\
(file ../tables/CBratioAll_map_2017_Basealt4.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .8084489    .5147428          0    2.27855
  CBratioAlt |         50    .3422453     .217909          0   .9645914

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .8084489    .5147428          0    2.27855

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    1.353394    .3545002   1.031004    2.27855

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    1.091118    .4735911          0   1.809911

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          9    1.381494     .268631   1.098875   1.809911

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35    .6873049    .4890213          0    2.27855

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          6    1.311244    .4825595   1.031004    2.27855

             Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              2
 5%          2.1              2
10%          2.2              2       Obs                 389
25%          2.7              2       Sum of Wgt.         389

50%          3.7                      Mean           6.694087
                        Largest       Std. Dev.      10.61022
75%          5.5             71
90%           12             78       Variance       112.5767
95%           23           81.5       Skewness       4.821526
99%           71             89       Kurtosis       29.59803
3451.6388
164.65499
(1,700 observations deleted)
(38 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(31 real changes made)
(12 missing values generated)

Table output written to: ../tables/CBratiosEI0_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13900&4.47&0.21&878 \\
Arkansas&5&84000&5.33&0.25&833 \\
California&92&617800&14.10&0.67&6820 \\
Colorado&5&42700&4.77&0.23&863 \\
Florida&35&148000&0.00&0.00&7798 \\
Georgia&9&42900&6.18&0.29&1419 \\
Idaho&1&2700&7.49&0.35&144 \\
Indiana&3&12900&3.23&0.15&566 \\
Iowa&1&3900&6.38&0.30&156 \\
Kansas&2&51600&5.28&0.25&334 \\
Kentucky&1&2700&6.18&0.29&158 \\
Louisiana&1&2800&4.17&0.20&179 \\
Michigan&6&26500&4.25&0.20&1068 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28500&6.08&0.29&793 \\
Montana&3&14100&6.11&0.29&475 \\
Nebraska&2&82200&7.71&0.36&283 \\
Nevada&8&59800&0.00&0.00&1782 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17400&5.50&0.26&494 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10400&5.00&0.24&510 \\
Oklahoma&5&34300&2.59&0.12&978 \\
South Carolina&1&3500&5.55&0.26&164 \\
South Dakota&1&2200&0.00&0.00&223 \\
Tennessee&8&30500&0.00&0.00&1782 \\
Texas&34&190400&0.00&0.00&7575 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35100&5.83&0.28&645 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46100&6.51&0.31&1388 \\
Wyoming&4&46800&0.00&0.00&891 \\
Average&7&47249&4.25&0.22&1120 \\

Table output written to: ../tables/CBratiosEI1_2017.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47200&6.99&0.33&1044 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9600&11.20&0.53&105 \\
Illinois&14&48200&4.35&0.21&2477 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23600&5.83&0.28&1129 \\
Massachusetts&8&47900&5.10&0.24&1352 \\
Minnesota&3&10500&10.15&0.48&347 \\
New Jersey&6&30500&8.97&0.42&769 \\
New York&71&444200&6.89&0.33&10661 \\
Oregon&1&25200&9.99&0.47&117 \\
Pennsylvania&5&17500&3.07&0.15&952 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245900&0.00&0.00&2228 \\
Average&9&63353&6.75&0.31&1412 \\

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .2431449    .1575262          0   .6672661
(file ../tables/CBratio_map_2017.pdf written in PDF format)
       panel variable:  stateage (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
(125,800 observations deleted)
(3,700 real changes made)
(285 real changes made)
23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 6
> 8 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(3,650 observations deleted)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(label nameid already defined)
(label _merge already defined)
(label statenum already defined)
(label statenum already defined)
(label _merge already defined)
(label nameid already defined)
(12 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         38    .2196194     .156831          0     .67001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         11    .2954483    .1635595          0   .6630318

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |         27    .1887261    .1459076          0     .67001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     CBratio |          0

Table output written to: ../tables/CBratiosAgeEI0_2017alt5.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&0&0&3.42&&0 \\
Alaska&0&0&0.00&&0 \\
Arizona&5&13,900&4.47&0.21&854 \\
Arkansas&5&84,000&5.33&0.24&837 \\
California&92&617,800&14.10&0.67&6,101 \\
Colorado&5&42,700&4.77&0.20&927 \\
Florida&35&148,000&0.00&0.00&7,678 \\
Georgia&9&42,900&6.18&0.25&1,515 \\
Idaho&1&2,700&7.49&0.39&129 \\
Indiana&3&12,900&3.23&0.15&531 \\
Iowa&1&3,900&6.38&0.25&181 \\
Kansas&2&51,600&5.28&0.22&366 \\
Kentucky&1&2,700&6.18&0.18&216 \\
Louisiana&1&2,800&4.17&0.09&252 \\
Michigan&6&26,500&4.25&0.16&1,206 \\
Mississippi&0&0&5.07&&0 \\
Missouri&5&28,500&6.08&0.27&825 \\
Montana&3&14,100&6.11&0.27&488 \\
Nebraska&2&82,200&7.71&0.21&429 \\
Nevada&8&59,800&0.00&0.00&1,792 \\
New Hampshire&0&0&0.00&&0 \\
New Mexico&0&0&3.83&&0 \\
North Carolina&3&17,400&5.50&0.22&560 \\
North Dakota&0&0&2.34&&0 \\
Ohio&3&10,400&5.00&0.20&566 \\
Oklahoma&5&34,300&2.59&0.10&1,091 \\
South Carolina&1&3,500&5.55&0.27&155 \\
South Dakota&1&2,200&0.00&0.00&258 \\
Tennessee&8&30,500&0.00&0.00&1,704 \\
Texas&34&190,400&0.00&0.00&7,062 \\
Utah&0&0&5.00&&0 \\
Virginia&4&35,100&5.83&0.28&624 \\
West Virginia&0&0&6.50&&0 \\
Wisconsin&9&46,100&6.51&0.28&1,437 \\
Wyoming&4&46,800&0.00&0.00&829 \\
Average&7&47,249&4.25&0.19&1,103 \\

Table output written to: ../tables/CBratiosAgeEI1_2017alt5.tex

&Forbes &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&7&47,200&6.99&0.34&947 \\
Delaware&0&0&6.80&&0 \\
Hawaii&1&9,600&11.20&0.66&57 \\
Illinois&14&48,200&4.35&0.22&2,104 \\
Maine&0&0&7.15&&0 \\
Maryland&7&23,600&5.83&0.26&1,099 \\
Massachusetts&8&47,900&5.10&0.23&1,321 \\
Minnesota&3&10,500&10.15&0.31&533 \\
New Jersey&6&30,500&8.97&0.41&748 \\
New York&71&444,200&6.89&0.31&10,602 \\
Oregon&1&25,200&9.99&0.34&167 \\
Pennsylvania&5&17,500&3.07&0.16&813 \\
Rhode Island&0&0&5.99&&0 \\
Vermont&0&0&8.80&&0 \\
Washington&10&245,900&0.00&0.00&2,005 \\
Average&9&63,353&6.75&0.30&1,360 \\
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000dq.tmp saved
(9 vars, 51 obs)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000dr.tmp saved
(9 vars, 51 obs)
amount: contains nonnumeric characters; replaced as long
(2 missing values generated)
number: contains nonnumeric characters; replaced as int
(2 missing values generated)
file C:\Users\l1djw01\AppData\Local\Temp\ST_4f98_0000ds.tmp saved
(1,700 observations deleted)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                                50  
    -----------------------------------------
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)
(41 real changes made)

Table output written to: ../tables/CBratiosALL0_2017alt5.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Alabama&3.42&0.47&2,773&0.20&4,955 \\
Alaska&0.00&0.00&970&0.00&1,144 \\
Arizona&4.47&0.62&3,460&0.26&7,855 \\
Arkansas&5.33&0.73&1,311&0.31&4,012 \\
California&14.10&1.94&-141,167&0.82&31,066 \\
Colorado&4.77&0.66&3,424&0.28&8,506 \\
Florida&0.00&0.00&95,195&0.00&112,277 \\
Georgia&6.18&0.85&1,901&0.36&9,670 \\
Idaho&7.49&1.03&-42&0.44&861 \\
Indiana&3.23&0.45&4,552&0.19&7,851 \\
Iowa&6.38&0.88&612&0.37&3,753 \\
Kansas&5.28&0.73&1,460&0.31&4,373 \\
Kentucky&6.18&0.85&635&0.36&3,232 \\
Louisiana&4.17&0.57&2,006&0.24&4,209 \\
Michigan&4.25&0.59&6,675&0.25&14,289 \\
Mississippi&5.07&0.70&771&0.30&2,125 \\
Missouri&6.08&0.84&2,558&0.36&12,012 \\
Montana&6.11&0.84&364&0.36&1,752 \\
Nebraska&7.71&1.06&-295&0.45&3,047 \\
Nevada&0.00&0.00&12,080&0.00&14,247 \\
New Hampshire&0.00&0.00&3,150&0.00&3,715 \\
New Mexico&3.83&0.53&800&0.22&1,549 \\
North Carolina&5.50&0.76&2,817&0.32&9,324 \\
North Dakota&2.34&0.32&952&0.14&1,430 \\
Ohio&5.00&0.69&3,974&0.29&10,674 \\
Oklahoma&2.59&0.36&4,216&0.15&6,558 \\
South Carolina&5.55&0.77&1,363&0.32&4,622 \\
South Dakota&0.00&0.00&1,859&0.00&2,193 \\
Tennessee&0.00&0.00&7,049&0.00&8,314 \\
Texas&0.00&0.00&41,481&0.00&48,925 \\
Utah&5.00&0.69&865&0.29&2,324 \\
Virginia&5.83&0.80&2,774&0.34&10,985 \\
West Virginia&6.50&0.90&140&0.38&983 \\
Wisconsin&6.51&0.90&826&0.38&5,847 \\
Wyoming&0.00&0.00&3,349&0.00&3,950 \\
Average&4.25&0.59&2,139&0.25&10,647 \\

Table output written to: ../tables/CBratiosALL1_2017alt5.tex

& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elasticity}}\\ &Personal Income & &EPV Net 
> Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Adopting (mil)\\
\midrule
Connecticut&6.99&0.96&500&0.41&9,556 \\
Delaware&6.80&0.94&86&0.40&977 \\
Hawaii&11.20&1.54&-1,346&0.65&1,009 \\
Illinois&4.35&0.60&11,101&0.25&24,389 \\
Maine&7.15&0.99&29&0.42&1,401 \\
Maryland&5.83&0.80&2,157&0.34&8,541 \\
Massachusetts&5.10&0.70&4,794&0.30&13,363 \\
Minnesota&10.15&1.40&-4,247&0.59&5,107 \\
New Jersey&8.97&1.24&-5,241&0.52&12,440 \\
New York&6.89&0.95&3,977&0.40&55,753 \\
Oregon&9.99&1.38&-2,170&0.58&2,825 \\
Pennsylvania&3.07&0.42&14,110&0.18&23,676 \\
Rhode Island&5.99&0.83&615&0.35&2,705 \\
Vermont&8.80&1.21&-233&0.51&628 \\
Washington&0.00&0.00&10,969&0.00&12,938 \\
Average&6.75&0.93&2,340&0.39&11,687 \\
(file ../tables/CBratioAll_map_2017_Basealt5.pdf written in PDF format)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .6896028     .439073          0   1.943592
  CBratioAlt |         50    .2923414     .186135          0   .8239415

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         50    .6896028     .439073          0   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          8    1.351037    .2947293   1.032447   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         15    .9307184    .4039708          0   1.543846

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          5    1.353898    .1344428   1.213022   1.543846

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |         35    .5862676    .4171327          0   1.943592

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 CBratioBase |          3     1.34627    .5175176   1.032447   1.943592
. 
. 
. /// CREATE DECOMPOSITION TABLE
> use ./stata_data/StateyearAnalysisDataset.dta, clear
. keep if year>=`postyear'
(950 observations deleted)
. keep stock wealth EI EI_Tax year abbr
. reshape wide stock wealth EI EI_Tax, i(abbr) j(year)
(note: j = 2001 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                      800   ->      50
Number of variables                   6   ->      65
j variable (16 values)             year   ->   (dropped)
xij variables:
                                  stock   ->   stock2001 stock2003 ... stock2017
                                 wealth   ->   wealth2001 wealth2003 ... wealth2017
                                     EI   ->   EI2001 EI2003 ... EI2017
                                 EI_Tax   ->   EI_Tax2001 EI_Tax2003 ... EI_Tax2017
-----------------------------------------------------------------------------
. 
. local eta = 0.328
. local etaW = 0.397
. local T = 23.7*(`LP')
. label values stock*
. keep if EI2001==1
(39 observations deleted)
. 
. gen TaxRev`postyear' = 0
. replace TaxRev`postyear' = wealth`postyear'*.0825
(11 real changes made)
. 
. foreach var in stock wealth TaxRev {
  2.         gen `var'_deltaMobility = 0
  3. }
. replace stock_deltaMobility = -`eta'*stock`postyear' if EI`postyear'==1
(11 real changes made)
. replace wealth_deltaMobility = -`etaW'*wealth`postyear' if EI`postyear'==1
(11 real changes made)
. replace TaxRev_deltaMobility = -`etaW'*TaxRev`postyear' if EI`postyear'==1
(11 real changes made)
. 
. *gen TaxRev_delta04_17 = wealth_delta04_17*`s'*0.16
. *gen EIshryears = rowsum(EI20*)/(2017-`postyear'+1)  //will be 0 if state never had EI, 1 if state always had EI, in between if later 
> adopted or repealed
. 
. gen repealed = (EI`postyear'==1 & EI2017==0)
. gen stock_repealed = -stock`postyear'*repealed*(1 - `eta')
. gen wealth_repealed = -wealth`postyear'*repealed*(1 - `etaW')
. gen TaxRev_repealed = -TaxRev`postyear'*repealed*(1 - `etaW')
. gen adopted = (EI`postyear'==0 & EI2017==1)
. foreach var in stock  {
  2.         gen `var'_adopted = `var'`postyear'*adopted*(1 - `eta')
  3. }
. foreach var in wealth TaxRev {
  2.         gen `var'_adopted = `var'`postyear'*adopted*(1 - `etaW')
  3. }
. 
. *foreach var in stock wealth TaxRev {
. *       gen `var'_lost = 0
. *       replace `var'_lost = `var'_deltaMobility if EIshryears = 1
. *       replace `var'_lost = `var'_lost + (1 - `eta')*`var'_dropped 
. *}
. 
. collapse (sum) stock`postyear' wealth`postyear' TaxRev`postyear' *_deltaMobility *_repealed *_adopted repealed adopted EI_Tax*
. foreach var in stock wealth TaxRev {
  2.         gen `var'_delta = `var'_deltaMobility + `var'_repealed + `var'_adopted
  3. }
. gen EI_Tax_delta = EI_Tax2017 - EI_Tax`postyear'
. *list EI_Tax_delta
. *list repealed
. *list adopted
. /// VALUES FOR DECOMP TABLE (7):
> list stock`postyear' stock_deltaMobility  

     +---------------------+
     | sto~2001   stock_~y |
     |---------------------|
  1. |       78    -25.584 |
     +---------------------+
. list wealth`postyear' wealth_deltaMobility

     +----------------------+
     | wea~2001   wealth_~y |
     |----------------------|
  1. | 227.6391   -90.37273 |
     +----------------------+
. list TaxRev`postyear' TaxRev_deltaMobility

     +---------------------+
     | Tax~2001   TaxRev~y |
     |---------------------|
  1. | 18.78023   -7.45575 |
     +---------------------+
. 
. } //end runCB IF code

. 
. 
. /// 6. TABLE OF LEVELS AND CHANGES BY STATE
> if "$runCOUNTS_BY_STATE" == "yes" {
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth EI year State
. reshape wide stock pbwealth EI, i(State) j(year)
. gen stock_delta82_17 = stock2017 - stock1982
. gen stock_delta82_00 = stock2000 - stock1982
. gen stock_delta00_17 = stock2017 - stock2000
. 
. #delimit ;
delimiter now ;
. *tabout State using "../tables/Summary_Stats_3.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway clab(Forbes_Population_in_2017 Mean_Wealth_in_2017_(mil$) 1982-2017_Change_Forbes_Population) total(Average);
. tabout State using "../tables/Summary_Stats_3.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17 mean stock_delta82_00 mean stock_delta00_17) f(0 0 0 0 0)
>  
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change & 1982-2000 Change & 2000-2017 Change\\State & in 2017
> & in 2017 (mil) & in Forbes Population & in Forbes Population & in Forbes Population\\) total(Average);
. #delimit cr
delimiter now cr
. 
. /// MAPS OF FORBES 400 LOCATION FOR FIGURE 2
> preserve
. import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
. rename abbr state
. keep state State
. tempfile mapping
. save `mapping'
. restore
. merge 1:1 State using `mapping', nogen keep(1 3)
. maptile stock1982, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5")))
. graph export ../tables/Forbes400Map1982.pdf, replace as(pdf)
. maptile stock2017, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5") ))
. graph export ../tables/Forbes400Map2017.pdf, replace as(pdf)
. *pause
. 
. /// TABLE LISTING STATES WITH ET IN SELECTED YEARS
> egen EIrowtotal = rowtotal(/*EI1995*/ EI2001 EI2005 EI2010 EI2017)
. preserve
. keep if EIrowtotal==4
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableALWAYS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if EI2001 == 0 & (EI2005==1 | EI2010==1 | EI2017==1)
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableADOPTERS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if EI2001 == 1 & (EI2005==0 | EI2010==0 | EI2017==0)
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableREPEALERS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if -EIrowtotal<0 | EI1995==1
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtable.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI1995 sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0 0) 
>                 oneway h3( & 1995 & 2001 & 2005 & 2010 & 2017\\\hline\hline) total(Number_of_ET_States);
. #delimit cr
delimiter now cr
. restore
. 
. 
. /// TABLE OF LEVELS AND CHANGES BY CITY
> use ./stata_data/IndivAnalysisDataset.dta, clear
. collapse (count) stock=nameid (sum) NetWorthMill, by(CAname year)
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth year CAname
. reshape wide  stock pbwealth, i(CAname) j(year)
. replace stock1982=0 if stock1982==.
. gen stock_delta82_17 = stock2017 - stock1982
. 
. gsort -stock2017
. keep if _n <= 40
. replace CAname = subinstr(CAname," Combined Statistical Area","",.)
. replace CAname = subinstr(CAname," Metropolitan Statistical Area","",.)
. label variable CAname "City Name"
. #delimit ;
delimiter now ;
. *tabout CAname using "../tables/Summary_Stats_4.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway clab(Forbes_Population_in_2017 Mean_Wealth_in_2017_(mil$) 1982-2017_Change_Forbes_Population) total(Average);
. tabout CAname using "../tables/Summary_Stats_4.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change\\City & in 2017& in 2017 (mil) & in Forbes Population\
> \) total(Average);
. #delimit cr
delimiter now cr
. *tabout CAname using "../tables/TopCities.tex", style(tex) h2(nil) bt replace sum cells(mean stock mean pbwealth) f(1 1) oneway clab(F
> orbes_400_Population Mean_Forbes_400_Wealth)
. 
. }

. 
. 
. capture log close
