----------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  s:\dan\Paper - Forbes\ReplicationPackage\data\../log/analysis19 Dec 2021.log
  log type:  text
 opened on:  19 Dec 2021, 18:17:23

. 
. ///SET LOCALS AND GLOBALS
> local postyear = 2001

. 
. ///     Set controls to empty set if no controls:
> local controls

. local drop_condition "" 

. local wealth wealth_normalized

. 
. *************************
. 
. global BuildData "no"

. global run2D "yes"

. global run3D "yes"

. global runINDV "no"

. global runMOVERS "no"

. global runCB "no"

. global runCOUNTS_BY_STATE "no"

. 
. 
. if "$BuildData"=="yes" {
. 
. //Import state GDP data and create GDP change variable
. use "stata_data/gdp_inst.dta", clear 
. rename state abbr
. xtset fips year, yearly
. g gdp_change = 100*log(gdp-L1.gdp)
. tempfile stateGDP
. save `stateGDP'
. 
. //Import EI and Total tax revenues by state and year
. use "stata_data/EI_Tax.dta", clear
. rename Year year
. destring Total_Taxes, replace ignore(",")
. tempfile EI_Tax
. save `EI_Tax'
. 
. //Import population data and create population change variable
. import haver ??rbt@uspop, tvar(year) clear
. describe *uspop, varlist
. 
. foreach var in `r(varlist)' {
  2.         local tmp = strupper(substr("`var'", 1, 2))
  3.         di "`tmp'"
  4.         rename `var' pop`tmp'
  5. }
. 
. drop popC1 popC2 popC3 popC4 popC5 popC6 popC7 popC8 popC9
. drop popR1 popR2 popR3 popR4 
. drop popDC popPR
. drop if year < 1981
. reshape long pop, i(year) j(state) string
. rename state abbr
. egen id = group(abbr)
. xtset id year, yearly
. g pop_change = 100*log(pop-L1.pop)
. drop if year==1981
. 
. 
. /// ENTER EI INDICATOR
> gen EI = 0
. 
. /// From Conway & Rork (2004 NTJ), Table 1:
> replace EI = 1 if inlist(abbr,"AK","AL","GA","FL","AR","NV")==0 //ALL BUT 6 STATES HAD EI BEYOND PICK-UP TAX PRIOR TO 1976
. replace EI = 0 if abbr=="NM" & year>=1976
. replace EI = 0 if abbr=="UT" & year>=1977
. replace EI = 0 if abbr=="ND" & year>=1979
. replace EI = 0 if inlist(abbr,"AZ","VA","CO","VT") & year>=1980
. replace EI = 0 if abbr=="MO" & year>=1981
. replace EI = 0 if inlist(abbr,"CA","WA") & year>=1982
. replace EI = 0 if inlist(abbr,"IL","WY","TX") & year>=1983
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if inlist(abbr,"MN","ME") & year>=1986
. replace EI = 0 if abbr=="OR" & year>=1987
. replace EI = 0 if abbr=="ID" & year>=1988
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if abbr=="RI" & year>=1991
. replace EI = 0 if inlist(abbr,"SC","WI") & year>=1992
. replace EI = 0 if abbr=="MI" & year>=1993
. replace EI = 0 if abbr=="MA" & year>=1997
. replace EI = 0 if inlist(abbr,"DE","NC") & year>=1999
. replace EI = 0 if inlist(abbr,"MS", "NY") & year>=2000 //from Conway-Rork. Though NY is unclear because of EI with no gift tax: https:
> //www.tax.ny.gov/pit/estate/etidx.htm
. replace EI = 0 if inlist(abbr,"SD","MT") & year>=2001
. 
. //from https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218...says HI replaced stand-alone I tax with pick-up tax in 1
> 983
. replace EI = 0 if abbr=="HI" & year>=1983
. 
. /// Some states from above list reinstated EI tax later on
> replace EI = 1 if abbr=="OR" & year>=2003 //https://olis.leg.state.or.us/liz/2019R1/Downloads/CommitteeMeetingDocument/159041
. replace EI = 1 if abbr=="VT" & year>=2004
. replace EI = 1 if abbr=="RI" & year>=2002 //http://www.tax.ri.gov/forms/2018/Estate/RI-100A_2002-2014_m2018.pdf
. replace EI = 1 if abbr=="DE" & inrange(year,2009,2017)
. replace EI = 1 if abbr=="IL" & year>=2009
. replace EI = 1 if abbr=="HI" & year>=2010 //https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218
. replace EI = 1 if abbr=="NC" & year>=2002
. replace EI = 1 if abbr=="WA" & year>=2005 //(https://dor.wa.gov/sites/default/files/legacy/Docs/reports/2010/Tax_Reference_2010/06taxh
> istory.pdf)
. 
. replace EI = 1 if abbr=="WI" & inrange(year,2001,2007) //pick-up tax kept after EGTRRA, then repealed after 2007. https://www.wisbar.o
> rg/newspublications/wisconsinlawyer/pages/Article.aspx?Volume=80&Issue=12&ArticleID=1396
. replace EI = 1 if abbr=="VA" & inrange(year,2001,2006) //pick-up tax kept after EGTRRA, then repealed after 2006. https://www.mcplegal
> .com/practice-areas/trusts-estate-planning/taxes/
. replace EI = 1 if abbr=="ME" & year>=2013 //from MN study and verified at https://www.maine.gov/revenue/incomeestate/estate/index.htm
. replace EI = 1 if abbr=="MA" & year>=2001 //from https://www.mass.gov/guides/a-guide-to-estate-taxes
. replace EI = 1 if abbr=="MN" & year>=2001
. 
. replace EI = 0 if abbr=="KS" & year>2009 //KS estate tax repealed after 2009: https://www.ksrevenue.org/taxnotices/notice10-07.pdf
. 
. //NY: from https://www.tax.ny.gov/pit/estate/etidx.htm and http://riker.com/publications/significant-new-york-tax-legislation-replaces
> -current-estate-tax-with-a-pic
. //It seems NY replaced their EI tax with a pick-up tax in 2000 and they repealed their gift tax. Hence, one could avoid EI taxes by gi
> ving gifts before death. In April 2014, they brought back the gift tax.
. replace EI = 1 if abbr=="NY" & /*year>=2001*/ year>2014
. 
. ***************** CT PUT $20M CAP ON ESTATE TAX PAYMENT STARTING IN 2016 (REDUCED TO $15M IN 2019) ***************
. ***************** NOTE $20M WOULD BE THE ET BILL FOR A CT ESTATE WORTH $323M ($20M/(12%*(8.25/16)))
. ***************** ALSO NOTE THAT $20M ET BILL ON $1B CT ESTATE EQUATE TO ET RATE OF 2%...SO SMALL BUT NON-TRIVIAL
. ***************** WE TREAT CT HAS CONTINUING TO HAVE ET AFTER 2015. BUT LATER SHOW RESULTS ROBUST TO DROPPING CT.
. *replace EI = 0 if abbr=="CT" & year>=2016  //https://www.cga.ct.gov/2017/ACT/pa/2017PA-00002-R00SB-01502SS1-PA.htm
. 
. /// More recent repeals (from MN study)
> replace EI = 0 if inlist(abbr,"NJ") & year>=2018
. replace EI = 0 if inlist(abbr,"NC","OH") & year>=2013
. replace EI = 0 if abbr=="OK" & year>=2010               //found online
. 
. /// Dealing with Inheritance-tax-only cases, which all have low or zero rates for lineal heirs (and ~16% for non-lineal heirs). 
> //B&S says IA, KY, and NJ had I tax (as of 1998) only on collateral heirs. I confirmed this is true post-98 as well (see Michael 2018)
> .
. //NE repealed its estate tax in 2007. It retained an inheritance tax but with a rate on lineal heirs (kids) of just 1%. EI taxes/gdp p
> lummeted after 2007
. //NH had an I tax for death before 2003: https://www.revenue.nh.gov/faq/inheritance-estate.htm
. //In 2008, LA repealed its I tax which was a pick-up tax that had never been coupled to fed credit; deaths after 2004 not subject to t
> ax 
. //In 2012, TN I tax was phased out to be fully repealed by 2016.
. //The IN I tax is being phased out from 2013-2022 by 10% each year. Lineal heirs have low rate.
. 
. // NJ had an estate tax in addition to I tax up until 2018: https://www.state.nj.us/treasury/taxation/inheritance-estate/tax-rates.sht
> ml
. replace EI = 0 if inlist(abbr,"IA","KY","NE","NH","LA","TN","IN")
. gen Ionly = 0 
. replace Ionly = 1 if inlist(abbr,"IA","KY") | (abbr=="NE" & year>=2007) | (abbr=="NH" & year<2003) | (abbr=="LA" & year<2008) | (abbr=
> ="TN" & year<2012) | (abbr=="IN" & year<2013)  | (abbr=="NJ" & year>=2018)
. 
. // COULD CHANGE PA TO I-ONLY STATE (SEE MICHAEL 2018 ). It is unique among I-only states in having tax (4.5%) on lineal heirs (and 15%
>  on other heirs)...so more similar to ET.
. // at least check into robustness of this choice
. 
. 
. levelsof abbr if EI==1 & year==2000, local(temp)
. levelsof abbr if EI==1 & year==2001, local(temp)
. levelsof abbr if EI==1 & year==2017, local(temp)
. 
. /// ENTER STATUTORY ET RATES AND THEN COMPUTE COMBINED FED+STATE ET RATE FOR EACH STATE-YEAR
> gen EIrate_state = 0
. replace EIrate_state = 0.16*EI if inlist(abbr,"NJ","OR","OK","KS","MN","WI","IL","OH","NC") | inlist(abbr,"VA","MD","DE","PA","NY","RI
> ","MA","VT")
. replace EIrate_state = 0.157*EI if abbr=="HI"
. replace EIrate_state = 0.12*EI if abbr=="ME"
. replace EIrate_state = 0.20*EI if abbr=="WA"
. 
. replace EIrate_state = 0.16*EI if abbr=="CT" & year<2010
. replace EIrate_state = 0.12*EI if abbr=="CT" & year>=2010
. replace EIrate_state = 0.02*EI if abbr=="CT" & inrange(year,2016,2018) //implied ET rate on $1B estate given $20M max tax
. replace EIrate_state = 0.015*EI if abbr=="CT" & year>=2019 //implied ET rate on $1B estate given $15M max tax
. 
. 
. /// Federal top ET rate by year (https://www.sparrowcapital.com/resource-center/estate/a-brief-history-of-estate-taxes)
> gen EIrate_fed = .70 if year<1982
. replace EIrate_fed = .65 if inrange(year,1982,1982) 
. replace EIrate_fed = .60 if inrange(year,1983,1983) 
. replace EIrate_fed = .55 if inrange(year,1984,2001) 
. replace EIrate_fed = .50 if inrange(year,2002,2002)
. replace EIrate_fed = .49 if inrange(year,2003,2003)
. replace EIrate_fed = .48 if inrange(year,2004,2004)
. replace EIrate_fed = .47 if inrange(year,2005,2005)
. replace EIrate_fed = .46 if inrange(year,2006,2006)
. replace EIrate_fed = .45 if inrange(year,2007,2009)
. replace EIrate_fed = 0 if inrange(year,2010,2010)
. replace EIrate_fed = .35 if inrange(year,2011,2012)
. replace EIrate_fed = .396 if inrange(year,2013,2017)
. replace EIrate_fed = .37 if inrange(year,2018,2019)
. 
. gen EIratecombined = EIrate_state + EIrate_fed - EIrate_state if year<=2001  //full federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .75*EIrate_state if year==2002  //75% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .5*EIrate_state if year==2003  //50% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .25*EIrate_state if year==2004  //25% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed*(1 - EIrate_state) if year>=2005  //federal deduction for state ET
. 
. save stata_data/popEI.dta, replace
. 
. //Merge in state GDP data
. use "stata_data/EI_Tax_Merged_v2.dta", clear
. 
. rename Year year
. sort year State
. drop if year < 1982
. drop if abbr == "" | abbr == "DC"
. merge m:1 abbr year using stata_data/popEI.dta, nogen keepusing(pop_change pop EI Ionly) keep(1 3)
. merge m:1 abbr year using `stateGDP', nogen keepusing(gdp gdp_change) keep(1 3)
. 
. //Relabel variables that will be included in regression
. label variable pop_change "Pop. Change"
. label variable gdp_change "GDP Change"
. label variable EI "ET indicator"
. 
. /// EI tax revenues data
> destring Total_Taxes, replace ignore(",")
. gen EIshare = EI_Tax/Total_Taxes
. 
. //Import annual CPI-U data
. preserve
. import haver cpiuann@usecon, tvar(year) clear
. rename cpiuann cpi
. replace cpi = cpi/245.120  //re-base cpi to be 1 in 2017
. tempfile cpi
. save `cpi'
. restore
. merge m:1 year using `cpi', nogen keep(1 3)
. 
. // Dropping observations that are not reported, out of the country, or Washington D.C.
. drop if State == "Washington DC"
. drop if State == ""
. drop if Name == ""
. 
. //Generate average
. g avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. 
. glevelsof abbr, local(state)
. 
. drop if Name == "Henry Earl Singleton" & year == 1988 & ourrank == . // Keeping higher ranked observation
. 
. //Adding 2 to the younger family members with the same name in order to be able to differentiate
. duplicates tag Name year, gen(tag)
. g young_man=0
. sort year Name Age_num
. replace young_man = 1 if Name[_n]==Name[_n+1] & year[_n]==year[_n+1] & Age_num[_n]!=Age_num[_n+1] & tag==1
. 
. replace Name = "Charles A Vose 2" if Name == "Charles A Vose" & young_man==1
. replace Name = "Pierre Samuel Du Pont Family" if Name == "Pierre Samuel Du Pont" & family == 1
. replace Name = "Stephen Davidson Betchel 2" if Name == "Stephen Davidson Betchel" & young_man == 1
. replace Name = "Stephen Davidson Betchel Family" if Name == "Stephen Davidson Betchel" & family == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & young_man == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & year >= 1995
. *****I am letting the second occurence of Alice Francis Du Pont Mills in 1994 drop because I did not see two entries in the scanned Fo
> rbes document**********
. replace Name = "Frank Batten 2" if Name == "Frank Batten" & young_man == 1
. replace Name = "Jim Davis 2" if Name == "Jim Davis" & young_man == 1
. replace Name = "Edward Crosby Johnson 2" if Name == "Edward Crosby Johnson" & young_man == 1
. 
. drop tag
. 
. duplicates tag Name year, gen(tag)
. drop if tag~=0  //drops individuals with multiple residences
. drop tag
. tempfile cleaned
. save `cleaned'
. 
. //Relabel some variables
. label variable avg "Top State Personal MTR"
. label variable our_wealthy "Inheritors" 
. label variable state_tax "CIT Rate"
. 
. //Changing name to make it easier to differentiate between family members with same name
. replace Name = "Edward Johnson" if Name == "Edward Crosby Johnson" & year == 2017 & Age_num == 53 
. 
. //Other name fixes
. replace Name = "Oakleigh Blakeman Thorne" if Name=="Oakleigh Blakeman Thome"
. 
. drop stab //redundant with abbr
. 
. //Fix units
. replace our_wealthy = 1 if our_wealthy==2
. replace avg = avg/100
. 
. encode Name, gen(nameid)
. egen stateyear = group(abbr year)
. egen stateyearnameid = group(abbr year nameid)
. 
. /// CLEAN UP THE AGE VARIABLE (Note: there truly was someone who was 101, and the ages for 400 and 800 are for families and are mistak
> es)
> if _rc==0 {
. tab Age
. replace Age_num = 25 if Age == "20s"
. replace Age_num = 35 if Age == "30s"
. replace Age_num = 45 if Age == "40s"
. replace Age_num = 55 if inlist(Age,"50s",">51")
. replace Age_num = 65 if Age == "60s"
. replace Age_num = 75 if Age == "70s"
. replace Age_num = 85 if Age == "80s"
. replace Age_num = 95 if Age == "90s"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 78 if Age == "late 70s"
. replace Age_num = 88 if Age == "late 80s"
. replace Age_num = 50 if Age == "near 50"
. replace Age_num = 70 if Age == "near 70"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 83 if Age == "83, 79 "
. replace Age_num = 74 if Age == "74, 75 "
. replace Age_num = 65 if Age == "65, 63 "
. replace Age_num = real(subinstr(Age,",","",.))
. replace Age_num = real(subinstr(Age,"*","",.))
. replace Age_num = real(subinstr(Age,"'","",.))
. replace Age_num = real(subinstr(Age,"`","",.))
. replace Age_num = real(subinstr(Age,"_","",.))
. replace Age_num = real(subinstr(Age,"-","",.))
. replace Age_num = real(subinstr(Age," ","",.))
. replace Age_num = real(subinstr(Age,"Q","0",.))
. replace Age_num = real(subinstr(Age,">","",.))
. replace Age_num = real(subinstr(Age,"a","0",.))
. replace Age_num = real(subinstr(Age,".","",.))
. 
. 
. //Fixing Forbes age issues 
. replace Age_num = 77 if Name == "John Hammond Krehbiel Jr" & year == 1983
. replace Age_num = 33 if Name == "Swanee Hunt" & year == 1983
. replace Age_num = (1998 - 1945) if year == 1998 & Name == "Gary Tharaldson"
. replace Age_num = (1997 - 1945) if year == 1997 & Name == "Gary Tharaldson"
. replace Age_num = 85 if year==2015 & Name == "Warren Edward Buffett"
. replace Age_num = 60 if year==2015 & Name == "William Henry Gates"
. replace Age_num = 95 if year==1994 & Name == "Katsumasa (Roy) Sakioka"
. 
. replace Age_num = 51 if Name == "Abigail Johnson" & year == 2012
. replace Age_num = . if Name == "Abigail Johnson" & (year >= 2013 | year < 2012)
. 
. replace Age_num = 58 if Name == "Adolph Alfred Taubman" & year == 1982
. replace Age_num = . if Name == "Adolph Alfred Taubman" & year >= 1983
. 
. replace Age_num = 48 if Name == "Alan C Ashton" & year == 1990 
. replace Age_num = . if Name == "Alan C Ashton" & year > 1990
. 
. replace Age_num = 82 if Name == "Alan Gerry" & year == 2011
. replace Age_num = . if Name == "Alan Gerry" & year > 2011
. 
. replace Age_num = 66 if Name == "Albert Lee Ueltschi" & year == 1983
. 
. replace Age_num = 64 if Name == "Alberto Vilar" & year == 2004
. 
. replace Age_num = 72 if Name == "Zachary Fisher" & year == 1982
. replace Age_num = . if Name == "Zachary Fisher" & year > 1982
. 
. replace Age_num = 44 if Name == "Winthrop Paul Rockefeller" & year == 1992
. replace Age_num = . if Name == "Winthrop Paul Rockefeller" & year > 1992
. 
. replace Age_num = 46 if Name == "Winnie Johnson-Marquart" & year == 2004
. replace Age_num = . if Name == "Winnie Johnson-Marquart" & year > 2004
. 
. replace Age_num = 62 if Name == "Alec Gores" & year == 2015
. 
. replace Age_num = 38 if Name == "Alejandro Santo Domingo" & year == 2015
. replace Age_num = . if Name == "Alejandro Santo Domingo" & year > 2015
. 
. replace Age_num = 66 if Name == "Alice L Walton" & year == 2015
. replace Age_num = . if Name == "Alice L Walton" & year > 2015
. 
. replace Age_num = 74 if Name == "Allan Goldman" & year == 2016
. 
. replace Age_num = 81 if Name == "Amos Barr Hostetter" & year == 2017
. replace Age_num = . if Name == "Amos Barr Hostetter" & year < 2017
. 
. replace Age_num = 44 if Name == "Amy Wyss" & year == 2015
. replace Age_num = 45 if Name == "Amy Wyss" & year == 2016
. 
. replace Age_num = 37 if Name == "Andres Santo Domingo" & year == 2015
. 
. replace Age_num = 62 if Name == "Andrew Beal" & year == 2014
. replace Age_num = . if Name == "Andrew Beal" & year > 2014
. 
. replace Age_num = 84 if Name == "Andrew Jerrold Perenchio" & year == 2015
. replace Age_num = 85 if Name == "Andrew Jerrold Perenchio" & year == 2016
. 
. replace Age_num = 59 if Name == "Anita Zucker" & year == 2010 //Overwrote Forbes age
. replace Age_num = . if Name == "Anita Zucker" & year > 2010
. 
. replace Age_num = . if Name == "Ann Walton Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Anne Cox Chambers" & year > 1982
. 
. replace Age_num = 80 if Name == "Anne Gittinger" & year == 2015
. replace Age_num = . if Name == "Anne Gittinger" & year < 2015
. 
. replace Age_num = 54 if Name == "Anthony Pritzker" & year == 2015
. replace Age_num = . if Name == "Anthony Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "Archie Aldis Emmerson" & year < 2017
. 
. replace Age_num = . if Name == "Arthur M Blank" & year < 2017
. 
. replace Age_num = . if Name == "Arturo Moreno" & year < 2017
. 
. replace Age_num = . if Name == "Austen S Cargill" & year < 2017
. 
. replace Age_num = 69 if Name == "Barbara Carlson Gage" & year == 2011 //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year > 2011  //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year < 2011  //Overwrote Forbes age
. 
. replace Age_num = . if Name == "Barry Diller" & year < 2017
. 
. replace Age_num = . if Name == "Bennett Dorrance" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Francis Saul" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Marcus" & year < 2017
. 
. replace Age_num = . if Name == "Bharat Desai" & year < 2016
. 
. replace Age_num = . if Name == "Bill Haslam" & year < 2017
. 
. replace Age_num = . if Name == "Blase Thomas Golisano" & year < 2017
. 
. replace Age_num = . if Name == "Bob Parsons" & year < 2017
. 
. replace Age_num = . if Name == "Bobby Murphy" & year < 2017
. 
. replace Age_num = . if Name == "Brad Kelley" & year < 2017
. 
. replace Age_num = . if Name == "Bradley Wayne Hughes" & year < 2017
. 
. replace Age_num = . if Name == "Brian Acton" & year < 2017
. 
. replace Age_num = . if Name == "Brian Chesky" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Halle" & year < 2016
. 
. replace Age_num = . if Name == "Bruce Karsh" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Kovner" & year < 2017
. 
. replace Age_num = . if Name == "Bubba Cathy" & year < 2017
. 
. replace Age_num = . if Name == "C Dean Metropoulos" & year < 2017
. 
. replace Age_num = . if Name == "Carl Celian Icahn" & year < 2017
. 
. replace Age_num = . if Name == "Carl Cook" & year < 2017
. 
. replace Age_num = . if Name == "Charles Bartlett Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Charles Butt" & year >= 2014
. 
. replace Age_num = 65 if Name == "Charles Cohen" & year == 2016
. 
. replace Age_num = . if Name == "Charles Ergen" & year < 2017
. 
. replace Age_num = . if Name == "Charles Francis Dolan" & year < 2017
. 
. replace Age_num = . if Name == "Charles R Schwab" & year < 2017
. 
. replace Age_num = . if Name == "Charles de Ganahl Koch" & year < 2017
. 
. replace Age_num = . if Name == "Chase Coleman" & year < 2017
. 
. replace Age_num = . if Name == "Christopher Cline" & year < 2017
. 
. replace Age_num = . if Name == "Christy Walton" & year < 2017
. 
. replace Age_num = . if Name == "Clayton Lee Mathile" & year < 2017
. 
. replace Age_num = . if Name == "Clemmie Dixon Spangler" & year < 2017
. 
. replace Age_num = 66 if Name == "Craig O Mccaw" & year == 2015 //Forbes age overwritten
. 
. replace Age_num = . if Name == "Dagmar Dolby" & year < 2017
. 
. replace Age_num = . if Name == "Dan Cathy" & year < 2017
. 
. replace Age_num = . if Name == "Dan Friedkin" & year < 2017
. 
. replace Age_num = . if Name == "Dan Snyder" & year < 2017
. 
. replace Age_num = . if Name == "Daniel D'Aniello" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Gilbert" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Loeb" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Morton Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Och" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Pritzker" & year < 2017
. 
. replace Age_num = 51 if Name == "Dannine Avara" & year == 2014
. replace Age_num = . if Name == "Dannine Avara" & year > 2014
. 
. replace Age_num = . if Name == "David A Duffield" & year < 2017
. 
. replace Age_num = . if Name == "David Bonderman" & year < 2017
. 
. replace Age_num = 44 if Name == "David Einhorn" & year == 2012
. replace Age_num = . if Name == "David Einhorn" & year > 2012
. 
. replace Age_num = . if Name == "David Filo" & year < 2017
. 
. replace Age_num = . if Name == "David Geffen" & year < 2017
. 
. replace Age_num = . if Name == "David Green" & year < 2017
. 
. replace Age_num = . if Name == "David Hamilton Koch" & year < 2017
. 
. replace Age_num = . if Name == "David Howard Murdock" & year < 2017
. 
. replace Age_num = 101 if Name == "David Rockefeller" & year == 2016
. replace Age_num = 99 if Name == "David Rockefeller" & year == 2014
. replace Age_num = . if Name == "David Rockefeller" & year < 2014
. 
. replace Age_num = . if Name == "David Rubenstein" & year < 2017
. 
. replace Age_num = . if Name == "David Shaw" & year < 2017
. 
. replace Age_num = . if Name == "David Siegel" & year < 2017 & Source == "Hedge Funds"
. 
. replace Age_num = . if Name == "David Sun" & year < 2017
. 
. replace Age_num = . if Name == "David Tepper" & year < 2017
. 
. replace Age_num = . if Name == "David Walentas" & year < 2017
. 
. replace Age_num = 92 if Name == "Dean White" & year == 2015
. 
. replace Age_num = . if Name == "Denise Debartolo York" & year < 2017
. 
. replace Age_num = . if Name == "Dennis Washington" & year < 2017
. 
. replace Age_num = . if Name == "Diane Hendricks" & year < 2017
. 
. replace Age_num = . if Name == "Dirk Edward Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Don Hankey" & year < 2017
. 
. replace Age_num = . if Name == "Donald Edward Newhouse" & year < 2017
. 
. replace Age_num = . if Name == "Donald Leroy Bren" & year < 2017
. 
. replace Age_num = . if Name == "Donald Sterling" & year < 2017
. 
. replace Age_num = . if Name == "Doris Feigenbaum Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Douglas Leone" & year < 2017
. 
. replace Age_num = . if Name == "Dustin Moskovitz" & year < 2017
. 
. replace Age_num = . if Name == "Edward Crosby Johnson" & year < 2016
. 
. replace Age_num = . if Name == "Edward John Debartolo Jr" & year < 2017
. 
. replace Age_num = 53 if Name == "Edward Lampert" & year == 2015
. 
. replace Age_num = . if Name == "Edward Perry Bass" & year < 2017
. 
. replace Age_num = . if Name == "Edward Roski" & year < 2017
. 
. replace Age_num = . if Name == "Eli Broad" & year < 2017
. 
. replace Age_num = 31 if Name == "Elizabeth Holmes" & year == 2015
. 
. replace Age_num = . if Name == "Elon Musk" & year < 2017
. 
. replace Age_num = . if Name == "Enos Stanley Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Eric Schmidt" & year < 2017
. 
. replace Age_num = . if Name == "Evan Spiegel" & year < 2017
. 
. replace Age_num = 43 if Name == "Evan Williams" & year == 2015 //Overwrote Forbes age
. 
. replace Age_num = 87 if Name == "Fayez Shalaby Sarofim" & year == 2015 //Overwrote Forbes age
. replace Age_num = . if Name == "Fayez Shalaby Sarofim" & year < 2015
. 
. replace Age_num = 84 if Name == "Forrest Edward Mars Jr" & year == 2015
. replace Age_num = . if Name == "Forrest Edward Mars Jr" & year < 2015
. 
. replace Age_num = 82 if Name == "Forrest Preston" & year == 2015
. 
. replace Age_num = . if Name == "Frank Fertitta" & year < 2017
. 
. replace Age_num = . if Name == "Frederick Wallace Smith" & year < 2017
. 
. replace Age_num = . if Name == "Gabe Newell" & year < 2017
. 
. replace Age_num = 73 if Name == "Gail Miller" & year == 2015
. replace Age_num = 74 if Name == "Gail Miller" & year == 2016
. 
. replace Age_num = . if Name == "Gary Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Gayle Cook" & year < 2013
. 
. replace Age_num = . if Name == "George B Kaiser" & year < 2017
. 
. replace Age_num = . if Name == "George Bishop" & year < 2017
. 
. replace Age_num = . if Name == "George L Lindemann" & year < 2017
. 
. replace Age_num = . if Name == "George Leon Argyros" & year < 2017
. 
. replace Age_num = . if Name == "George Lucas" & year < 2017
. 
. replace Age_num = . if Name == "George R Roberts" & year < 2017
. 
. replace Age_num = . if Name == "George Soros" & year < 2017
. 
. replace Age_num = . if Name == "Gerald J Ford" & year < 2017
. 
. replace Age_num = . if Name == "Glen Taylor" & year < 2017
. 
. replace Age_num = . if Name == "Glenn Dubin" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Earle Moore" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Peter Getty" & year < 2017
. 
. replace Age_num = . if Name == "Gwendolyn Sontheim Meyer" & year < 2017
. 
. replace Age_num = . if Name == "H Fisk Johnson" & year < 2017
. 
. replace Age_num = . if Name == "H Ty Warner" & year < 2017
. 
. replace Age_num = . if Name == "Haim Saban" & year < 2017
. 
. replace Age_num = 64 if Name == "Hamilton James" & year == 2015
. 
. replace Age_num = . if Name == "Harold Hamm" & year < 2017
. 
. replace Age_num = . if Name == "Harry Stine" & year < 2017
. 
. replace Age_num = . if Name == "Harry Wayne Huizenga" & year < 2017
. 
. replace Age_num = . if Name == "Helen Johnson-Leipold" & year < 2017
. 
. replace Age_num = 97 if Name == "Henry Lea Hillman" & year == 2016
. 
. replace Age_num = . if Name == "Henry Nicholas" & year < 2017
. 
. replace Age_num = . if Name == "Henry R Kravis" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot Jr" & year < 2017
. 
. replace Age_num = . if Name == "Henry Samueli" & year < 2017
. 
. replace Age_num = . if Name == "Herbert Kohler" & year < 2017
. 
. replace Age_num = 88 if Name == "Herbert Louis" & year == 2014
. 
. replace Age_num = . if Name == "Herbert Simon" & year < 2017
. 
. replace Age_num = . if Name == "Howard Marks" & year < 2017
. 
. replace Age_num = . if Name == "Howard Schultz" & year < 2017
. 
. replace Age_num = . if Name == "Igor Olenicoff" & year < 2017
. 
. replace Age_num = 86 if Name == "Imogene Powers Johnson" & year == 2017
. replace Age_num = . if Name == "Imogene Powers Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Ira L Rennert" & year < 2017
. 
. replace Age_num = . if Name == "Irwin Mark Jacobs" & year < 2014
. 
. replace Age_num = . if Name == "Isaac Perlmutter" & year < 2017
. 
. replace Age_num = . if Name == "Israel Englander" & year < 2017
. 
. replace Age_num = . if Name == "J Christopher Reyes" & year < 2017
. 
. replace Age_num = 93 if Name == "Jack Crawford Taylor" & year == 2015
. 
. replace Age_num = . if Name == "Jack Dangermond" & year < 2017
. 
. replace Age_num = . if Name == "Jack Dorsey" & year < 2017
. 
. replace Age_num = . if Name == "Jacqueline Mars" & year < 2017
. 
. replace Age_num = . if Name == "James C France" & year < 2016
. 
. replace Age_num = . if Name == "James Coulter"  & year < 2017
. 
. replace Age_num = . if Name == "James Dinan" & year < 2016
. 
. replace Age_num = . if Name == "James Goodnight" & year < 2017
. 
. replace Age_num = . if Name == "James H Clark" & year < 2017
. 
. replace Age_num = . if Name == "James Irsay" & year < 2017
. 
. replace Age_num = . if Name == "James Jannard" & year < 2017
. 
. replace Age_num = . if Name == "James Leprino" & year < 2017
. 
. replace Age_num = . if Name == "James R Cargill II" & year < 2017
. 
. replace Age_num = . if Name == "James Simons" & year < 2017
. 
. replace Age_num = . if Name == "Jan Koum" & year < 2017
. 
. replace Age_num = . if Name == "Jay Paul" & year < 2017
. 
. replace Age_num = . if Name == "Jay Robert (JB) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jean (Gigi) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Greene" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Sutton" & year < 2017
. 
. replace Age_num = . if Name == "Jeffery Hildebrand" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Lorberbaum" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey P Bezos" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Skoll" & year < 2017
. 
. replace Age_num = . if Name == "Jen-Hsun Huang" & year < 2017
. 
. replace Age_num = . if Name == "Jennifer Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Jeremy Maurice Jacobs" & year < 2017
. 
. replace Age_num = . if Name == "Jerral Wayne Jones" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Speyer" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Yang" & year < 2017
. 
. replace Age_num = . if Name == "Jim Breyer" & year < 2017
. 
. replace Age_num = . if Name == "Jim C Walton" & year < 2017
. 
. replace Age_num = 72 if Name == "Jim Davis" & year == 2015
. 
. replace Age_num = . if Name == "Jim Kennedy" & year < 2017
. 
. replace Age_num = 62 if Name == "Jimmy Haslam" & year == 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year > 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year < 2015
. 
. replace Age_num = . if Name == "Jin Sook & Do Won Chang" & year < 2017
. 
. replace Age_num = . if Name == "Joan Tisch" & year < 2016
. 
. replace Age_num = . if Name == "Joe Gebbia" & year < 2017
. 
. replace Age_num = . if Name == "John Andreas Catsimatidis" & year < 2017
. 
. replace Age_num = . if Name == "John Anthony Sobrato" & year < 2017
. 
. replace Age_num = 44 if Name == "John Arnold" & year == 2017
. replace Age_num = . if Name == "John Arnold" & year < 2017
. 
. replace Age_num = 78 if Name == "John Arrillaga" & year == 2015
. 
. replace Age_num = . if Name == "John C Malone" & year < 2017
. 
. replace Age_num = 90 if Name == "John Farber" & year == 2015
. 
. replace Age_num = . if Name == "John Franklyn Mars" & year < 2017
. 
. replace Age_num = . if Name == "John Henry" & year < 2017 & Source == "Sports"
. 
. replace Age_num = . if Name == "John J Fisher" & year < 2017 
. 
. replace Age_num = 72 if Name == "John Kapoor" & year == 2015
. 
. replace Age_num = . if Name == "John Middleton" & year < 2017
. 
. replace Age_num = . if Name == "John Morris" & year < 2017
. 
. replace Age_num = . if Name == "John Overdeck" & year < 2017
. 
. replace Age_num = . if Name == "John Paul Dejoria" & year < 2017
. 
. replace Age_num = . if Name == "John Paulson" & year < 2017
. 
. replace Age_num = 62 if Name == "John Pritzker" & year == 2015
. replace Age_num = . if Name == "John Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "John R Menard" & year < 2017
. 
. replace Age_num = 67 if Name == "John Sall" & year == 2015
. 
. replace Age_num = . if Name == "John Tu" & year < 2017
. 
. replace Age_num = . if Name == "John W Brown" & year < 2017 
. 
. replace Age_num = . if Name == "Johnelle Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Jon LLoyd Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Jonathan Gray" & year < 2017
. 
. replace Age_num = 59 if Name == "Jonathan Nelson" & year == 2015
. 
. replace Age_num = 66 if Name == "Jorge Perez" & year == 2015
. 
. replace Age_num = . if Name == "Joseph D Mansueto" & year < 2017
. 
. replace Age_num = . if Name == "Joseph Dahr Jamail" & year < 2014
. 
. replace Age_num = . if Name == "Joseph Grendys" & year < 2017
. 
. replace Age_num = 85 if Name == "Josephine Louis" & year == 2015
. 
. replace Age_num = . if Name == "Joshua Harris" & year < 2017
. 
. replace Age_num = . if Name == "Judy Faulkner" & year < 2017
. 
. replace Age_num = . if Name == "Julian Robertson" & year < 2017
. 
. replace Age_num = . if Name == "Julio Mario Santo Domingo" & year < 2017
. 
. replace Age_num = . if Name == "Karen Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Kavitark Ram Shriram" & year < 2017
. 
. replace Age_num = 87 if Name == "Keith Rupert Murdoch" & year == 2017
. replace Age_num = . if Name == "Keith Rupert Murdoch" & year < 2017
. 
. replace Age_num = . if Name == "Kelcy Warren" & year < 2017
. 
. replace Age_num = . if Name == "Ken Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth C Griffin" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth Feld" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth G Langone" & year < 2017
. 
. replace Age_num = . if Name == "Kevin Plank" & year < 2016
. 
. replace Age_num = . if Name == "Kieu Hoang" & year < 2017
. 
. replace Age_num = 97 if Name == "Kirk Kerkorian" & year == 2014
. 
. replace Age_num = . if Name == "L John Doerr" & year < 2017
. 
. replace Age_num = . if Name == "Larry E Page" & year < 2017
. 
. replace Age_num = 46 if Name == "Larry Robbins" & year == 2015
. 
. replace Age_num = 52 if Name == "Laurene Powell Jobs" & year == 2015
. 
. replace Age_num = . if Name == "Lawrence Joseph Ellison" & year < 2017
. 
. replace Age_num = . if Name == "Leandro Rizzuto" & year < 2016
. 
. replace Age_num = . if Name == "Lee Marshall Bass" & year < 2017
. 
. replace Age_num = . if Name == "Leon Black" & year < 2017
. 
. replace Age_num = . if Name == "Leon G Cooperman" & year < 2017
. 
. replace Age_num = 84 if Name == "Leonard Alan Lauder" & year == 2017 //Overwrote Forbes Age
. replace Age_num = . if Name == "Leonard Alan Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Leonard Norman Stern" & year < 2017
. 
. replace Age_num = . if Name == "Leslie Herbert Wexner" & year < 2017
. 
. replace Age_num = . if Name == "Linda Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Lorenzo Fertitta" & year < 2017
. 
. replace Name = "Louis Moore Bacon" if Name == "Lours Moore Bacon" //Name mistake
. replace Age_num = . if Name == "Louis Moore Bacon" & year < 2016
. 
. replace Age_num = . if Name == "Lynn Schusterman" & year < 2017
. 
. replace Age_num = . if Name == "M Jude Reyes" & year < 2017
. 
. replace Age_num = 88 if Name == "Manuel Moroun" & year == 2015
. 
. replace Age_num = . if Name == "Marc Benioff" & year < 2017
. 
. replace Age_num = 55 if Name == "Marc Lasry" & year == 2015
. 
. replace Age_num = 53 if Name == "Marc Rowan" & year == 2015
. 
. replace Age_num = . if Name == "Margaret C Whitman" & year < 2017
. 
. replace Age_num = . if Name == "Marianne Liebmann" & year < 2017
. 
. replace Age_num = . if Name == "Marilyn Carlson Nelson" & year < 2014
. 
. replace Age_num = . if Name == "Mark Cuban" & year < 2017
. 
. replace Age_num = . if Name == "Mark Shoen" & year < 2017
. 
. replace Age_num = . if Name == "Mark Stevens" & year < 2017
. 
. replace Age_num = . if Name == "Mark Walter" & year < 2017
. 
. replace Age_num = . if Name == "Mark Zuckerberg" & year < 2017
. 
. replace Age_num = . if Name == "Martha Robinson Rivers Ingram" & year < 2017
. 
. replace Age_num = . if Name == "Mary Alice Dorrance Malone" & year < 2017
. 
. replace Age_num = . if Name == "Michael Dell" & year < 2017
. 
. replace Age_num = . if Name == "Michael Moritz" & year < 2017
. 
. replace Age_num = . if Name == "Michael Robert Milken" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubens Bloomberg" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubin" & year < 2017
. 
. replace Age_num = . if Name == "Micky Arison" & year < 2017
. 
. replace Age_num = . if Name == "Milane Duncan Frantz" & year < 2017
. 
. replace Age_num = . if Name == "Min H Kao" & year < 2017
. 
. replace Age_num = . if Name == "Mitchell Rales" & year < 2017
. 
. replace Age_num = . if Name == "Mortimer Benjamin Zuckerman" & year < 2017
. 
. replace Age_num = . if Name == "Nancy Walton Laurie" & year < 2017
. 
. replace Age_num = . if Name == "Nathan Blecharczyk" & year < 2017
. 
. replace Age_num = . if Name == "Neil Gary Bluhm" & year < 2017
. 
. replace Age_num = 73 if Name == "Nelson Peltz" & year == 2015
. 
. replace Age_num = 40 if Name == "Nicholas Woodman" & year == 2015
. 
. replace Age_num = . if Name == "Noam Gottesman" & year < 2017
. 
. replace Age_num = . if Name == "Norman Braman" & year < 2017
. 
. replace Age_num = . if Name == "Oprah Winfrey" & year < 2017
. 
. replace Age_num = . if Name == "Pat Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Patrick George Ryan" & year < 2017
. 
. replace Age_num = 76 if Name == "Patrick Joseph Mcgovern" & year == 2013
. 
. replace Age_num = . if Name == "Patrick Soon-Shiong" & year < 2017
. 
. replace Age_num = 64 if Name == "Paul Gardner Allen" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Paul Gardner Allen" & year < 2017
. 
. replace Age_num = . if Name == "Paul Tudor Jones" & year < 2017
. 
. replace Age_num = 83 if Name == "Pauline Macmillan Keinath" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Pauline Macmillan Keinath" & year < 2017
. 
. replace Age_num = . if Name == "Peter Buck" & year < 2017
. 
. replace Age_num = . if Name == "Peter R Kellogg" & year < 2017
. 
. replace Age_num = . if Name == "Peter Thiel" & year < 2017
. 
. replace Age_num = . if Name == "Philip Hampson Knight" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Frederick Anschutz" & year < 2017
. 
. replace Age_num = 82 if Name == "Phillip Frost" & year == 2017
. replace Age_num = . if Name == "Phillip Frost" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Ruffin" & year < 2017
. 
. replace Age_num = . if Name == "Pierre M Omidyar" & year < 2017
. 
. replace Age_num = . if Name == "Ralph Lauren" & year < 2017
. 
. replace Age_num = . if Name == "Randa Williams" & year < 2017
. 
. replace Age_num = . if Name == "Randal J Kirk" & year < 2017
. 
. replace Age_num = . if Name == "Randall Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Ray Dalio" & year < 2017
. 
. replace Age_num = . if Name == "Ray Davis" & year < 2017
. 
. replace Age_num = . if Name == "Ray Lee Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Reid Hoffman" & year < 2017
. 
. replace Age_num = . if Name == "Reinhold Schmieding" & year < 2017
. 
. replace Age_num = . if Name == "Richard Kinder" & year < 2017
. 
. replace Age_num = . if Name == "Richard Lefrak" & year < 2017
. 
. replace Age_num = 91 if Name == "Richard M Devos" & year == 2017
. replace Age_num = . if Name == "Richard M Devos" & year < 2017
. 
. replace Age_num = . if Name == "Richard M Schulze" & year < 2017
. 
. replace Age_num = . if Name == "Richard Taylor Peery" & year < 2017
. 
. replace Age_num = . if Name == "Richard Yuengling" & year < 2016
. 
. replace Age_num = . if Name == "Rick Caruso" & year < 2017
. 
. replace Age_num = . if Name == "Riley P Bechtel" & year < 2017
. 
. replace Age_num = 80 if Name == "Robert C Mcnair" & year == 2017
. replace Age_num = . if Name == "Robert C Mcnair" & year < 2017
. 
. replace Age_num = . if Name == "Robert David Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Robert Drayton Mclane" & year < 2017
. 
. replace Age_num = . if Name == "Robert Duggan" & year < 2016
. 
. replace Age_num = . if Name == "Robert Edward (Ted) Turner" & year < 2017
. 
. replace Age_num = . if Name == "Robert Edward Rich Jr" & year < 2017
. 
. replace Age_num = . if Name == "Robert Kraft" & year < 2017
. 
. replace Age_num = . if Name == "Robert Muse Bass" & year < 2017
. 
. replace Age_num = 40 if Name == "Robert Pera" & year == 2017
. replace Age_num = . if Name == "Robert Pera" & year < 2017
. 
. replace Age_num = . if Name == "Robert Rowling" & year < 2017
. 
. replace Age_num = . if Name == "Robert Smith" & year < 2017
. 
. replace Age_num = . if Name == "Romesh T Wadhwani" & year < 2017
. 
. replace Age_num = . if Name == "Ron Baron" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Owen Perelman" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Steven Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Wanek" & year < 2017
. 
. replace Age_num = . if Name == "Ronda E Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Rupert Harris Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Russ Weiner" & year < 2017
. 
. replace Age_num = . if Name == "Alexander Gus Spanos" & year < 2017
. 
. replace Age_num = 63 if Name == "Alfred James Clark" & year == 1991
. 
. replace Age_num = . if Name == "Amar Gopal Bose" & year < 2008
. 
. replace Age_num = . if Name == "Arthur Charles Nielsen" & year < 1992
. 
. replace Age_num = 65 if Name == "David Durst" & year == 1990
. 
. replace Age_num = . if Name == "Donald John Trump" & year < 2016
. 
. replace Age_num = 83 if Name == "Dorothy Green" & year == 1989
. replace Age_num = . if Name == "Dorothy Green" & year < 1989
. 
. replace Age_num = . if Name == "Elizabeth Ann Reid" & year < 2004
. 
. replace Age_num = . if Name == "Estee Lauder" & year < 1995
. 
. replace Age_num = . if Name == "Fred Deluca" & year < 2014
. 
. replace Age_num = . if Name == "Harry Brakmann Helmsley" & year < 1996
. 
. replace Age_num = . if Name == "Irene Sophie Du Pont May" & year < 1997
. 
. replace Age_num = . if Name == "James LeVoy Sorenson" & year < 2007
. 
. replace Age_num = . if Name == "Jane B Engelhard" & year < 1996
. 
. replace Age_num = 77 if Name == "Larry Fisher" & year == 1985
. replace Age_num = . if Name == "Larry Fisher" & year < 1985
. 
. replace Age_num = . if Name == "Louis Larrick Ward" & year < 1994
. 
. replace Age_num = . if Name == "Marc Lasry" & year < 2015
. 
. replace Age_num = . if Name == "Patrick Joseph Mcgovern" & year < 2013
. 
. replace Age_num = . if Name == "Paul Milstein" & year < 2009
. 
. replace Age_num = . if Name == "Preston Robert Tisch" & year < 2005
. 
. replace Age_num = . if Name == "Richard Mellon Scaife" & year < 2013
. 
. replace Age_num = . if Name == "S Robson Walton" & year < 2017
. 
. replace Age_num = . if Name == "Samuel Irving Newhouse" & year < 2016
. 
. replace Age_num = . if Name == "Samuel Zell" & year < 2017
. 
. replace Age_num = . if Name == "Scott Duncan" & year < 2017
. 
. replace Age_num = . if Name == "Sergey Brin" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Adelson" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Henry Solow" & year < 2017
. 
. replace Age_num = . if Name == "Sid Richardson Bass" & year < 2017
. 
. replace Age_num = . if Name == "Stanley Druckenmiller" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Schwarzman" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Wynn" & year < 2017
. 
. replace Age_num = . if Name == "Stephen Ross" & year < 2017
. 
. replace Age_num = . if Name == "Steve Ballmer" & year < 2017
. 
. replace Age_num = . if Name == "Steven A Cohen" & year < 2017
. 
. replace Age_num = . if Name == "Steven Allan Spielberg" & year < 2017
. 
. replace Age_num = . if Name == "Steven Udvar-Hazy" & year < 2017
. 
. replace Age_num = . if Name == "Stewart Rahr" & year < 2017
. 
. replace Age_num = . if Name == "Sumner Murray Redstone" & year < 2017
. 
. replace Age_num = . if Name == "Theodore Nathan Lerner" & year < 2017
. 
. replace Age_num = . if Name == "Thomas F Frist" & year < 2017
. 
. replace Age_num = . if Name == "Thomas J Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Trevor Rees-Jones" & year < 2017
. 
. replace Age_num = . if Name == "Warren Stephens" & year < 2017
. 
. replace Age_num = . if Name == "Whitney Macmillan" & year < 2017
. 
. replace Age_num = . if Name == "William Bernard Ziff" & year < 1994
. 
. replace Age_num = . if Name == "William Herbert Hunt" & year < 2017
. 
. replace Age_num = 75 if Name == "William Ingrahm Koch" & year == 2015
. replace Age_num = . if Name == "William Ingrahm Koch" & year < 2015
. 
. replace Age_num = . if Name == "William Morse Davidson" & year < 2008
. 
. replace Age_num = . if Name == "William Wrigley" & year < 2017
. }
. 
. 
. ///Impute age for individual-year obs when we observe age for same individual in another year
> sort nameid year
. tsset nameid  year, yearly
. sleep 1000
. foreach lag of num 1/36 {
  2.         replace Age_num = L`lag'.Age_num + (year - L`lag'.year) if Age_num==. & L`lag'.Age_num ~=.
  3. }
. foreach lag of num 1/36 {
  2.         replace Age_num = F`lag'.Age_num + (year - F`lag'.year) if Age_num==. & F`lag'.Age_num ~=.
  3. }
. replace Age_num = . if Age_num > 110
. replace Age_num = 96 if Age_num>=96 & Age_num~=.  //lumping together for graphing purposes
. 
. gen flag = 0
. replace flag = 1 if (Age_num ~= L.Age_num+1) & (L.Age_num~=. & Age_num~=.)
. tab Name if flag == 1
. 
. drop if Age_num==.
. tab Age_num
. gen old = 0 if Age_num~=.
. replace old = 1 if Age_num >= 65 & Age_num~=.
. gen old60 = 0 if Age_num~=. 
. replace old60 = 1 if Age_num >= 60 & Age_num~=. 
. gen old70 = 0 if Age_num~=. & inrange(Age_num,65,69)==0
. replace old70 = 1 if Age_num >= 70 & Age_num~=.
. gen old75 = 0 if Age_num~=. & inrange(Age_num,65,74)==0
. replace old75 = 1 if Age_num >= 75 & Age_num~=.
. gen footloose = (our_wealthy | old)
. label variable Age_num "Age"
. gen wealth = (NetWorthMill/1000)/cpi
. label variable wealth "Net Worth (billions, 2017 dollars)"
. 
. drop if inrange(year,2002,2002)  // no location for Forbes 400 in 2002...and possibly exclude phase-out period
. 
. gen post=(year>`postyear')
. gen AgeXpost = Age_num*post
. label variable post "post-`postyear'"
. label variable AgeXpost "Age X post-`postyear'"
. label variable Age_num "Age"
. encode abbr, gen(statenum)
. 
. 
. drop _m
. merge 1:1 Name year Forbes_Rank using "stata_data\Forbes_2015_top_100_companies.dta", keep(1 3) keepusing(company* officer* company_lo
> cation*) gen(from_company)
. 
. ******** construct officer_tied = 1 if any officer* are non-missing AND Residence==company_location* 
. generate company_state = substr(company_location,-2,2)
. generate company_state_2 = substr(company_location_2,-2,2)
. generate company_state_3 = substr(company_location_3,-2,2)
. generate company_tied = .
. replace company_tied = 0 if from_company==3
. replace company_tied = 1 if from_company==3 & abbr==company_state
. 
. save ./stata_data/IndivAnalysisDataset.dta, replace
. 
. /// GET STATE*YEAR DATA ON PIT RATES TO MERGE IN BELOW
> use stata_data/State_Max_Tax_Rates.dta, clear
. rename Year year
. rename State_ID irsstatecode
. merge m:1 irsstatecode using stata_data/irscode_fips_xwalk.dta
. rename stateabbrev abbr
. rename fips statefips
. drop irsstatecode statefips
. sort abbr year
. tempfile PIT
. save `PIT'
. 
. /// Get state CIT rates
> use stata_data/CIT_rates.dta, clear
. rename Year year
. keep year State state_tax
. rename state_tax CIT_rate
. label var CIT_rate "state corp income tax rate"
. tempfile CIT
. save `CIT'
. 
. //Import CEPR/CPS data (h/t Olivia Lofton) on state-year population for top 3%, top 10%, and total
. use "stata_data/styr_pop_by_wpctile.dta", clear
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop
. save `toppop'
. 
. use "stata_data/styr_pop_by_wpctile_young.dta", clear
. append using "stata_data/styr_pop_by_wpctile_old.dta", gen(old)
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop_old
. save `toppop_old'
. 
. /// CREATE STATE*YEAR PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change gdp Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. 
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 State year using `CIT', nogen keep(1 3)
. merge 1:1 State year using `toppop', nogen keep(1 3)
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/StateyearAnalysisDataset.dta, replace
. 
. preserve
. gen EI_GDP = EI_Tax/(gdp)
. line EI_Tax year if abbr=="NY"
. restore
. 
. 
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES 100, 200, 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'
  4.         gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
  5.         label variable stock "Population of Forbes 200"
  6.         label variable Age_num "Age"
  7.         label variable wealth "Net Worth (billions 2017 dollars)"
  8.         label variable NetWorthMill "Net Worth of Forbes 200 (billions nom. dollars)"
  9.         
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
 10.         replace abbr = "AK" if _n==1
 11.         replace year = 1982 if abbr=="AK"
 12. 
.         fillin abbr year
 13.         replace wealth = 0 if _fillin | abbr=="AK"
 14.         replace stock = 0 if _fillin | abbr=="AK"
 15. 
.         merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
 16.         label variable EI "Estate Tax Indicator"
 17. 
.         merge 1:1 abbr year using `PIT', nogen keep(1 3)
 18.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 19.         label variable avg "Top PIT Rate"
 20. 
.         merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
 21.         gen EIshare = EI_Tax/Total_Taxes
 22. 
.         egen stateyear = group(abbr year)
 23.         sort abbr year
 24.         encode abbr, gen(statenum)
 25.         tsset statenum year, yearly
 26.         save ./stata_data/StateyearTop`x'AnalysisDataset.dta, replace
 27. }
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. 
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/Stateyear10obsAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*AGE PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change cpi, by(year abbr Age_num)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth of Forbes 400 (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace Age_num = 96 if abbr=="AK"
. fillin abbr year Age_num
. 
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. 
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. encode abbr, gen(statenum)
. egen stateyear = group(abbr year)
. save ./stata_data/StateyearAgeAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET
> foreach v in old old60 old70 old75 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if `v'==.
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr `v')
  5.         rename `v' old
  6. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  7.         replace abbr = "AK" if _n==1
  8.         replace year = 1982 if abbr=="AK"
  9.         replace old = 0 if abbr=="AK"
 10.         fillin abbr year old
 11.         replace wealth = 0 if _fillin | abbr=="AK"
 12.         replace stock = 0 if _fillin | abbr=="AK"
 13. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 14.         label variable EI "Estate Tax Indicator"
 15.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 16.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 17.         label variable avg "Top Personal Income Tax (PIT) Rate"
 18.         merge 1:1 State year old using `toppop_old', nogen keep(1 3)
 19. 
.         gen post=(year>`postyear')
 20.         label variable EI "ET-state"
 21.         label variable post "post-`postyear'"
 22.         gen EIxPost = EI*post
 23.         label variable EIxPost "ET-state X post-`postyear'"
 24.         gen avgxPost = avg*post
 25.         label variable avgxPost "PIT X post-`postyear'"
 26.         gen EIratecombinedxPost = EIratecombined*post
 27.         label variable EIratecombinedxPost "ET rate X post-`postyear'"
 28.         gen EIxold = EI*old
 29.         label variable EIxold "ET-state X old"
 30.         gen avgxold = avg*old
 31.         label variable avgxold "PIT X old"
 32.         gen oldxPost = old*post
 33.         label variable oldxPost "old X post-`postyear'"
 34.         gen EIxPostxold = EI*post*old
 35.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 36.         gen avgxPostxold = avg*post*old
 37.         label variable avgxPostxold "PIT X post-`postyear' X old"
 38.         gen EIratecombinedxPostxold = EIratecombined*post*old
 39.         label variable EIratecombinedxPostxold "ET rate X post-`postyear' X old"
 40.         egen stateold = group(abbr old)
 41. 
.         encode abbr, gen(statenum)
 42.         tsset stateold year, yearly
 43.         save ./stata_data/Stateyear`v'AnalysisDataset.dta, replace
 44. }
.         
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR TOP 100, 200, AND 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'     
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
  5. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  6.         replace abbr = "AK" if _n==1
  7.         replace year = 1982 if abbr=="AK"
  8.         replace old = 0 if abbr=="AK"
  9.         fillin abbr year old
 10.         replace wealth = 0 if _fillin | abbr=="AK"
 11.         replace stock = 0 if _fillin | abbr=="AK"
 12. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 13.         label variable EI "Estate Tax Indicator"
 14.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 15.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 16.         label variable avg "Top PIT Rate"
 17. 
.         gen post=(year>`postyear')
 18.         label variable EI "ET-state"
 19.         label variable post "post-`postyear'"
 20.         gen EIxPost = EI*post
 21.         label variable EIxPost "ET-state X post-`postyear'"
 22.         gen EIxold = EI*old
 23.         label variable EIxold "ET-state X old"
 24.         gen oldxPost = old*post
 25.         label variable oldxPost "old X post-`postyear'"
 26.         gen EIxPostxold = EI*post*old
 27.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 28.         egen stateold = group(abbr old)
 29. 
.         encode abbr, gen(statenum)
 30.         tsset stateold year, yearly
 31.         save ./stata_data/StateyearOldTop`x'AnalysisDataset.dta, replace
 32. }
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. egen stateold = group(abbr old)
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly
. save ./stata_data/StateyearOld10obsAnalysisDataset.dta, replace
. 
. /// CREATE STATE*YEAR*OLD UNDER-40 PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. keep if Age_num>=40
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. 
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "PIT"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. egen stateold = group(abbr old)
. 
. gen avgxold = avg*old
. label variable avgxold "PIT X old"
. gen avgxPostxold = avg*post*old
. label variable avgxPostxold "PIT X post-`postyear' X old"
. gen avgxPost = avg*post
. label variable avgxPost "PIT X post-`postyear'"
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly     
. save ./stata_data/StateyearOldU40AnalysisDataset.dta, replace
. }  //end BuildData IF code

. 
. *********************************************** ANALYSES **********************************************************
. /// 1. ANALYSIS OF STATE*YEAR FORBES POPULATION
> if "$run2D" == "yes" {
. 
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. 
. 
. *****************************************************************
. ***Figure B1: Distribution of Top PIT Rates by State ET Status***
. *****************************************************************
. 
. *Panel A: 2001, Non ET states
. sum avg if EI==0 & year==`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         avg |         39    4.890769    3.157466          0       9.86
. local mean0 = r(mean)
. histogram avg if EI==0 & year==`postyear', bin(25) xline(`mean0') xscale(range(0 15)) ///
> xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
(bin=25, start=0, width=.39439999)
. graph export ../Figures/FigureB1_a.pdf, replace as(pdf)
(file ../Figures/FigureB1_a.pdf written in PDF format)
. 
. *Panel B: 2001, ET states
. sum avg if EI==1 & year==`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         avg |         11    5.813636    1.480488        2.8       8.09
. local mean1 = r(mean)
. histogram avg if EI==1 & year==`postyear', bin(25) xline(`mean1') xscale(range(0 15)) ///
> xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
(bin=25, start=2.8, width=.21160001)
. graph export ../Figures/FigureB1_b.pdf, replace as(pdf)
(file ../Figures/FigureB1_b.pdf written in PDF format)
. 
. *Panel C: 2017, Non ET states
. sum avg if EI==0 & year==2017

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         avg |         35    4.253143    3.026135          0       14.1
. local mean0 = r(mean)
. histogram avg if EI==0 & year==2017, bin(25) xline(`mean0') xscale(range(0 15)) ///
> xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
(bin=25, start=0, width=.56400002)
. graph export ../Figures/FigureB1_c.pdf, replace as(pdf)
(file ../Figures/FigureB1_c.pdf written in PDF format)
. 
. *Panel D: 2017, ET states
. sum avg if EI==1 & year==2017

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         avg |         15       6.752    2.930651          0       11.2
. local mean1 = r(mean)
. histogram avg if EI==1 & year==2017, bin(25) xline(`mean1') xscale(range(0 15)) ///
> xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
(bin=25, start=0, width=.44799999)
. graph export ../Figures/FigureB1_d.pdf, replace as(pdf)
(file ../Figures/FigureB1_d.pdf written in PDF format)
. 
. 
. ****************************************************************
. ***Table B2: Probability of State Having an Estate Tax -- LPM***
. ****************************************************************
. 
. gen post = (year>`postyear')
. label variable post "post-`postyear'"
. gen avgXpost = avg*post
. gen CITXpost = CIT_rate*post
(1 missing value generated)
. gen gdp_changeXpost = gdp_change*post
(416 missing values generated)
. label var gdp_change "Log Change in real GDP"
. label var CIT_rate "Top Corp. Income Tax (CIT) Rate"
. label var avgXpost "Top PIT Rate X post-2001"
. label var CITXpost "Top CIT Rate X post-2001"
. label var gdp_changeXpost "GDP Change X post-2001"
. 
. *No FE (Col 1)
. eststo adopt1: reg EI avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)

Linear regression                               Number of obs     =      1,333
                                                F(6, 48)          =       1.70
                                                Prob > F          =     0.1419
                                                R-squared         =     0.0849
                                                Root MSE          =     .45935

                                 (Std. Err. adjusted for 49 clusters in statenum)
---------------------------------------------------------------------------------
                |               Robust
             EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
----------------+----------------------------------------------------------------
            avg |    .006973   .0228347     0.31   0.761    -.0389392    .0528852
       CIT_rate |   4.594555   2.479555     1.85   0.070    -.3909242    9.580034
     gdp_change |   -.000039   .0003566    -0.11   0.913     -.000756     .000678
       avgXpost |   .0157487   .0230572     0.68   0.498    -.0306109    .0621083
       CITXpost |  -1.115931   2.749398    -0.41   0.687    -6.643966    4.412104
gdp_changeXpost |  -2.28e-06   .0002237    -0.01   0.992    -.0004521    .0004476
          _cons |   .0495969   .3429258     0.14   0.886    -.6399016    .7390955
---------------------------------------------------------------------------------
.         estadd local yearFE       "No",   replace:   adopt1
.         estadd local stateFE      "No",   replace:   adopt1
. 
. *Year FE (Col 2)
. eststo adopt2: reg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)

Linear regression                               Number of obs     =      1,333
                                                F(40, 48)         =       8.95
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1054
                                                Root MSE          =     .46012

                                 (Std. Err. adjusted for 49 clusters in statenum)
---------------------------------------------------------------------------------
                |               Robust
             EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
----------------+----------------------------------------------------------------
           year |
          1983  |  -.1222892   .0715176    -1.71   0.094    -.2660849    .0215065
          1984  |  -.1130531   .0863981    -1.31   0.197     -.286768    .0606618
          1985  |  -.0941849   .0664621    -1.42   0.163    -.2278161    .0394462
          1986  |  -.0992453   .0731145    -1.36   0.181    -.2462518    .0477612
          1987  |  -.1532038   .0831011    -1.84   0.071    -.3202898    .0138821
          1988  |  -.1679695   .1034053    -1.62   0.111    -.3758799    .0399409
          1989  |  -.1832437    .095848    -1.91   0.062     -.375959    .0094717
          1990  |  -.1533297   .0950055    -1.61   0.113     -.344351    .0376916
          1991  |  -.1984841   .0876265    -2.27   0.028    -.3746689   -.0222992
          1992  |  -.2369116   .1143737    -2.07   0.044    -.4668753   -.0069479
          1993  |  -.2659702   .1134548    -2.34   0.023    -.4940864   -.0378539
          1994  |  -.2710275   .1289647    -2.10   0.041    -.5303285   -.0117265
          1995  |   -.234978   .1242832    -1.89   0.065    -.4848661    .0149102
          1996  |  -.2351778    .127381    -1.85   0.071    -.4912944    .0209388
          1997  |  -.2699126   .1380414    -1.96   0.056    -.5474634    .0076383
          1998  |  -.2343165   .1323295    -1.77   0.083    -.5003827    .0317497
          1999  |  -.2800809   .1384675    -2.02   0.049    -.5584884   -.0016734
          2000  |  -.3564288   .1404365    -2.54   0.014    -.6387953   -.0740622
          2001  |   -.244152   .1120645    -2.18   0.034    -.4694727   -.0188312
          2003  |  -.4837962   .5173866    -0.94   0.354    -1.524072    .5564793
          2004  |  -.4961438   .5304415    -0.94   0.354    -1.562668    .5703803
          2005  |  -.4709742    .534745    -0.88   0.383    -1.546151    .6042026
          2006  |  -.4639333   .5281837    -0.88   0.384    -1.525918    .5980511
          2007  |  -.4482688   .5239572    -0.86   0.397    -1.501755    .6052177
          2008  |  -.4259874   .5039641    -0.85   0.402    -1.439275    .5873003
          2009  |  -.4774876    .507632    -0.94   0.352     -1.49815     .543175
          2010  |  -.4896124   .5235308    -0.94   0.354    -1.542242    .5630168
          2011  |  -.5218576   .5246149    -0.99   0.325    -1.576667    .5329512
          2012  |  -.5119087   .5294581    -0.97   0.338    -1.576455    .5526381
          2013  |  -.5427736    .522666    -1.04   0.304    -1.593664    .5081169
          2014  |  -.5601817   .5293716    -1.06   0.295    -1.624555    .5041913
          2015  |  -.5131438   .5455596    -0.94   0.352    -1.610065    .5837773
          2016  |  -.4899524   .5268687    -0.93   0.357    -1.549293    .5693882
          2017  |   -.535697   .5356137    -1.00   0.322     -1.61262    .5412265
                |
            avg |   .0119298    .024336     0.49   0.626     -.037001    .0608606
       CIT_rate |   3.993909   2.575511     1.55   0.128    -1.184502     9.17232
     gdp_change |   8.09e-06   .0004923     0.02   0.987    -.0009817    .0009979
       avgXpost |   .0116199   .0234162     0.50   0.622    -.0354615    .0587012
       CITXpost |  -.2115073   2.918524    -0.07   0.943    -6.079593    5.656578
gdp_changeXpost |    .000274   .0006103     0.45   0.656    -.0009531    .0015011
          _cons |    .225352   .4088244     0.55   0.584    -.5966445    1.047349
---------------------------------------------------------------------------------
.         estadd local yearFE       "Yes",   replace:   adopt2
.         estadd local stateFE      "No",   replace:   adopt2
. 
. *State + Year FE (Col 3)
. eststo adopt3: xtreg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, fe cluster(statenum)

Fixed-effects (within) regression               Number of obs     =      1,333
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.0969                                         min =          1
     between = 0.0676                                         avg =       27.2
     overall = 0.0949                                         max =         35

                                                F(40,48)          =       7.87
corr(u_i, Xb)  = -0.2701                        Prob > F          =     0.0000

                                 (Std. Err. adjusted for 49 clusters in statenum)
---------------------------------------------------------------------------------
                |               Robust
             EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
----------------+----------------------------------------------------------------
           year |
          1983  |  -.1037065   .0608713    -1.70   0.095    -.2260965    .0186835
          1984  |  -.0791507   .0663263    -1.19   0.239    -.2125087    .0542072
          1985  |  -.0884888   .0584537    -1.51   0.137    -.2060178    .0290402
          1986  |   -.102792   .0597179    -1.72   0.092    -.2228628    .0172789
          1987  |  -.1779676   .0793024    -2.24   0.029    -.3374158   -.0185194
          1988  |  -.1897402   .0794625    -2.39   0.021    -.3495104   -.0299701
          1989  |  -.1944841   .0802925    -2.42   0.019     -.355923   -.0330453
          1990  |  -.1954507   .0785515    -2.49   0.016     -.353389   -.0375123
          1991  |  -.2490046   .0789994    -3.15   0.003    -.4078435   -.0901657
          1992  |  -.2924993   .0989566    -2.96   0.005    -.4914649   -.0935337
          1993  |  -.3157631   .1014886    -3.11   0.003    -.5198197   -.1117066
          1994  |  -.3020951   .1042834    -2.90   0.006    -.5117709   -.0924193
          1995  |  -.2829429   .1057237    -2.68   0.010    -.4955147   -.0703712
          1996  |  -.2919686   .1096179    -2.66   0.010    -.5123702   -.0715671
          1997  |  -.3183764   .1161385    -2.74   0.009    -.5518884   -.0848643
          1998  |  -.2931405   .1124802    -2.61   0.012    -.5192971   -.0669838
          1999  |  -.3200017   .1149324    -2.78   0.008    -.5510888   -.0889145
          2000  |  -.3776385   .1174498    -3.22   0.002    -.6137872   -.1414898
          2001  |  -.3097767   .1038262    -2.98   0.004    -.5185332   -.1010201
          2003  |  -.5611253   .5051708    -1.11   0.272    -1.576839    .4545887
          2004  |  -.5709156   .5162107    -1.11   0.274    -1.608827    .4669954
          2005  |  -.5258162   .5134887    -1.02   0.311    -1.558254     .506622
          2006  |  -.5329139   .5138945    -1.04   0.305    -1.566168    .5003402
          2007  |  -.5170813   .5107206    -1.01   0.316    -1.543954    .5097913
          2008  |  -.5209156   .4983701    -1.05   0.301    -1.522956    .4811246
          2009  |  -.5553402   .4899839    -1.13   0.263    -1.540519    .4298385
          2010  |  -.5539426   .5021705    -1.10   0.275    -1.563624    .4557389
          2011  |  -.5728372   .5047504    -1.13   0.262    -1.587706    .4420314
          2012  |  -.5778652   .5081011    -1.14   0.261    -1.599471    .4437405
          2013  |  -.6277487   .5071116    -1.24   0.222    -1.647365    .3918674
          2014  |  -.6222868   .5122043    -1.21   0.230    -1.652142    .4075689
          2015  |  -.5623657    .527127    -1.07   0.291    -1.622225    .4974941
          2016  |  -.5646023   .5150741    -1.10   0.278    -1.600228    .4710235
          2017  |  -.6054132   .5233419    -1.16   0.253    -1.657663    .4468361
                |
            avg |   .0485846   .0282192     1.72   0.092    -.0081539    .1053231
       CIT_rate |   3.977146   3.187364     1.25   0.218    -2.431479    10.38577
     gdp_change |  -.0001476   .0003216    -0.46   0.648    -.0007942     .000499
       avgXpost |   .0039039   .0210738     0.19   0.854    -.0384678    .0462757
       CITXpost |   1.009624   3.066104     0.33   0.743    -5.155191     7.17444
gdp_changeXpost |   .0002674   .0006197     0.43   0.668    -.0009785    .0015133
          _cons |   .2131932   .3232572     0.66   0.513     -.436759    .8631454
----------------+----------------------------------------------------------------
        sigma_u |  .38247952
        sigma_e |  .30113879
            rho |  .61732456   (fraction of variance due to u_i)
---------------------------------------------------------------------------------
.         estadd local yearFE       "Yes",   replace:   adopt3
.         estadd local stateFE      "Yes",   replace:   adopt3
. 
. #delimit ;
delimiter now ;
.         esttab adopt1 adopt2 adopt3
>           using ../Tables/TableB2.tex, replace se scalars(stateFE yearFE) drop(*year)
>                 noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0
> .1 ** 0.05 *** 0.01 )
>                 postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize Standard errors (clustered by state) in parentheses.}\\"
>                 "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../Tables/TableB2.tex)
. #delimit cr
delimiter now cr
. 
. *****************
. ***CREATE MAPS***
. *****************
. *************************************************************
. ****Figure 1: Percentage of Years with Estate Tax by State***
. *************************************************************
. 
. preserve
. gen state = abbr
. keep if year<=`postyear'
(750 observations deleted)
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../Figures/Figure1_a.pdf, replace as(pdf)
(file ../Figures/Figure1_a.pdf written in PDF format)
. restore
. preserve
. gen state = abbr
. keep if year>`postyear'
(1,000 observations deleted)
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../Figures/Figure1_b.pdf, replace as(pdf)
(file ../Figures/Figure1_b.pdf written in PDF format)
. restore
. 
. *****************************************************************************************
. ***Figure 5: Share of Forbes 400 Living in a 2001 Estate Tax State (Time-series graph)***
. *****************************************************************************************
. 
. preserve
. 
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. 
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
total_wealth |         50        2604           0       2604       2604
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. 
. collapse (sum) stock `wealth', by(EI`postyear' year)
. reshape wide stock `wealth', i(year) j(EI`postyear')
(note: j = 0 1)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                       70   ->      35
Number of variables                   4   ->       5
j variable (2 values)            EI2001   ->   (dropped)
xij variables:
                                  stock   ->   stock0 stock1
                      wealth_normalized   ->   wealth_normalized0 wealth_normalized1
-----------------------------------------------------------------------------
. 
. gen prop = (stock1/(stock1 + stock0))*100 
. 
. qui sum prop if year<=`postyear'
. gen premean = r(mean) if year<2002 
(15 missing values generated)
. 
. qui sum prop if year>`postyear'
. gen postmean = r(mean) if year>2002 
(20 missing values generated)
. 
. twoway line prop premean postmean year, ytitle(Percentage) yscale(range(0 30)) ///
> xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) ///
> graphregion(color(white)) ylabel(#10) lcolor(black red red) lpattern(solid dash dash) legend(off)
. 
. graph export "../Figures/Figure5.pdf", replace as(pdf)
(file ../Figures/Figure5.pdf written in PDF format)
. 
. restore
. 
. 
. ****************************************************************
. ***Table B3: Panel C. State-by-Year Observations. 1982 - 2017*** 
. ****************************************************************
. 
. estpost sum stock wealth EI avg, detail

             |  e(count)   e(sum_w)    e(mean)     e(Var)      e(sd)  e(skewn~)  e(kurto~)     e(sum)     e(min)     e(max)      e(p1) 
-------------+-------------------------------------------------------------------------------------------------------------------------
       stock |      1750       1750   7.675429   227.0358   15.06771   3.734678   17.69014      13432          0         98          0 
      wealth |      1750       1750   22.62691   2847.326   53.36034   5.392966   39.90942    39597.1          0      617.8          0 
          EI |      1750       1750   .3182857    .217104   .4659442    .780206   1.608721        557          0          1          0 
         avg |      1750       1750   4.855857   8.734957   2.955496  -.2457428   2.462532    8497.75          0       14.1          0 

             |     e(p5)     e(p10)     e(p25)     e(p50)     e(p75)     e(p90)     e(p95)     e(p99) 
-------------+----------------------------------------------------------------------------------------
       stock |         0          0          1          3          7         15         36         82 
      wealth |         0          0   .8998532   5.857133   21.83271   48.84385   97.02544   300.9286 
          EI |         0          0          0          0          1          1          1          1 
         avg |         0          0          3        5.4       6.85       8.45          9      10.92 
. esttab . using "../Tables/TableB3_c.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median)) s
> d(fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label
(output written to ../Tables/TableB3_c.tex)
. 
. ********************************************
. ***DIFF-IN-DIFF (BEFORE/AFTER `postyear')***
. ********************************************
. 
. replace avg = avg*100
(1,428 real changes made)
. replace State_Rate_Wages = State_Rate_Wages*100
(1,419 real changes made)
. replace State_Rate_Long_Gains =  State_Rate_Long_Gains*100
(1,425 real changes made)
. 
. label variable EI "ET-state"
. label variable avg "PIT"
. gen EIxPost = EI*post
. gen avgxPost = avg*post
. gen EIratecombinedxPost = EIratecombined*post
. label variable EIxPost "ET-state X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. label variable EIratecombinedxPost "ET rate X post-`postyear'"
. gen logwealth = ln(wealth+.001)
. gen logstock = ln(stock)
(352 missing values generated)
. gen stockpc = (stock/pop)*1000
. gen logstockpc = log(stockpc)
(352 missing values generated)
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
total_wealth |         50        2604           0       2604       2604
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. 
. 
. ***************************************************************
. ***Table 2: DD, Dependent Variable: Population of Forbes 400***
. ***************************************************************
. 
. sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    7.090909    3.113023          2         13
. local baseline_stock = r(mean)
. local numEIStates = r(N)
. 
. sum wealth if year>2001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      wealth |        750    35.49829    72.11671          0      617.8
. local post_wealth_mean = r(mean)
. 
. sum wealth if year==2001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      wealth |         50    25.44044    43.82667          0   223.2308
. local pre_wealth_mean = r(mean)
. 
. sum wealth if year==2001 & EI==1, detail //yields baseline statewide wealth of billionaires pre-`postyear'

              Net Worth (billions 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%     5.813123       5.813123
 5%     5.813123       6.615887
10%     6.615887       7.889238       Obs                  11
25%     7.889238       10.38058       Sum of Wgt.          11

50%     17.34248                      Mean           20.69446
                        Largest       Std. Dev.      14.35435
75%     25.95144       24.32515
90%     45.95135       25.95144       Variance       206.0475
95%     46.50498       45.95135       Skewness       .8555875
99%     46.50498       46.50498       Kurtosis       2.535264
. local baseline_wealth = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
. 
. sum stockpc if year==2001 & EI==1       //yields baseline number of billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     stockpc |         11    1.176714    .4804224    .576851   2.039131
. local baseline_stockpc = r(mean)
. 
. sum wealth_share if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
wealth_share |         11    1.626895    1.128468   .4569986   3.655989
. local baseline_wealth_share = r(mean)
. 
. sum wealth_normalized if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
wealth_nor~d |         11    42.36435    29.38529   11.90024   95.20194
. local baseline_wealth_normalized = r(mean)
. 
. 
. 
. //Adding i.statenum
. eststo stock_EI3: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =     5.87
                                                      Prob > F      =   0.0065
Total (centered) SS     =    22289.968                Centered R2   =   0.0202
Total (uncentered) SS   =    22289.968                Uncentered R2 =   0.0202
Residual SS             =  21839.38369                Root MSE      =    3.533

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -2.453642   .6961166    -3.52   0.000    -3.818006   -1.089279
          EI |   1.393662   .5246512     2.66   0.008     .3653646     2.42196
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
. estadd local yearFE      "Yes",   replace:   stock_EI3
. estadd local stateFE     "Yes",   replace:   stock_EI3
. 
. //Replace ET dummy with ET rate
. eststo stock_EIrate3: ivreg2 stock EIratecombinedxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =     8.10
                                                      Prob > F      =   0.0013
Total (centered) SS     =    22289.968                Centered R2   =   0.0232
Total (uncentered) SS   =    22289.968                Uncentered R2 =   0.0232
Residual SS             =  21773.00977                Root MSE      =    3.527

-------------------------------------------------------------------------------------
                    |               Robust
              stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------------+----------------------------------------------------------------
EIratecombinedxPost |  -25.74128   6.210785    -4.14   0.000    -37.91419   -13.56836
                 EI |   1.458522   .4976728     2.93   0.003     .4831013    2.433943
-------------------------------------------------------------------------------------
Included instruments: EIratecombinedxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local yearFE      "Yes",   replace:   stock_EIrate3
. estadd local stateFE     "Yes",   replace:   stock_EIrate3
. 
. 
. // Interact EIxPost with average billionaire wealth in the state-year
. cap gen Avgwealth = wealth/stock
. cap gen EIxPostxAvgwealth = EIxPost*Avgwealth
. ivreg2 stock EIxPost EIxPostxAvgwealth `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 68 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1398
                                                      F(  3,    34) =    51.71
                                                      Prob > F      =   0.0000
Total (centered) SS     =  21331.58987                Centered R2   =   0.0172
Total (uncentered) SS   =  21331.58987                Uncentered R2 =   0.0172
Residual SS             =  20965.09662                Root MSE      =    3.873

-----------------------------------------------------------------------------------
                  |               Robust
            stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
          EIxPost |  -2.512419   1.134583    -2.21   0.027    -4.736161   -.2886782
EIxPostxAvgwealth |   .0134271   .0927884     0.14   0.885    -.1684347    .1952889
               EI |   1.239501   .6625343     1.87   0.061    -.0590423    2.538044
-----------------------------------------------------------------------------------
Included instruments: EIxPost EIxPostxAvgwealth EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. 
. 
. sleep 1000
. 
. 
. //Change dep var to stock p.c.
. eststo stock_EI9: ivreg2 stockpc EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =     8.64
                                                      Prob > F      =   0.0009
Total (centered) SS     =  2967.988776                Centered R2   =   0.0096
Total (uncentered) SS   =  2967.988776                Uncentered R2 =   0.0096
Residual SS             =  2939.569158                Root MSE      =    1.296

------------------------------------------------------------------------------
             |               Robust
     stockpc |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -.6209534   .3163302    -1.96   0.050    -1.240949   -.0009577
          EI |   .3263568   .1120176     2.91   0.004     .1068064    .5459073
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
. estadd local stderr = round((_se[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
. estadd local yearFE      "Yes",   replace:   stock_EI9
. estadd local stateFE     "Yes",   replace:   stock_EI9
. 
. sleep 1000
. //Adding PIT
. eststo stock_EI4: ivreg2 stock EIxPost `controls' EI i.year i.statenum avgxPost avg, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  4,    34) =    11.77
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22289.968                Centered R2   =   0.0304
Total (uncentered) SS   =    22289.968                Uncentered R2 =   0.0304
Residual SS             =  21613.28875                Root MSE      =    3.514

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -2.679159   .9140905    -2.93   0.003    -4.470743   -.8875741
          EI |   1.354989   .5476677     2.47   0.013     .2815802    2.428398
    avgxPost |   .0002845   .0010853     0.26   0.793    -.0018427    .0024117
         avg |   .0035835   .0009582     3.74   0.000     .0017055    .0054615
------------------------------------------------------------------------------
Included instruments: EIxPost EI avgxPost avg
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
. estadd local yearFE      "Yes",  replace:   stock_EI4
. estadd local stateFE     "Yes",  replace:   stock_EI4
. 
. //Control for ordinary high earner population
. egen pop_90to97_natl = total(pop_90to97), by(year)
. gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
. label var topshr_90to97 "High earners share"
. eststo stock_EI10: ivreg2 stock EIxPost `controls' EI i.year i.statenum topshr_90to97, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  3,    34) =    13.34
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22289.968                Centered R2   =   0.0280
Total (uncentered) SS   =    22289.968                Uncentered R2 =   0.0280
Residual SS             =  21666.27626                Root MSE      =    3.519

-------------------------------------------------------------------------------
              |               Robust
        stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
      EIxPost |  -2.323735   .7252064    -3.20   0.001    -3.745113   -.9023561
           EI |    1.24327   .5883374     2.11   0.035     .0901497     2.39639
topshr_90to97 |   1.041656   .6968592     1.49   0.135    -.3241626    2.407475
-------------------------------------------------------------------------------
Included instruments: EIxPost EI topshr_90to97
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
. estadd local yearFE      "Yes",  replace:   stock_EI10
. estadd local stateFE     "Yes",  replace:   stock_EI10
. 
. //Reduced-Form reg replacing post-`postyear' EI with 2001 EI
. levelsof abbr if year==2001 & EI==1, local(temp)
`"CT"' `"KS"' `"MA"' `"MD"' `"MN"' `"NJ"' `"OH"' `"OK"' `"PA"' `"VA"' `"WI"'
. gen EI2001 = 0
. foreach s of local temp {
  2.         di "`s'"
  3.         replace EI2001 = 1 if abbr == "`s'" & year>=2001
  4. }
CT
(16 real changes made)
KS
(16 real changes made)
MA
(16 real changes made)
MD
(16 real changes made)
MN
(16 real changes made)
NJ
(16 real changes made)
OH
(16 real changes made)
OK
(16 real changes made)
PA
(16 real changes made)
VA
(16 real changes made)
WI
(16 real changes made)
. 
. gen EI2001xPost = EI2001*post
. label variable EI2001xPost "ET-state-2001 X post-2001"
. 
. 
. eststo stock_EI6: ivreg2 stock  `controls' i.year i.statenum (EI EIxPost = EI2001 EI2001xPost), dkraay(10) partial(i.year i.statenum) 
> first endog(EI EIxPost)
Warning: time variable year has 50 gap(s) in relevant range

First-stage regressions
-----------------------


First-stage regression of EI:

Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
Number of obs =                   1750
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum
Number of clusters (year) =         35
------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      EI2001 |   .4408048   .0094917    46.44   0.000      .422188    .4594217
 EI2001xPost |   -.427195   .1265965    -3.37   0.001    -.6755002   -.1788899
------------------------------------------------------------------------------
F test of excluded instruments:
  F(  2,    34) =  1140.82
  Prob > F      =   0.0000
Sanderson-Windmeijer multivariate F test of excluded instruments:
  F(  1,    34) =  2279.05
  Prob > F      =   0.0000


First-stage regression of EIxPost:

Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
Number of obs =                   1750
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum
Number of clusters (year) =         35
------------------------------------------------------------------------------
             |               Robust
     EIxPost |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
      EI2001 |  -6.73e-16   3.42e-08    -0.00   1.000    -6.70e-08    6.70e-08
 EI2001xPost |    .572805   .1265965     4.52   0.000     .3244998    .8211101
------------------------------------------------------------------------------
F test of excluded instruments:
  F(  2,    34) =    10.24
  Prob > F      =   0.0003
Sanderson-Windmeijer multivariate F test of excluded instruments:
  F(  1,    34) =  2178.21
  Prob > F      =   0.0000



Summary results for first-stage regressions
-------------------------------------------

                                           (Underid)            (Weak id)
Variable     | F(  2,    34)  P-val | SW Chi-sq(  1) P-val | SW F(  1,    34)
EI           |    1140.82    0.0000 |     2465.92   0.0000 |     2279.05
EIxPost      |      10.24    0.0003 |     2356.81   0.0000 |     2178.21

NB: first-stage test statistics cluster-robust

Stock-Yogo weak ID F test critical values for single endogenous regressor:
                                   10% maximal IV size             19.93
                                   15% maximal IV size             11.59
                                   20% maximal IV size              8.75
                                   25% maximal IV size              7.25
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for i.i.d. errors only.

Underidentification test
Ho: matrix of reduced form coefficients has rank=K1-1 (underidentified)
Ha: matrix has rank=K1 (identified)
Kleibergen-Paap rk LM statistic          Chi-sq(1)=1.01     P-val=0.3157

Weak identification test
Ho: equation is weakly identified
Cragg-Donald Wald F statistic                                       8.21
Kleibergen-Paap Wald rk F statistic                                36.32

Stock-Yogo weak ID test critical values for K1=2 and L1=2:
                                   10% maximal IV size              7.03
                                   15% maximal IV size              4.58
                                   20% maximal IV size              3.95
                                   25% maximal IV size              3.63
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.

Weak-instrument-robust inference
Tests of joint significance of endogenous regressors B1 in main equation
Ho: B1=0 and orthogonality conditions are valid
Anderson-Rubin Wald test           F(2,34)=        7.72     P-val=0.0017
Anderson-Rubin Wald test           Chi-sq(2)=     16.70     P-val=0.0002
Stock-Wright LM S statistic        Chi-sq(2)=      3.10     P-val=0.2121

NB: Underidentification, weak identification and weak-identification-robust
    test statistics cluster-robust

Number of clusters             N_clust  =         35
Number of observations               N  =       1750
Number of regressors                 K  =          2
Number of endogenous regressors      K1 =          2
Number of instruments                L  =          2
Number of excluded instruments       L1 =          2
Number of partialled-out regressors/IVs =         84
NB: K & L do not included partialled-out variables

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =     3.30
                                                      Prob > F      =   0.0489
Total (centered) SS     =    22289.968                Centered R2   =  -0.0193
Total (uncentered) SS   =    22289.968                Uncentered R2 =  -0.0193
Residual SS             =  22720.23135                Root MSE      =    3.603

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          EI |  -.6532146   .3409127    -1.92   0.055    -1.321391    .0149619
     EIxPost |  -3.061499   1.537833    -1.99   0.047    -6.075596   -.0474028
------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):              1.007
                                                   Chi-sq(1) P-val =    0.3157
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):                8.208
                         (Kleibergen-Paap rk Wald F statistic):         36.318
Stock-Yogo weak ID test critical values: 10% maximal IV size              7.03
                                         15% maximal IV size              4.58
                                         20% maximal IV size              3.95
                                         25% maximal IV size              3.63
Source: Stock-Yogo (2005).  Reproduced by permission.
NB: Critical values are for Cragg-Donald F statistic and i.i.d. errors.
------------------------------------------------------------------------------
Hansen J statistic (overidentification test of all instruments):         0.000
                                                 (equation exactly identified)
-endog- option:
Endogeneity test of endogenous regressors:                               1.713
                                                   Chi-sq(2) P-val =    0.4246
Regressors tested:    EI EIxPost
------------------------------------------------------------------------------
Instrumented:         EI EIxPost
Excluded instruments: EI2001 EI2001xPost
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 20.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 27.statenum 28.statenum
                      29.statenum 30.statenum 31.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 48.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
. estadd local yearFE       "Yes",   replace:    stock_EI6
. estadd local stateFE      "Yes",   replace:    stock_EI6
. 
. eststo stock_EI7: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =    21.44
                                                      Prob > F      =   0.0000
Total (centered) SS     =  1797042.063                Centered R2   =   0.0116
Total (uncentered) SS   =  1797042.063                Uncentered R2 =   0.0116
Residual SS             =   1776175.88                Root MSE      =    31.86

------------------------------------------------------------------------------
             |               Robust
wealth_nor~d |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |   -15.8063   2.475746    -6.38   0.000    -20.65867   -10.95392
          EI |   11.36891   6.466261     1.76   0.079     -1.30473    24.04255
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_wealth_normalized')*1000)/1000, replace:   stock_EI7
. estadd local stderr = round((_se[EIxPost]/`baseline_wealth_normalized')*1000)/1000, replace:   stock_EI7
. estadd local yearFE      "Yes",   replace:   stock_EI7
. estadd local stateFE     "Yes",   replace:   stock_EI7
. 
. //Drop phase-out period (2002-2004)
. eststo stock_EI3e: ivreg2 stock EIxPost `controls' EI i.year i.statenum if inrange(year,2002,2004)==0, dkraay(10) partial(i.statenum i
> .year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         33                Number of obs =     1650
                                                      F(  2,    32) =     6.45
                                                      Prob > F      =   0.0044
Total (centered) SS     =  20933.59636                Centered R2   =   0.0221
Total (uncentered) SS   =  20933.59636                Uncentered R2 =   0.0221
Residual SS             =  20471.55901                Root MSE      =    3.522

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -2.641124   .7147016    -3.70   0.000    -4.041913   -1.240335
          EI |   1.256286   .5418336     2.32   0.020     .1943121    2.318261
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2005.year 2006.year 2007.year
                      2008.year 2009.year 2010.year 2011.year 2012.year
                      2013.year 2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
. estadd local yearFE      "Yes",   replace:   stock_EI3e
. estadd local stateFE     "Yes",   replace:   stock_EI3e
. 
. 
. //Count Inheritance-tax-only cases as EI=1 (be sure to do this reg last because it changes EI data)
. replace EI = 1 if Ionly==1
(185 real changes made)
. eststo stock_EI3c: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 50 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1750
                                                      F(  2,    34) =     6.18
                                                      Prob > F      =   0.0052
Total (centered) SS     =    22289.968                Centered R2   =   0.0195
Total (uncentered) SS   =    22289.968                Uncentered R2 =   0.0195
Residual SS             =  21856.34296                Root MSE      =    3.534

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -2.372551   .6721431    -3.53   0.000    -3.689927   -1.055174
          EI |   1.205243   .4252168     2.83   0.005     .3718333    2.038652
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
. estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
. estadd local yearFE      "Yes",   replace:   stock_EI3c
. estadd local stateFE     "Yes",   replace:   stock_EI3c
. 
. 
. ***Table 2 exported***
. 
. #delimit ;
delimiter now ;
. esttab stock_EI3 stock_EI4 stock_EI10 stock_EI6 stock_EI9 stock_EI7 stock_EI3c stock_EI3e /*stock_EIrate3*/
> using ../Tables/Table2.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "" "IV" "Per Capita" "Wealth" "Incl. inher. ta
> x" "Drop 2002-04" /*"ET Rate"*/) 
> noconstant label compress substitute(0000000000001 "" \_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" yearFE "Year Fix
> ed Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
> postfoot("\hline \hline" "\multicolumn{8}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard errors in parentheses. IV 
> regression instruments for ET-state\textsubscript{s,t}} \\" 
> "\multicolumn{8}{l}{\footnotesize and its interactions using a variable (and its corresponding interactions) equal to ET-state\textsub
> script{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001}} \\"
> "\multicolumn{8}{l}{\footnotesize  for t$\geq$2001.  \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }")
> ;
(output written to ../Tables/Table2.tex)
. #delimit cr
delimiter now cr
. 
. *********************************************************************
. ***Figure B3: Robustness to Dropping Individual ET States, Panel A***
. *********************************************************************
.  
. local i=1
. qui ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
. lincom EIxPost

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.372551   .6721431    -3.53   0.000    -3.689927   -1.055174
------------------------------------------------------------------------------
. gen beta=r(estimate) if _n==`i'
(1,749 missing values generated)
. gen ub = r(ub) if _n==`i'
(1,749 missing values generated)
. gen lb = r(lb) if _n==`i'
(1,749 missing values generated)
. gen n = `i' if _n==`i'
(1,749 missing values generated)
. label define n `i' "None", add
. foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
  2.         local ++i
  3.         qui ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="`s'", dkraay(10) partial(i.statenum i.year)
  4.         di "State: `s'"
  5.         lincom EIxPost
  6.         replace beta=r(estimate) if _n==`i'
  7.         replace ub = r(ub) if _n==`i'
  8.         replace lb = r(lb) if _n==`i'
  9.         replace n = `i' if _n==`i'
 10.         label define n `i' "`s'", add
 11. }
State: WA

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.341016   .7347477    -3.19   0.001    -3.781095    -.900937
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OR

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.370286   .6866352    -3.45   0.001    -3.716067   -1.024506
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: HI

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.423659    .674213    -3.59   0.000    -3.745092   -1.102225
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OK

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.528436   .6576195    -3.84   0.000    -3.817346   -1.239526
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: KS

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.558677   .6283885    -4.07   0.000    -3.790296   -1.327058
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MN

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.359085   .6484527    -3.64   0.000    -3.630029   -1.088141
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: WI

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.522564   .6801953    -3.71   0.000    -3.855722   -1.189406
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: IL

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.337332   .6716318    -3.48   0.001    -3.653706   -1.020958
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OH

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.167663   .7205594    -3.01   0.003    -3.579934   -.7553929
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NC

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.605218    .690115    -3.78   0.000    -3.957819   -1.252618
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: VA

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.490841   .7382043    -3.37   0.001    -3.937695   -1.043988
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MD

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.555026   .7056325    -3.62   0.000     -3.93804   -1.172011
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: DE

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.066633   .5741264    -3.60   0.000      -3.1919   -.9413656
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: PA

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.684488   .6156987    -2.74   0.006    -2.891235   -.4777403
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NJ

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.363934   .6824332    -3.46   0.001    -3.701478   -1.026389
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NY

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.389168   .7047496    -3.39   0.001    -3.770451   -1.007884
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: CT

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.763939   .7405907    -3.73   0.000     -4.21547   -1.312408
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: RI

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.458983   .7198033    -3.42   0.001    -3.869772   -1.048195
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MA

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.295795   .6748876    -3.40   0.001    -3.618551     -.97304
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: VT

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.389676   .6679152    -3.58   0.000    -3.698766   -1.080587
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: ME

 ( 1)  EIxPost = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -2.399478   .6888007    -3.48   0.000    -3.749503   -1.049454
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
. 
. label values n n
. 
. #delimit ;
delimiter now ;
. twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
> xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
> ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
> yscale(range(-5 1)) ylabel(-5(1)1, nogrid)
> ;
. #delimit cr
delimiter now cr
. graph export ../Figures/FigureB3_a.pdf, replace as(pdf) //Figure exported.
(file ../Figures/FigureB3_a.pdf written in PDF format)
. drop beta ub lb n
. 
. 
. *******************************************
. ***Table B6: Robustness, Panel A. D-in-D***
. *******************************************
. 
. //Restrict to top 100, 200, 300, or 10+ observations
. local m = 10
. foreach x in Top100 Top200 Top300 10obs {
  2.         use ./stata_data/Stateyear`x'AnalysisDataset.dta, clear
  3.         gen post = (year>`postyear')
  4.         drop if stock==0 & "`drop'"=="yes"
  5.         sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'
  6.         local baseline_stock`x' = r(mean)
  7.         label variable post "post-`postyear'"
  8.         label variable EI "ET-state"
  9.         gen EIxPost = EI*post
 10.         label variable EIxPost "ET-state X post-`postyear'"
 11.         label variable avg "PIT"
 12.         gen avgxPost = avg*post
 13.         label variable avgxPost "PIT X post-`postyear'"
 14.         eststo stock_EI`m': ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 15.         estadd local elas = round((_b[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
 16.         estadd local stderr = round((_se[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
 17.         estadd local yearFE      "Yes",   replace:   stock_EI`m'
 18.         estadd local stateFE     "Yes",   replace:   stock_EI`m'
 19.         local m = `m'+1
 20. }
(0 observations deleted)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    1.636364    1.206045          0          4
Warning: time variable year has 45 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1575
                                                      F(  2,    34) =    14.90
                                                      Prob > F      =   0.0000
Total (centered) SS     =  3194.181587                Centered R2   =   0.0081
Total (uncentered) SS   =  3194.181587                Uncentered R2 =   0.0081
Residual SS             =  3168.213411                Root MSE      =    1.418

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -.5530846   .1048614    -5.27   0.000     -.758609   -.3475601
          EI |   .0599211   .1991422     0.30   0.763    -.3303905    .4502327
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      31.statenum 32.statenum 33.statenum 34.statenum
                      35.statenum 36.statenum 37.statenum 38.statenum
                      39.statenum 40.statenum 41.statenum 42.statenum
                      43.statenum 44.statenum 46.statenum 47.statenum
                      49.statenum 50.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
(0 observations deleted)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11           4    1.897367          2          7
Warning: time variable year has 46 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1610
                                                      F(  2,    34) =    26.70
                                                      Prob > F      =   0.0000
Total (centered) SS     =  9926.884472                Centered R2   =   0.0120
Total (uncentered) SS   =  9926.884472                Uncentered R2 =   0.0120
Residual SS             =  9807.772405                Root MSE      =    2.468

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -1.307306   .1945878    -6.72   0.000    -1.688691    -.925921
          EI |   .5001733   .3178612     1.57   0.116    -.1228233     1.12317
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 28.statenum 29.statenum
                      30.statenum 31.statenum 32.statenum 33.statenum
                      34.statenum 35.statenum 36.statenum 37.statenum
                      38.statenum 39.statenum 40.statenum 41.statenum
                      42.statenum 43.statenum 44.statenum 46.statenum
                      47.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
(0 observations deleted)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    5.272727    2.611165          2          9
Warning: time variable year has 48 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1680
                                                      F(  2,    34) =    12.20
                                                      Prob > F      =   0.0001
Total (centered) SS     =   19957.7131                Centered R2   =   0.0128
Total (uncentered) SS   =   19957.7131                Uncentered R2 =   0.0128
Residual SS             =  19701.78342                Root MSE      =    3.425

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -1.902422   .3875397    -4.91   0.000    -2.661986   -1.142859
          EI |   .9109142    .466186     1.95   0.051    -.0027935    1.824622
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 28.statenum 29.statenum
                      30.statenum 31.statenum 32.statenum 33.statenum
                      34.statenum 35.statenum 36.statenum 37.statenum
                      38.statenum 39.statenum 40.statenum 41.statenum
                      42.statenum 43.statenum 44.statenum 45.statenum
                      46.statenum 47.statenum 48.statenum 49.statenum
                      50.statenum 1983.year 1984.year 1985.year 1986.year
                      1987.year 1988.year 1989.year 1990.year 1991.year
                      1992.year 1993.year 1994.year 1995.year 1996.year
                      1997.year 1998.year 1999.year 2000.year 2001.year
                      2003.year 2004.year 2005.year 2006.year 2007.year
                      2008.year 2009.year 2010.year 2011.year 2012.year
                      2013.year 2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
(0 observations deleted)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    5.454545     2.65946          2          9
Warning: time variable year has 45 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): statenum

Number of clusters (year) =         35                Number of obs =     1575
                                                      F(  2,    34) =     8.19
                                                      Prob > F      =   0.0013
Total (centered) SS     =  12607.42603                Centered R2   =   0.0259
Total (uncentered) SS   =  12607.42603                Uncentered R2 =   0.0259
Residual SS             =  12281.08034                Root MSE      =    2.792

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     EIxPost |  -2.181841   .5221914    -4.18   0.000    -3.205318   -1.158365
          EI |   .9439882   .3564842     2.65   0.008     .2452919    1.642684
------------------------------------------------------------------------------
Included instruments: EIxPost EI
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      49.statenum 50.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. 
. 
. #delimit ;
delimiter now ;
. esttab stock_EI10 stock_EI11 stock_EI12 stock_EI13
> using ../Tables/TableB6_a.tex, replace se scalars(elas stderr) mtitle("Top 100" "Top200" "Top300" "10+ Obs" ) 
> noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
> postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard errors in parentheses.} \\
> " 
> "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
> "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../Tables/TableB6_a.tex)
. #delimit cr
delimiter now cr
. 
. ****************************************************************************
. ***Table 5: Effect of Tax Induced Mobility on State Aggregate Tax Base   ***
. *** The values shown in Table 5 of the paper are hard-coded in the       ***
. *** AEJEP_final.tex using the numbers displayed by the stata code below. ***
. ****************************************************************************
. *Cell(1,1)
. local cell_11 = `baseline_stock'*`numEIStates'
. di `cell_11'
78
. 
. *Cell(1,2)
. estimates restore stock_EI3
(results stock_EI3 are active now)
. local cell_12 = `cell_11'*(_b[EIxPost]/`baseline_stock')
. di `cell_12'
-26.990067
. 
. *Cell(2,1)
. local cell_21 = `baseline_wealth'*`numEIStates'
. di `cell_21'
317.63602
. 
. *Cell(2,2)
. estimates restore stock_EI7
(results stock_EI7 are active now)
. local cell_22 = `cell_21'*(_b[EIxPost]/`baseline_wealth_normalized')
. di `cell_22'
-118.51117
. *pause
. 
. } // end Run2D IF code

. 
. /// 2. ANALYSIS OF STATE*YEAR*OLD FORBES POPULATION
> if "$run3D" == "yes" {
.         
.         use ./stata_data/StateyearoldAnalysisDataset.dta, clear
. 
.         gen stockpc = (stock/pop)*1000
.         sum stock if year==2001 & EI==1 & old==1        //yields baseline number of old billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    4.181818    2.182576          1          8
.         local baseline_stock_old = r(mean)
.         sum stock if year==2001 & EI==1 & old==0        //yields baseline number of young billionaires pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    2.909091    1.578261          0          5
.         local baseline_stock_young = r(mean)
.         sum stockpc if year==2001 & EI==1 & old==1      //yields baseline number of old billionaires p.c. pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     stockpc |         11    .7181261    .3960719   .2354972   1.456522
.         local baseline_stockpc_old = r(mean)
.         sum stockpc if year==2001 & EI==1 & old==0      //yields baseline number of young billionaires p.c. pre-`postyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
     stockpc |         11    .4585881    .2596234          0   .9247555
.         local baseline_stockpc_young = r(mean)
.         sum wealth if year>2001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      wealth |      1,500    17.74915    40.30848          0      374.9
.         local post_wealth_mean = r(mean)
.         sum wealth if year==2001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      wealth |        100    12.72022    25.48464          0   149.3488
.         local pre_wealth_mean = r(mean)
.         sum wealth if year==2001 & EI==1 & old==1, detail //yields baseline statewide wealth of old billionaires pre-`postyear'

          (sum) Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%     2.491338       2.491338
 5%     2.491338       2.768154
10%     2.768154       7.854636       Obs                  11
25%     7.854636       7.868477       Sum of Wgt.          11

50%      8.65048                      Mean            13.6665
                        Largest       Std. Dev.      12.46752
75%     18.65043       12.52589
90%     29.61924       18.65043       Variance       155.4392
95%      43.3216       29.61924       Skewness       1.447063
99%      43.3216        43.3216       Kurtosis       3.975016
.         local baseline_wealth_old = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
.         sum wealth if year==2001 & EI==1 & old==0, detail //yields baseline statewide wealth of young billionaires pre-`postyear'

          (sum) Net Worth (billions, 2017 dollars)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0       1.730096
10%     1.730096       3.183377       Obs                  11
25%     3.183377       3.321784       Sum of Wgt.          11

50%     7.301005                      Mean           7.027964
                        Largest       Std. Dev.      5.468637
75%     9.134907        8.65048
90%     16.33211       9.134907       Variance       29.90599
95%     16.47051       16.33211       Skewness       .6575199
99%     16.47051       16.47051       Kurtosis        2.36232
.         local baseline_wealth_young = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
. 
.         egen total_wealth = total(wealth), by(year)
.         sum total_wealth if year==2001 & old==1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
total_wealth |         50    1272.022           0   1272.022   1272.022
.         sum total_wealth if year==2017 & old==1 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
total_wealth |         50        2604           0       2604       2604
.         gen wealth_normalized = (wealth)*(r(mean)/(total_wealth))   //rescale each state-year-generation's wealth so national total is
>  constant over time (equal to 2017 national total).
.         sum wealth_normalized if year==2001 & EI==1 & old==1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
wealth_nor~d |         11    27.97716     25.5227   5.100104   88.68514
.         local baseline_wealth_normalized_old = r(mean)
.         sum wealth_normalized if year==2001 & EI==1 & old==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
wealth_nor~d |         11    14.38719    11.19504          0   33.71735
.         local baseline_wealth_normalized_yng = r(mean)
. 
.         ****************************************************************
.         ***Table 3: Triple-Difference -- DV: Population of Forbes 400***
.         ****************************************************************
.         
.         //Adding i.year
.         eststo stock_EI_old2: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year, dkraay(10) partial(i.year)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =   846.13
                                                      Prob > F      =   0.0000
Total (centered) SS     =    209440.72                Centered R2   =   0.0060
Total (uncentered) SS   =    209440.72                Uncentered R2 =   0.0060
Residual SS             =  208176.4916                Root MSE      =    7.712

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.8808695   .3030746    -2.91   0.004    -1.474885   -.2868541
      EIxold |   .2393533   .1547956     1.55   0.122    -.0640405     .542747
     EIxPost |  -1.628893   .3996471    -4.08   0.000    -2.412187   -.8455989
    oldxPost |   1.700971    .274388     6.20   0.000      1.16318    2.238762
          EI |   .6885015   .2473011     2.78   0.005     .2038003    1.173203
         old |  -.5907046   .2175061    -2.72   0.007    -1.017009   -.1644005
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old2
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.6001605   .0922626    -6.50   0.000    -.7809919   -.4193291
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old2
.         estadd local yearFE      "Yes",   replace:   stock_EI_old2
.         estadd local stateFE     "No",   replace:   stock_EI_old2
. 
.         
.         //Replace ET dummy with ET rate
.         label var EIratecombinedxPostxold  "ET rate X post-2001 X old"
.         label var EIratecombinedxPost "ET rate X post-2001"
.         eststo stock_EIrate_old3: ivreg2 stock `controls' EIratecombinedxPostxold EIxold EIratecombinedxPost oldxPost EI old i.year i.
> statenum, dkraay(10) partial(i.year i.statenum)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =    14.22
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22227.984                Centered R2   =   0.0324
Total (uncentered) SS   =    22227.984                Uncentered R2 =   0.0324
Residual SS             =  21507.90007                Root MSE      =    2.479

-----------------------------------------------------------------------------------------
                        |               Robust
                  stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------------+----------------------------------------------------------------
EIratecombinedxPostxold |  -1.526466   .4518392    -3.38   0.001    -2.412055   -.6408775
                 EIxold |  -.0631616   .2750569    -0.23   0.818    -.6022631    .4759399
    EIratecombinedxPost |  -12.10741   3.095373    -3.91   0.000    -18.17423   -6.040587
               oldxPost |   2.075829    .315991     6.57   0.000     1.456498     2.69516
                     EI |   .7608418   .3009864     2.53   0.011     .1709192    1.350764
                    old |  -.4899672   .2228533    -2.20   0.028    -.9267516   -.0531828
-----------------------------------------------------------------------------------------
Included instruments: EIratecombinedxPostxold EIxold EIratecombinedxPost
                      oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 20.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 27.statenum 28.statenum
                      29.statenum 30.statenum 31.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 48.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local yearFE      "Yes",   replace:   stock_EIrate_old3
.         estadd local stateFE     "Yes",   replace:   stock_EIrate_old3
. 
.         //Adding PIT
.         label var avgxPostxold  "PIT X post-2001 X old"
.         label var avgxold  "PIT X old"
.         label var avgxPost  "PIT X post-2001"
.         label var avg "PIT"
.         eststo stock_EI_old4: ivreg2 stock `controls' EIxPostxold EIxold EIxPost avgxPostxold avgxold avgxPost oldxPost EI avg old i.y
> ear i.statenum, dkraay(10) partial(i.statenum i.year)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F( 10,    34) =   469.93
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22227.984                Centered R2   =   0.0504
Total (uncentered) SS   =    22227.984                Uncentered R2 =   0.0504
Residual SS             =  21107.14771                Root MSE      =    2.456

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.6894277   .2487747    -2.77   0.006    -1.177017   -.2018383
      EIxold |   .0582745   .1866517     0.31   0.755    -.3075562    .4241051
     EIxPost |  -.9948654   .4928957    -2.02   0.044    -1.960923   -.0288076
avgxPostxold |  -.2689392   .0929664    -2.89   0.004      -.45115   -.0867284
     avgxold |   .2635319   .0199333    13.22   0.000     .2244634    .3026003
    avgxPost |   .1486951   .0678882     2.19   0.029     .0156367    .2817535
    oldxPost |   2.914508   .5659901     5.15   0.000     1.805188    4.023829
          EI |   .6483573   .3344826     1.94   0.053    -.0072166    1.303931
         avg |   .0474088   .0466747     1.02   0.310     -.044072    .1388895
         old |  -1.780265   .0940733   -18.92   0.000    -1.964645   -1.595884
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost avgxPostxold avgxold avgxPost
                      oldxPost EI avg old
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old4
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.4027658   .1084764    -3.71   0.000    -.6153756   -.1901559
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old4
.         estadd local yearFE      "Yes",  replace:   stock_EI_old4
.         estadd local stateFE     "Yes",  replace:   stock_EI_old4
. 
.         //Control for ordinary high earners
.         egen pop_90to97_natl = total(pop_90to97), by(year old)
.         gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
.         label var topshr_90to97 "High earners share"
.         eststo stock_EI_old20: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old topshr_90to97 i.year i.statenum, dkr
> aay(10) partial(i.statenum i.year)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  7,    34) =    22.23
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22227.984                Centered R2   =   0.0457
Total (uncentered) SS   =    22227.984                Uncentered R2 =   0.0457
Residual SS             =  21211.37106                Root MSE      =    2.462

-------------------------------------------------------------------------------
              |               Robust
        stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
  EIxPostxold |  -.6626968   .3099739    -2.14   0.033    -1.270234   -.0551591
       EIxold |   .0693689   .1519584     0.46   0.648     -.228464    .3672019
      EIxPost |  -.7810403   .2989779    -2.61   0.009    -1.367026   -.1950543
     oldxPost |   1.629974   .2820595     5.78   0.000     1.077147      2.1828
           EI |   .5727253   .2959828     1.93   0.053    -.0073903    1.152841
          old |  -.5340999   .2251894    -2.37   0.018     -.975463   -.0927367
topshr_90to97 |   .3956974   .0975839     4.05   0.000     .2044364    .5869583
-------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old topshr_90to97
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old20
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.3452415   .1087217    -3.18   0.001    -.5583322   -.1321508
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old20
.         estadd local yearFE      "Yes",  replace:   stock_EI_old20
.         estadd local stateFE     "Yes",  replace:   stock_EI_old20
.         
.         //wealth
.         eststo stock_EI_old7: ivreg2 `wealth' `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) part
> ial(i.statenum i.year)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =    35.83
                                                      Prob > F      =   0.0000
Total (centered) SS     =  2657827.841                Centered R2   =   0.0231
Total (uncentered) SS   =  2657827.841                Uncentered R2 =   0.0231
Residual SS             =  2596386.041                Root MSE      =    27.24

------------------------------------------------------------------------------
             |               Robust
wealth_nor~d |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -20.10814   4.794095    -4.19   0.000     -29.5044   -10.71189
      EIxold |   5.746186   2.372518     2.42   0.015     1.096136    10.39624
     EIxPost |   2.150923   2.529007     0.85   0.395     -2.80584    7.107687
    oldxPost |   18.25607   3.283005     5.56   0.000      11.8215    24.69064
          EI |   2.811362   4.060155     0.69   0.489    -5.146395    10.76912
         old |  -7.178701   1.582445    -4.54   0.000    -10.28024   -4.077167
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 50.statenum 1983.year 1984.year
                      1985.year 1986.year 1987.year 1988.year 1989.year
                      1990.year 1991.year 1992.year 1993.year 1994.year
                      1995.year 1996.year 1997.year 1998.year 1999.year
                      2000.year 2001.year 2003.year 2004.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI_old7
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI_old7
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old')*1000)/1000,   replace:   sto
> ck_EI_old7
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/27.97716253454035

------------------------------------------------------------------------------
wealth_nor~d |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.6418528   .1021065    -6.29   0.000    -.8419779   -.4417276
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old7
.         estadd local yearFE      "Yes",   replace:   stock_EI_old7
.         estadd local stateFE     "Yes",   replace:   stock_EI_old7
.         
.         
.         //Change dep var to stock p.c.
.         eststo stock_EI_old9: ivreg2 stockpc `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) parti
> al(i.year i.statenum)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =    47.70
                                                      Prob > F      =   0.0000
Total (centered) SS     =  3172.179893                Centered R2   =   0.0169
Total (uncentered) SS   =  3172.179893                Uncentered R2 =   0.0169
Residual SS             =  3118.520818                Root MSE      =    .9439

------------------------------------------------------------------------------
             |               Robust
     stockpc |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.6227951   .2085585    -2.99   0.003    -1.031562    -.214028
      EIxold |   .4389064   .1555692     2.82   0.005     .1339964    .7438164
     EIxPost |   .0009209   .0737186     0.01   0.990    -.1435649    .1454066
    oldxPost |   .3309157   .0757096     4.37   0.000     .1825276    .4793037
          EI |  -.0562748   .0793026    -0.71   0.478    -.2117051    .0991555
         old |  -.0857364   .0507314    -1.69   0.091    -.1851681    .0136952
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 20.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 27.statenum 28.statenum
                      29.statenum 30.statenum 31.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 48.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old')*1000)/1000,   replace:   stock_EI_old9
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/.7181260694156993

------------------------------------------------------------------------------
     stockpc |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.8659681   .3586804    -2.41   0.016    -1.568969   -.1629675
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old9
.         estadd local yearFE      "Yes",   replace:   stock_EI_old9
.         estadd local stateFE     "Yes",   replace:   stock_EI_old9
. 
.         //Instrument post-2001 EI with 2001 EI
.         levelsof abbr if year==2001 & EI==1, local(temp)
`"CT"' `"KS"' `"MA"' `"MD"' `"MN"' `"NJ"' `"OH"' `"OK"' `"PA"' `"VA"' `"WI"'
.         gen EI2001 = 0
.         foreach s of local temp {
  2.                 di "`s'"
  3.                 replace EI2001 = 1 if abbr == "`s'" & year>=2001
  4.         }
CT
(32 real changes made)
KS
(32 real changes made)
MA
(32 real changes made)
MD
(32 real changes made)
MN
(32 real changes made)
NJ
(32 real changes made)
OH
(32 real changes made)
OK
(32 real changes made)
PA
(32 real changes made)
VA
(32 real changes made)
WI
(32 real changes made)
.         gen EI2001xPost = EI2001*post
.         gen EI2001xPostxold = EI2001xPost*old
.         gen EI2001xold = EI2001*old
.         eststo stock_EI_old6: ivreg2 stock  `controls' oldxPost old i.year i.statenum (EI EIxold EIxPost EIxPostxold = EI2001 EI2001xo
> ld EI2001xPost EI2001xPostxold), dkraay(10) partial(i.year i.statenum)
Warning: time variable year has 100 gap(s) in relevant range

IV (2SLS) estimation
--------------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =    57.52
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22227.984                Centered R2   =  -0.0272
Total (uncentered) SS   =    22227.984                Uncentered R2 =  -0.0272
Residual SS             =  22833.45057                Root MSE      =    2.554

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          EI |  -1.663734   .1115623   -14.91   0.000    -1.882392   -1.445076
      EIxold |   2.674254   .4502103     5.94   0.000     1.791858     3.55665
     EIxPost |  -.7051529   .9286165    -0.76   0.448    -2.525208    1.114902
 EIxPostxold |  -1.651194   .5184159    -3.19   0.001     -2.66727    -.635117
    oldxPost |   2.014639   .4558529     4.42   0.000     1.121184    2.908094
         old |  -1.401527   .4502103    -3.11   0.002    -2.283922   -.5191305
------------------------------------------------------------------------------
Underidentification test (Kleibergen-Paap rk LM statistic):              1.007
                                                   Chi-sq(1) P-val =    0.3157
------------------------------------------------------------------------------
Weak identification test (Cragg-Donald Wald F statistic):                8.411
                         (Kleibergen-Paap rk Wald F statistic):         18.601
Stock-Yogo weak ID test critical values:                       <not available>
------------------------------------------------------------------------------
Warning: estimated covariance matrix of moment conditions not of full rank.
         overidentification statistic not reported, and standard errors and
         model tests should be interpreted with caution.
Possible causes:
         number of clusters insufficient to calculate robust covariance matrix
         covariance matrix of moment conditions not positive definite
         covariance matrix uses too many lags
         singleton dummy variable (dummy with one 1 and N-1 0s or vice versa)
partial option may address problem.
------------------------------------------------------------------------------
Instrumented:         EI EIxold EIxPost EIxPostxold
Included instruments: oldxPost old
Excluded instruments: EI2001 EI2001xold EI2001xPost EI2001xPostxold
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 20.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 27.statenum 28.statenum
                      29.statenum 30.statenum 31.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 48.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old6
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.5634742    .161216    -3.50   0.000    -.8794518   -.2474965
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old6
.         estadd local yearFE       "Yes",   replace:    stock_EI_old6
.         estadd local stateFE      "Yes",   replace:    stock_EI_old6
.         
. 
.         //Drop phase-out period (2002-2004)
.         eststo stock_EI_old3e: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if inrange(year,20
> 02,2004)==0, dkraay(10) partial(i.year i.statenum)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         33                Number of obs =     3300
                                                      F(  6,    32) =    11.56
                                                      Prob > F      =   0.0000
Total (centered) SS     =  21135.29818                Centered R2   =   0.0329
Total (uncentered) SS   =  21135.29818                Uncentered R2 =   0.0329
Residual SS             =  20439.95737                Root MSE      =    2.489

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -1.033492   .2481067    -4.17   0.000    -1.519773   -.5472122
      EIxold |   .2393533   .1547956     1.55   0.122    -.0640405     .542747
     EIxPost |  -.8038158   .3456578    -2.33   0.020    -1.481293   -.1263389
    oldxPost |   1.764331   .2687832     6.56   0.000     1.237526    2.291136
          EI |   .5084666   .3147181     1.62   0.106    -.1083696    1.125303
         old |  -.5907046   .2175061    -2.72   0.007    -1.017009   -.1644005
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2005.year
                      2006.year 2007.year 2008.year 2009.year 2010.year
                      2011.year 2012.year 2013.year 2014.year 2015.year
                      2016.year 2017.year 2.statenum 3.statenum 4.statenum
                      5.statenum 6.statenum 7.statenum 8.statenum 9.statenum
                      10.statenum 11.statenum 12.statenum 13.statenum
                      14.statenum 15.statenum 16.statenum 17.statenum
                      18.statenum 19.statenum 20.statenum 21.statenum
                      22.statenum 23.statenum 24.statenum 25.statenum
                      26.statenum 27.statenum 28.statenum 29.statenum
                      30.statenum 31.statenum 32.statenum 33.statenum
                      34.statenum 35.statenum 36.statenum 37.statenum
                      38.statenum 39.statenum 40.statenum 41.statenum
                      42.statenum 43.statenum 44.statenum 45.statenum
                      46.statenum 47.statenum 48.statenum 49.statenum
                      50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old3e
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.4393563   .0976339    -4.50   0.000    -.6307152   -.2479975
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3e
.         estadd local yearFE      "Yes",   replace:   stock_EI_old3e
.         estadd local stateFE     "Yes",   replace:   stock_EI_old3e
. 
. 
.         //Count Inheritance-tax-only cases as EI=0
.         replace EI = 1 if Ionly==1
(370 real changes made)
.         eststo stock_EI_old3c: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partia
> l(i.year i.statenum)
Warning: time variable year has 100 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3500
                                                      F(  6,    34) =    14.82
                                                      Prob > F      =   0.0000
Total (centered) SS     =    22227.984                Centered R2   =   0.0319
Total (uncentered) SS   =    22227.984                Uncentered R2 =   0.0319
Residual SS             =  21519.63924                Root MSE      =     2.48

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.9549133   .3420976    -2.79   0.005    -1.625412   -.2844144
      EIxold |   .3133971   .1550051     2.02   0.043     .0095927    .6172015
     EIxPost |   -.726633   .2897646    -2.51   0.012    -1.294561   -.1587048
    oldxPost |   1.725627   .2992994     5.77   0.000     1.139011    2.312243
          EI |   .4791594   .2246598     2.13   0.033     .0388344    .9194845
         old |  -.6153612    .237464    -2.59   0.010    -1.080782   -.1499403
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 20.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 27.statenum 28.statenum
                      29.statenum 30.statenum 31.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 48.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old3c
.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post

    elas_old:  (_b[EIxPostxold] +  _b[EIxPost])/4.181818181818182

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.4021089    .105379    -3.82   0.000     -.608648   -.1955698
------------------------------------------------------------------------------
.         local stderr_old = round(_se[elas_old]*1000)/1000
.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3c
.         estadd local yearFE      "Yes",   replace:   stock_EI_old3c
.         estadd local stateFE     "Yes",   replace:   stock_EI_old3c
. 
.         
.         ****Outputting Table 3****
.         
.         #delimit ;
delimiter now ;
.         esttab stock_EI_old2 stock_EI_old4 stock_EI_old20 stock_EI_old6 stock_EI_old9 stock_EI_old7 stock_EI_old3c stock_EI_old3e /*st
> ock_EIrate_old3*/
>         using ../Tables/Table3.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("" "" "" "IV" "Per Capita" 
> "Wealth" "Incl. inher. tax" "Drop 2002-04" /*"ET Rate"*/) 
>         noconstant label compress 
>         substitute(topshr_90to97 "High Earners Share" EIratecombinedxPostxold "ET rate X post-2001 X old" EIratecombinedxPost "ET rate
>  X post-2001" 0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{Std. Error}" elas_old "Semi-elast
> icity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard errors in parenthe
> ses. All regressions include year fixed effects. Note state fixed effects are absorbed by} \\" 
>         "\multicolumn{9}{l}{\footnotesize old-young differencing. IV regression instruments for ET-state\textsubscript{s,t} and its in
> teractions using a variable (and its corresponding interactions) equal to} \\"
>         "\multicolumn{9}{l}{\footnotesize ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001} for t$\geq$20
> 01..} \\"
>         "\multicolumn{9}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../Tables/Table3.tex)
.                         #delimit cr
delimiter now cr
. 
.         
.         ****************************************
.         ***Table B6: Robustness, Panel B. DDD***
.         ****************************************
.         //Restrict to top 100, 200, 300, or 10+ observations
.         
.         local m = 10
.         foreach x in Top100 Top200 Top300 10obs {
  2.                 use ./stata_data/StateyearOld`x'AnalysisDataset.dta, clear
  3.                 sum stock if year==2001 & EI==1 & old==1        //yields baseline number of billionaires pre-`postyear'
  4.                 local baseline_stock_old = r(mean)
  5.                 eststo stock_EI_old`m': ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraa
> y(10) partial(i.year i.statenum)
  6.                 estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
  7.                 estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
  8.                 estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stoc
> k_EI_old`m'
  9.                 nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 10.                 local stderr_old = round(_se[elas_old]*1000)/1000
 11.                 estadd local stderr_old = `stderr_old',   replace:   stock_EI_old`m'
 12.                 estadd local yearFE      "Yes",   replace:   stock_EI_old`m'
 13.                 estadd local stateFE     "Yes",   replace:   stock_EI_old`m'
 14.                 local m = `m'+1
 15.         }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    1.090909    1.136182          0          3
Warning: time variable year has 90 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3150
                                                      F(  6,    34) =    13.00
                                                      Prob > F      =   0.0000
Total (centered) SS     =  4182.090794                Centered R2   =   0.0334
Total (uncentered) SS   =  4182.090794                Uncentered R2 =   0.0334
Residual SS             =  4042.325891                Root MSE      =    1.133

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.7615445   .1664041    -4.58   0.000    -1.087691   -.4353984
      EIxold |   .2450421   .0778798     3.15   0.002     .0924004    .3976838
     EIxPost |   .1042299   .0841852     1.24   0.216      -.06077    .2692298
    oldxPost |   .8933151   .1214895     7.35   0.000     .6552001     1.13143
          EI |  -.0925605   .0888057    -1.04   0.297    -.2666165    .0814955
         old |  -.2060811   .0586296    -3.51   0.000     -.320993   -.0911692
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 21.statenum
                      22.statenum 23.statenum 25.statenum 26.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 46.statenum 47.statenum 49.statenum
                      50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

    elas_old:  (_b[EIxPostxold] + _b[EIxPost])/1.090909090909091

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.6025383   .1014811    -5.94   0.000    -.8014377   -.4036389
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    2.272727      1.3484          1          5
Warning: time variable year has 92 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3220
                                                      F(  6,    34) =    44.11
                                                      Prob > F      =   0.0000
Total (centered) SS     =  10191.94224                Centered R2   =   0.0268
Total (uncentered) SS   =  10191.94224                Uncentered R2 =   0.0268
Residual SS             =  9919.198324                Root MSE      =    1.755

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -.8082803    .264617    -3.05   0.002     -1.32692   -.2896406
      EIxold |   .2720973   .0748536     3.64   0.000     .1253869    .4188076
     EIxPost |  -.2495129   .1301473    -1.92   0.055    -.5045968    .0055711
    oldxPost |   1.180718   .2417747     4.88   0.000     .7068481    1.654588
          EI |    .114038   .1470719     0.78   0.438    -.1742175    .4022936
         old |  -.3518519   .0842865    -4.17   0.000    -.5170503   -.1866534
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 21.statenum
                      22.statenum 23.statenum 24.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      31.statenum 32.statenum 33.statenum 34.statenum
                      35.statenum 36.statenum 37.statenum 38.statenum
                      39.statenum 40.statenum 41.statenum 42.statenum
                      43.statenum 44.statenum 46.statenum 47.statenum
                      49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

    elas_old:  (_b[EIxPostxold] + _b[EIxPost])/2.272727272727273

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |   -.465429   .0846414    -5.50   0.000     -.631323    -.299535
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    3.090909    1.921174          1          6
Warning: time variable year has 96 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3360
                                                      F(  6,    34) =    15.85
                                                      Prob > F      =   0.0000
Total (centered) SS     =  17487.85655                Centered R2   =   0.0303
Total (uncentered) SS   =  17487.85655                Uncentered R2 =   0.0303
Residual SS             =  16958.29436                Root MSE      =    2.247

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -1.126726   .3459371    -3.26   0.001     -1.80475   -.4487021
      EIxold |   .4110617   .0990333     4.15   0.000     .2169601    .6051634
     EIxPost |  -.3878481   .1520461    -2.55   0.011    -.6858529   -.0898433
    oldxPost |      1.603   .3007526     5.33   0.000     1.013536    2.192464
          EI |   .2499263   .2244655     1.11   0.266     -.190018    .6898705
         old |  -.4992076   .1485132    -3.36   0.001    -.7902881   -.2081272
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 21.statenum
                      22.statenum 23.statenum 24.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      31.statenum 32.statenum 33.statenum 34.statenum
                      35.statenum 36.statenum 37.statenum 38.statenum
                      39.statenum 40.statenum 41.statenum 42.statenum
                      43.statenum 44.statenum 45.statenum 46.statenum
                      47.statenum 48.statenum 49.statenum 50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

    elas_old:  (_b[EIxPostxold] + _b[EIxPost])/3.090909090909091

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.4900093   .1081826    -4.53   0.000    -.7020434   -.2779753
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       stock |         11    3.363636    1.747726          1          6
Warning: time variable year has 90 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=10
  time variable (t):  year
  group variable (i): stateold

Number of clusters (year) =         35                Number of obs =     3150
                                                      F(  6,    34) =    18.10
                                                      Prob > F      =   0.0000
Total (centered) SS     =  15908.71302                Centered R2   =   0.0624
Total (uncentered) SS   =  15908.71302                Uncentered R2 =   0.0624
Residual SS             =  14916.69477                Root MSE      =    2.176

------------------------------------------------------------------------------
             |               Robust
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 EIxPostxold |  -1.178083   .4714752    -2.50   0.012    -2.102157   -.2540083
      EIxold |   .4399789   .1882543     2.34   0.019     .0710074    .8089505
     EIxPost |  -.5018793   .2400298    -2.09   0.037    -.9723291   -.0314296
    oldxPost |     2.1656   .5369952     4.03   0.000     1.113109    3.218091
          EI |   .2520046   .1940536     1.30   0.194    -.1283335    .6323427
         old |  -.4594595   .2438114    -1.88   0.059    -.9373211    .0184022
------------------------------------------------------------------------------
Included instruments: EIxPostxold EIxold EIxPost oldxPost EI old
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year 2.statenum
                      3.statenum 4.statenum 5.statenum 6.statenum 7.statenum
                      8.statenum 9.statenum 10.statenum 11.statenum 12.statenum
                      13.statenum 14.statenum 15.statenum 16.statenum
                      17.statenum 18.statenum 19.statenum 21.statenum
                      22.statenum 23.statenum 25.statenum 26.statenum
                      28.statenum 29.statenum 30.statenum 32.statenum
                      33.statenum 34.statenum 35.statenum 36.statenum
                      37.statenum 38.statenum 39.statenum 40.statenum
                      41.statenum 42.statenum 43.statenum 44.statenum
                      45.statenum 46.statenum 47.statenum 49.statenum
                      50.statenum _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------

    elas_old:  (_b[EIxPostxold] + _b[EIxPost])/3.363636363636364

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    elas_old |  -.4994482   .1295453    -3.86   0.000    -.7533522   -.2455442
------------------------------------------------------------------------------
. 
.         #delimit ;
delimiter now ;
.         esttab stock_EI_old10 stock_EI_old11 stock_EI_old12 stock_EI_old13
>         using ../Tables/TableB6_b.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("Top 100" "Top200" "Top3
> 00" "10+ Obs") 
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
>         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard errors in parenthe
> ses. All regressions} \\" 
>         "\multicolumn{5}{l}{\footnotesize include year fixed effects. State fixed effects are absorbed by old-young differencing.} \\"
>         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../Tables/TableB6_b.tex)
.         #delimit cr
delimiter now cr
.         
.         *********************************************************************
.         ***Figure B3: Robustness to Dropping Individual ET States, Panel B***
.         *********************************************************************
. 
.         //Drop each ET state one at a time 
.         local i=1
.         qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partial(i.year i.statenum
> )
.         lincom EIxPostxold

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.178083   .4714752    -2.50   0.012    -2.102157   -.2540083
------------------------------------------------------------------------------
.         gen beta=r(estimate) if _n==`i'
(3,149 missing values generated)
.         gen ub = r(ub) if _n==`i'
(3,149 missing values generated)
.         gen lb = r(lb) if _n==`i'
(3,149 missing values generated)
.         gen n = `i' if _n==`i'
(3,149 missing values generated)
.         label define n `i' "None", add
.         foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
  2.                 local ++i
  3.                 qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="`s'", dkraay(10)
>  partial(i.year i.statenum)
  4.                 di "State: `s'"
  5.                 lincom EIxPostxold
  6.                 replace beta=r(estimate) if _n==`i'
  7.                 replace ub = r(ub) if _n==`i'
  8.                 replace lb = r(lb) if _n==`i'
  9.                 replace n = `i' if _n==`i'
 10.                 label define n `i' "`s'", add
 11.         }
State: WA

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |   -.710942   .4314006    -1.65   0.099    -1.556472    .1345876
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OR

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.182561    .475786    -2.49   0.013    -2.115084   -.2500376
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: HI

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.159746   .4490313    -2.58   0.010    -2.039831   -.2796607
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OK

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.082971   .4928489    -2.20   0.028    -2.048938   -.1170052
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: KS

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.251435   .4820633    -2.60   0.009    -2.196262   -.3066082
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MN

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.579344   .4743477    -3.33   0.001    -2.509048   -.6496396
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: WI

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.251323   .4979662    -2.51   0.012    -2.227319   -.2753277
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: IL

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.060551   .3990363    -2.66   0.008    -1.842648   -.2784538
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: OH

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.226404   .4425744    -2.77   0.006    -2.093834   -.3589737
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NC

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.224889   .4839776    -2.53   0.011    -2.173468   -.2763105
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: VA

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.312042   .4802514    -2.73   0.006    -2.253317   -.3707666
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MD

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.187659   .4812667    -2.47   0.014    -2.130924   -.2443933
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: DE

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -.8650135   .4277987    -2.02   0.043    -1.703484   -.0265435
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: PA

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.084513   .4734543    -2.29   0.022    -2.012467   -.1565599
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NJ

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.219113   .4844524    -2.52   0.012    -2.168622   -.2696035
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: NY

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.138055   .5774413    -1.97   0.049    -2.269819   -.0062904
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: CT

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |   -.857389   .4857053    -1.77   0.078    -1.809354    .0945759
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: RI

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.179169    .464682    -2.54   0.011    -2.089929   -.2684087
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: MA

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.455078   .4979397    -2.92   0.003    -2.431022   -.4791344
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: VT

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.146422   .4684292    -2.45   0.014    -2.064526   -.2283174
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
State: ME

 ( 1)  EIxPostxold = 0

------------------------------------------------------------------------------
       stock |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
         (1) |  -1.178083   .4714752    -2.50   0.012    -2.102157   -.2540083
------------------------------------------------------------------------------
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
.         label values n n
.         #delimit ;
delimiter now ;
.         twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
>         xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
>         ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
>         yscale(range(-3 1)) ylabel(-3(1)1)
>         ;
.         #delimit cr
delimiter now cr
.         graph export ../Figures/FigureB3_b.pdf, replace as(pdf)
(file ../Figures/FigureB3_b.pdf written in PDF format)
. 
. } // end run3D IF code

. 
. /// 3. INDIVIDUAL LEVEL ANALYSIS
> if "$runINDIV" == "yes" {
. 
. use ./stata_data/IndivAnalysisDataset.dta, clear
. tsset nameid year, yearly
. gen oldXpost = old*post
. gen LEI = L.EI
. gen EIxPost = EI*post
. gen LEIxPost = L.EI*post
. gen avgxPost = avg*post
. label variable EI "ET-state"
. label variable LEI "ET-state(t-1)"
. label variable avg "PIT"
. label variable EIxPost "ET-state X post-`postyear'"
. label variable LEIxPost "ET-state(t-1) X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. 
. 
. /// INDIVIDUAL LEVEL SUMMARY STATISTICS
> 
. ***********************************************************************
. ***Table B3, Panel A -- Individual-by-Year Observations, 1982 - 2017***
. ***********************************************************************
. 
. eststo clear
. estpost sum Age_num wealth, detail
. esttab using "../Tables/TableB3_a.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median)) sd(
> fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label 
. 
. sum Age_num if year>`postyear', detail
. local median = r(p50)
. 
. ***********************************************************
. ***Table B3, Panel B -- Distribution of Net Worth (2017)***
. ***********************************************************
. preserve
. gen NetWorthBill = NetWorthMill/1000
. keep if year==2017
. gen rowlabel = "Net Worth (bill)"
. tabout rowlabel using "../Tables/TableB3_b.tex", style(tex) h2(nil) bt ///
> replace sum cells(p1 NetWorthBill p10 NetWorthBill p25 NetWorthBill p50 NetWorthBill p75 ///
> NetWorthBill p90 NetWorthBill p99 NetWorthBill) f(1 1 1 1 1 1 1) oneway clab(1st 10th 25th 50th 75th 90th 99th) ptotal(none)
. restore
. 
. *******************************************************************
. ***Figure B2: Average Wealth of Forbes 400 Sample (1982 to 2017)***
. *******************************************************************
. 
. preserve
. collapse (mean) wealth NetWorthMill (count) nameid, by(year)
. gen NetWorthBill = NetWorthMill/1000
. label variable NetWorthBill "Nominal"
. label variable wealth "Real (2017 $)"
. twoway bar nameid year, ytitle("Count") graphregion(color(white)) 
. twoway line wealth NetWorthBill year, ytitle("Billions ($)") graphregion(color(white)) ylabels(0(1)7) lpattern(solid dash) lwidth(thic
> k .) lcolor(navy red)
. graph export ../Figures/FigureB2.pdf, replace as(pdf)
. restore
. 
. ************************************************************************************
. ***Figure 4: Impact of Billionaire Death on State Estate Tax Revenues Event Study***
. ************************************************************************************
. 
. preserve
. import excel using ../data/raw_data/ForbesDeaths2.xlsx, firstrow clear sheet(Table_For_Export)
. drop Notes ResidenceStateForbes
. rename YearofDeath death_year
. rename StateofDeath state_of_death
. drop if death_year==.
. tempfile deaths
. save `deaths', replace
. restore
. 
. preserve
. merge 1:1 Name year using `deaths', keep(1 3)
. gen death = (_merge==3)
. drop _merge
. 
. gen tag3 = (death==1)
. gen tag4 = (death==1 & death_married==0)
. 
. collapse (sum) tag*, by(ResidenceStateObituary death_year)
. rename ResidenceStateObituary abbr
. 
. rename death_year year
. keep if -tag3<0
. 
. tempfile deathcounts
. save `deathcounts'
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. drop _merge
. merge 1:1 abbr year using `deathcounts', keep(1 3) nogen
. tsset statenum year, yearly
. 
. replace tag4 = 0 if tag4==. 
. replace tag4 = 1 if -tag4<-1
. replace tag4 = 0 if year>2004 & EI==0
. gen dtag4 = D.tag4 
. 
. replace EI_Tax = 0 if EI_Tax==.
. replace EI_Tax = (EI_Tax/cpi)/1000 //convert to millions
. gen Post = (year>`postyear')
. capture drop cEI_Tax* eventtime b b_*
. gen eventtime = .
. gen b = .
. gen b_lb = .
. gen b_ub = .
. 
. 
. 
. foreach h of num 1/5 {
  2.   gen cEI_TaxL`h' = 0
  3. 
.   replace cEI_TaxL`h' = (L`h'.EI_Tax)
  4.   xtreg cEI_TaxL`h' i.year tag4, fe
  5. 
.   local i = 6-`h'
  6.   replace eventtime = -`h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10.   
. }
. 
. foreach h of num 0/12 {
  2.   gen cEI_TaxF`h' = 0
  3. 
.   replace cEI_TaxF`h' = (F`h'.EI_Tax)
  4.   xtreg cEI_TaxF`h' i.year tag4, fe
  5. 
.   local i = 6 + `h'
  6.   replace eventtime = `h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10. }
. 
. ***Exporting Figure 4***
. #delimit ;
delimiter now ;
. twoway 
>         (connected b eventtime if eventtime<=-1, color(black))  (connected b eventtime if eventtime>=-1 & eventtime<6, color(black) )
>         (line b_lb eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_lb eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash))
>         (line b_ub eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_ub eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash)), 
>                 legend(off) ytitle(State E&I Tax Revenues (Millions of 2017 $)) xtitle(Years Since Death (t=0)) yscale(range(0 250)) y
> label(0 50 100 150 200 250, nogrid)
>                 yline(99,lcolor(gs10)) graphregion(color(white)) plotregion(color(white))
> ;
. #delimit cr
delimiter now cr
. graph export ../Figures/Figure4.pdf, replace as(pdf)
. 
. *******************************************************************************************
. ***Figure 3: Impact of Billionaire Death on State Estate Tax Revenues - Two Case Studies***
. *******************************************************************************************
. 
. twoway connected EI_Tax year if abbr=="OK", xline(2003, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../Figures/Figure3_b.pdf, replace as(pdf)
. 
. twoway connected EI_Tax year if abbr=="AR", xline(1995, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../Figures/Figure3_a.pdf, replace as(pdf)
. 
. restore
. 
. 
. 
. /// FALSIFICATION TEST: PROB OF CHOOSING HIGH-MTR STATE
> **********************************************************************
. ***Figure B4: Probability of Living in High Income Tax State by Age***
. **********************************************************************
. 
. gen Age_num_trunc = Age_num
. 
. replace Age_num_trunc = 85 if Age_num_trunc>=85 & Age_num_trunc~=.  //lumping together for graphing purposes
. 
. gen highMTR = (avg > .03)
. 
. binscatter highMTR Age_num_trunc if Age_num>40 & year<=2001, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 4
> 5 50 55 60 65 70 75 80 85 "85+")  ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
. graph export ../Figures/FigureB4_a.pdf, replace as(pdf)
. 
. binscatter highMTR Age_num_trunc if Age_num>40 & year>=2005, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 4
> 5 50 55 60 65 70 75 80 85 "85+") ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
. graph export ../Figures/FigureB4_b.pdf, replace as(pdf)
. 
. 
. 
. ****************************************************************
. ***Figure 6: Probability of Living in Estate Tax State By Age***
. ****************************************************************
. 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==0, discrete reportreg yscale(range(0 .55)) xlabel(40 45 50 55 60 65 70 75 80 8
> 5 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("Age") 
. graph export ../Figures/Figure6_a.pdf, replace as(pdf)
. 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==1, discrete reportreg yscale(range(0 .55)) xlabel(40 45 50 55 60 65 70 75 80 8
> 5 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("Age") 
. graph export ../Figures/Figure6_b.pdf, replace as(pdf)
. 
. 
. ***********************************************************************************
. *** Table 4: Linear Probability Model: Probability of Living in Estate Tax State***
. ***********************************************************************************
. 
. eststo highMTR_age4: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum year)
. estadd local stateFE     "Yes",   replace:   highMTR_age4
. estadd local indivFE     "No",   replace:   highMTR_age4
. estadd local yearFE      "Yes",   replace:   highMTR_age4
. 
. eststo EI_age1: ivreg2 EI Age_num i.year if post==0, dkraay(2)  partial(i.year)
. estadd local stateFE     "No",   replace:   EI_age1
. estadd local indivFE     "No",   replace:   EI_age1
. estadd local yearFE      "Yes",   replace:   EI_age1
. 
. 
. eststo EI_age2: ivreg2 EI Age_num i.year if post==1, dkraay(2) partial(i.year)
. estadd local stateFE     "No",   replace:   EI_age2
. estadd local indivFE     "No",   replace:   EI_age2
. estadd local yearFE      "Yes",   replace:   EI_age2
. 
. 
. eststo EI_age3: ivreg2 EI AgeXpost Age_num i.year, dkraay(2)  partial(i.year)
. estadd local stateFE     "No",   replace:   EI_age3
. estadd local indivFE     "No",   replace:   EI_age3
. estadd local yearFE      "Yes",   replace:   EI_age3
. 
. eststo EI_age4: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. estadd local stateFE     "Yes",  replace:   EI_age4
. estadd local indivFE     "No",   replace:   EI_age4
. estadd local yearFE      "Yes",   replace:   EI_age4
. 
. 
. eststo EI_age5: ivreg2 EI AgeXpost Age_num i.statenum i.year i.nameid, dkraay(2)  partial(i.statenum i.year i.nameid)
. estadd local stateFE     "Yes",   replace:   EI_age5
. estadd local indivFE     "Yes",   replace:   EI_age5
. estadd local yearFE      "Yes",   replace:   EI_age5
. 
. 
. 
. local py1 = `postyear'+1
. if `postyear'==2001 {
.         local py1 = 2003  //no data in 2002
. }
. 
. #delimit ;
delimiter now ;
. esttab EI_age1 EI_age2 EI_age3 EI_age4 EI_age5 highMTR_age4 
>      using ../Tables/Table4.tex, replace se scalars(yearFE stateFE indivFE) mtitle("1982-`postyear'" "`py1'-2017" "1982-2017" "1982-20
> 17" "1982-2017" "High MTR") 
>      noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" indivFE "Individual Fixed Ef
> fects") star(* 0.1 ** 0.05 *** 0.01 )
>          postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors (in parentheses).} \\" 
>          "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. 
. *************************************************************
. ***Table B6: Robustness, Panel C. Linear Probability Model***
. *************************************************************
. 
. preserve
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>100     
. eststo EI_age10: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>200     
. eststo EI_age11: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>300     
. eststo EI_age12: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. eststo EI_age13: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
. #delimit ;
delimiter now ;
. esttab EI_age10 EI_age11 EI_age12 EI_age13
>         using ../Tables/TableB6_c.tex, replace se mtitle("Top 100" "Top200" "Top300" "10+ Obs" ) /*drop(*year *cons)*/
>         noconstant label compress substitute(\_ _ ) star(* 0.1 ** 0.05 *** 0.01 )
>         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors in parentheses.} \\" 
>         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. restore
. 
. **************************************************************************************************************
. ***Figure 7: Estimated Age Gradient for Probability of Living in Estate Tax State, Year-by-Year Regressions***
. **************************************************************************************************************
. 
. gen y = _n + 1981 if _n <= 2017 - 1981
. label variable y "year"
. gen b = .
. gen b_lb = .
. gen b_ub = .
. 
. foreach y of num 1982/2001 2003/2017 {
  2.         qui ivreg2 EI Age_num_trunc if Age_num_trunc>40  & year==`y', cluster(stateyear)
  3.         replace b = _b[Age_num] if _n==`y'-1981
  4.         replace b_lb = _b[Age_num] - 1.65*_se[Age_num] if _n==`y'-1981
  5.         replace b_ub = _b[Age_num] + 1.65*_se[Age_num] if _n==`y'-1981
  6. }
. 
. #delimit ;
delimiter now ;
. egen pretrend = mean(b) if y<2002;
. egen posttrend = mean(b) if y>2002;
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrend posttrend y, lcolor(maroon maroon) lpattern(dash 
> dash))
>         if y<=2017, xline(`postyear'(.1)2004, lwidth(thick) lcolor(gs15)) xline(2001, lcolor(black)) graphregion(color(white)) plotreg
> ion(color(white)) legend(off) 
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. graph export ../Figures/Figure7.pdf, replace as(pdf);
. #delimit cr
delimiter now cr
. 
. }  //end runINDIV IF code

. 
. /// 4. ANALYSES OF MOVERS
> if "$runMOVERS" == "yes" {
. use ./stata_data/IndivAnalysisDataset.dta, clear
. 
. sort nameid year
. keep nameid year abbr EI Age_num
. reshape wide abbr EI Age_num, i(nameid) j(year)
. gen one=1
. 
. preserve
. drop if abbr2001 == ""  //keep only individuals observed in 2001 (N=376)
. 
. local startyr = 2001
. 
. 
. matrix A = J(9,2009-`startyr'-1 + 8,.)
. matrix colnames A=1993 1994 1995 1996 1997 1998 1999 2000 2003 2004 2005 2006 2007 2008 2009
. 
. matrix rownames A="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. 
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1993/2000 {
  4.                 
.                 local j = `endyr'-1992
  5.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
  6.                 local num_E`startyr' = r(N)
  7.         
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
  8.                 local num_E`startyr'_N`endyr' = r(N)
  9.                 
.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 10.                 matrix A[`m'+1,`j'] = `row1'
 11.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 12.                 local num_N`startyr' = r(N)
 13.         
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 14.                 local num_N`startyr'_E`endyr' = r(N)
 15.                 
.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 16.                 matrix A[`m',`j'] = `row2'
 17. 
.                 local row3_`endyr' = `row2' - `row1'
 18.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 19. 
.                 
.         }
 20.         foreach endyr of num 2003/2009 {
 21.                 
.                 local j = `endyr'-2002 + 8 
 22.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
 23.                 local num_E`startyr' = r(N)
 24.         
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 25.                 local num_E`startyr'_N`endyr' = r(N)
 26.                 
.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 27.                 matrix A[`m',`j'] = `row1'
 28.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 29.                 local num_N`startyr' = r(N)
 30.         
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 31.                 local num_N`startyr'_E`endyr' = r(N)
 32.                 
.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 33.                 matrix A[`m'+1,`j'] = `row2'
 34. 
.                 local row3_`endyr' = `row1' - `row2'
 35.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 36. 
.         }
 37. }
. matrix list A
. matrix A1 = A[1..3,1..15]
. matrix A2 = A[4..6,1..15]
. matrix A3 = A[7..9,1..15]
. 
. foreach i of num 1/3 {
  2.         clear
  3.         svmat A`i'
  4.         gen type = _n
  5.         reshape long A`i', i(type) j(year)
  6.         replace year = year+1992
  7.         replace year = year+2 if year>=2001
  8.         tempfile A`i'
  9.         save `A`i''
 10. }
. merge 1:1 type year using `A1', keep(3) nogen
. merge 1:1 type year using `A2', keep(3) nogen
. rename A1 all
. rename A2 over64
. rename A3 under65
. gen flow = "fromET" if type==1
. replace flow = "toET" if type==2
. replace flow = "Difference" if type==3
. drop type
. reshape wide all over64 under65, i(year) j(flow) string
. insobs 1
. replace year=2001 if year==.
. sort year
. 
. *************************************************************************
. ***Figure 8: Probability of Moving Between ET States and Non-ET States***
. *************************************************************************
. 
. ***Panel A: All***
. twoway connected allfromET alltoET year if inrange(year,1993,2009), legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to
>  ET") rows(1) )  graphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 1
> 5 20 25 30 35 40 45, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t)) yline(0,
>  lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../Figures/Figure8_a.pdf, replace as(pdf)
. 
. ***Panel B: 65 and Over***
. twoway connected over64fromET over64toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  gra
> phregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45,
>  nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t)) yline(0, lcolor(gs12)) xlabe
> l(1993(2)2009)
. graph export ../Figures/Figure8_b.pdf, replace as(pdf)
. 
. ***Panel C. Under 65***
. twoway connected under65fromET under65toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  g
> raphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 4
> 5, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t)) yline(0, lcolor(gs12)) xla
> bel(1993(2)2009)
. graph export ../Figures/Figure8_c.pdf, replace as(pdf)
. 
. restore
. 
. 
. }   //end runMOVERS section

. 
. /// 5. COST-BENEFIT ANALYSIS
> if "$runCB" == "yes" { 
. 
.         matrix R1 = J(11,6,.)
.         matrix colnames R1="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
.         matrix rownames R1= "ET_States_(10)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(28)" "Average_CB_ratio" "Nu
> mber_with_CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(38)"
.         matrix R2 = R1
.         matrix colnames R2="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
.         matrix rownames R2="ET_States_(14)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(36)" "Average_CB_ratio" "Num
> ber_with_CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(50)"
.         local col = 0
. 
.         foreach scenario in baseline alt1 alt2 alt3 alt4 alt5 {
  2. 
.                 local col = `col'+1
  3.                 /// locals and scalars for baseline scenario:
>                 local t = 2017
  4.                 scalar eta = 0.373              //DiD table, column 6 (wealth elasticity)
  5.                 local tauE = 0.16
  6.                 scalar eta0 = 0.00186           //from column 3 Table 4
  7. 
.                 scalar delta = 0.00320  //estimated age gradient -- column 3 of Table 4
  8.                 local LP = 89.783/82.585  //Male life exp of someone at 100th percentile income relative to 50th percentile income 
> from Chetty et al (2016 JAMA)
  9.                 local r = 0.02
 10.                 local g = 1
 11.                 local spouse = 0
 12.                 preserve
 13.                 use ./stata_data/IndivAnalysisDataset.dta, clear
 14.                 sum wealth if year==2017, detail
 15.                 restore
 16.                 local W = r(mean)*1000*(8.25/16)
 17.                 local Y = `W'*0.103  //0.103 is ratio of taxable income to taxable estate values according to IRS SOI (08es03lk.xls
> )
 18. 
. 
.                 /// set locals and scalars for each scenario
>                 if "`scenario'" == "alt1" {
 19.                         local g = 1.070  //annual growth rate of real wealth in Fig 1
 20.                 }       
 21.                 if "`scenario'" == "alt2" {
 22.                         local spouse = 10
 23.                 }       
 24.                 if "`scenario'" == "alt3" {
 25.                         local r = 0.01
 26.                 }       
 27.                 if "`scenario'" == "alt4" {
 28.                         local r = 0.03
 29.                 }       
 30.                 if "`scenario'" == "alt5" {
 31.                         local Y = 159*(245.134/236.715)  //Saez-Zucman (2019) estimate of mean gross income for top 400 income taxp
> ayers in 2014 (in millions, adjusted to 2017 dollars)
 32.                 }       
 33. 
. 
.                 *** Note: cost is upper bound b/c:
.                 ***             1. forbes 400 likely to have taxable income below that of top 400 income-tax payers (due to shelters)
.                 ***     2. we're assuming all of Y is taxed at state's avg of top MTR on wages/salaries and LTCG; true effective rate 
> may be lower
.                 ***     3. we're assuming lost billionaires live another 29 years. median age of EI-sensitive billionaires is older, l
> ike 74, and so T is more like 24.
.                 *** But could be lower bound b/c:
.                 ***     1. ignores property and sales tax revenues from lost billionaires
. 
. 
.                 /// NOW ALLOW FOR AGE HETEROGENEITY
>                 use ./stata_data/StateyearAgeAnalysisDataset.dta, clear
 34.                 egen stateage = group(abbr Age_num)
 35.                 tsset stateage year, yearly
 36.                 gen EInextyear = EI
 37.                 if `t' == 2001 {
 38.                         replace EInextyear = F.EI 
 39.                 }
 40.                 keep if year==`t'
 41. 
.                 qui {
 42.                         /// Set T by age according to IRS Pub 590-B, Appendix B, Tables I (age<30) and II (30<=age<70), assuming sp
> ouse 10 years younger, and III for age>=70 (which appears to assume spouse is 10 years younger) :
>                         gen T = 82.04 if Age_num==0
 43.                         replace T = 81.6 + 10 if Age_num==1
 44.                         replace T = 75.8 + 10 if inrange(Age_num,5,9)
 45.                         replace T = 70.8 + 10 if inrange(Age_num,10,14)
 46.                         replace T = 66 + 10 if inrange(Age_num,15,19)
 47.                         replace T = 61.1 + 10 if inrange(Age_num,20,24)
 48.                         replace T = 56.2 + 10 if inrange(Age_num,25,29)
 49.                         replace T = 64.3 if inrange(Age_num,30,34)
 50.                         replace T = 59.4 if inrange(Age_num,35,39)
 51.                         replace T = 54.4 if inrange(Age_num,40,44)
 52.                         replace T = 49.5 if inrange(Age_num,45,49)
 53.                         replace T = 44.6 if inrange(Age_num,50,54)
 54.                         replace T = 39.7 if inrange(Age_num,55,59)
 55.                         replace T = 34.9 if inrange(Age_num,60,64)
 56.                         replace T = 30.2 if inrange(Age_num,65,69)
 57. 
.                         replace T = 27.4 if Age_num==70
 58.                         replace T = 26.5 if Age_num==71
 59.                         replace T = 25.6 if Age_num==72
 60.                         replace T = 24.7 if Age_num==73
 61.                         replace T = 23.8 if Age_num==74
 62.                         replace T = 22.9 if Age_num==75
 63.                         replace T = 22.0 if Age_num==76
 64.                         replace T = 21.2 if Age_num==77
 65.                         replace T = 20.3 if Age_num==78
 66.                         replace T = 19.5 if Age_num==79
 67.                         replace T = 18.7 if Age_num==80
 68.                         replace T = 17.9 if Age_num==81
 69.                         replace T = 17.1 if Age_num==82
 70.                         replace T = 16.3 if Age_num==83
 71.                         replace T = 15.5 if Age_num==84
 72.                         replace T = 14.8 if Age_num==85
 73.                         replace T = 14.1 if Age_num==86
 74.                         replace T = 13.4 if Age_num==87
 75.                         replace T = 12.7 if Age_num==88
 76.                         replace T = 12.0 if Age_num==89
 77.                         replace T = 11.4 if Age_num==90
 78.                         replace T = 10.8 if Age_num==91
 79.                         replace T = 10.2 if Age_num==92
 80.                         replace T = 9.6 if Age_num==93
 81.                         replace T = 9.1 if Age_num==94
 82.                         replace T = 8.6 if Age_num==95
 83.                         replace T = 8.1 if Age_num==96
 84.                         replace T = 7.6 if Age_num==97
 85.                         replace T = 7.1 if Age_num==98
 86.                         replace T = 6.7 if Age_num==99
 87.                         replace T = 6.3 if Age_num==100
 88.                         replace T = 5.9 if Age_num==101
 89.                         replace T = 5.5 if Age_num==102
 90.                         replace T = 5.2 if Age_num==103
 91.                         replace T = 4.9 if Age_num==104
 92.                         replace T = 3.5 if Age_num>105
 93.                 }
 94. 
.                 /// Adjust T by Chetty et al longevity premium for wealthy
>                 replace T = T*`LP' + `spouse'
 95. 
.                 replace wealth = wealth*1000   //convert to millions
 96. 
.                 gen cost = 0
 97.                 levelsof Age_num, local(agelevels)
 98.                 foreach a of local agelevels {
 99.                         preserve
100.                         keep if Age_num == `a'
101.                         qui sum T
102.                         local T = int(round(r(mean)))
103.                         foreach i of num 1/`T' {
104.                                 qui replace cost = cost + (1/(1+`r'))^(`i')*(`Y'*(`g'^`i'))*(eta0 + delta*`a')*(avg/100)*stock
105.                         }
106.                         tempfile age`a'
107.                         save `age`a''
108.                         restore
109.                 }
110.                 
.                 clear
111.                 foreach a of local agelevels {
112.                         if `a' ~= 0 append using `age`a'' 
113.                 }
114. 
.                 gen benefit = (1/(1+`r'))^(T)*(`W'*(`g'^T))*(1-(eta0 + delta*Age_num))*`tauE'*stock
115.                 
.                 ****************************************************************************************************
.                 ***Table B7: Cost-Benefit Results Under Alternative Assumptions (Panel A: Billionaire Estate Tax)***
.                 ****************************************************************************************************
.                 
.                 gcollapse (sum) cost benefit stock wealth (mean) EInextyear avg, by(State abbr)
116.                 gen CBratio = cost/benefit
117. 
.                 sum CBratio
118.                 matrix R1[10,`col'] = r(mean)
119.                 sum CBratio if CBratio>=1
120.                 matrix R1[11,`col'] = r(N)
121.                 sum CBratio if EInextyear==1
122.                 matrix R1[2,`col'] = r(mean)
123.                 sum CBratio if EInextyear==1 & CBratio>=1
124.                 matrix R1[3,`col'] = r(N)
125.                 sum CBratio if EInextyear==0
126.                 matrix R1[6,`col'] = r(mean)
127.                 sum CBratio if EInextyear==0 & CBratio>=1
128.                 matrix R1[7,`col'] = r(N)
129.                 outtable using "../Tables/TableB7_a", mat(R1) replace center  format(%3.2f)
130. 
.                 rename abbr state
131. 
. 
.                 gen net_revenues = (benefit - cost)
132.                 
.                 *******************************************************************
.                 ***Table 6: Cost-Benefit Calculations for Billionaire Estate Tax***
.                 *******************************************************************
.                 
.                 if "`scenario'" == "baseline"{
133.                         foreach x of num 0 1 {
134.                                 if `x' { //Panel A. States w/ Estate Tax
135.                                 #delimit ;
delimiter now ;
.                                 tabout State using "../Tables/Table6_a.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0c 2 2 0c) 
>                                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax
>  Rate&Cost/Benefit&from Adopting (mil)\\) total(Average);
136.                                 #delimit cr
delimiter now cr
.                                 }
137.                                 else{ //Panel B. States w/out Estate Tax
138.                                 #delimit ;
delimiter now ;
.                                 tabout State using "../Tables/Table6_b.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0c 2 2 0c) 
>                                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax
>  Rate&Cost/Benefit&from Adopting (mil)\\) total(Average);
139.                                 #delimit cr
delimiter now cr
.                                 }
140.                         }
141.                 }
142. 
.                 eststo clear
143. 
. 
.                 /// COMPUTE CB RATIOS FOR ALL POTENTIAL ESTATE TAX PAYERS
>                 import excel using ./raw_data/15es02st.xls, clear cellrange(A9:I59)
144.                 keep A C
145.                 rename A statename
146.                 rename C amount
147.                 gen year = 2015
148.                 tempfile soi15
149.                 save `soi15'
150.                 import excel using ./raw_data/16es02st.xls, clear cellrange(A9:I59)
151.                 keep A C
152.                 rename A statename
153.                 rename C amount
154.                 gen year = 2016
155.                 tempfile soi16
156.                 save `soi16'
157.                 import excel using ./raw_data/17es02st.xls, clear cellrange(A9:I59)
158.                 keep A B C
159.                 rename A statename
160.                 rename B number
161.                 rename C amount
162.                 destring amount, replace force
163.                 destring number, replace force
164.                 gen year = 2017
165.                 
.                 ******************************************************************
.                 ***Figure B5: Number of Federal Estate Taxpayers by State, 2017***
.                 ******************************************************************
.                 
.                 if "`scenario'"=="baseline" {
166.                         preserve
167.                         import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
168.                         rename State statename
169.                         rename abbr state
170.                         keep state statename
171.                         tempfile mapping
172.                         save `mapping'
173.                         restore
174.                         merge 1:1 statename using `mapping', nogen keep(1 3) 
175.                         maptile number, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 50 100 200 500 1000) twopt(legend(lab(2 
> "0") lab(3 "1 - 50") ))
176.                         graph export ../Figures/FigureB5.pdf, replace as(pdf)
177.                         drop number state
178.                 }
179.                 
.                 append using `soi15'
180.                 append using `soi16'
181.                 collapse (mean) amount, by(statename)
182.                 tempfile soi
183.                 save `soi'
184. 
. 
.                 use ./stata_data/StateyearAnalysisDataset.dta, clear
185.                 gen EInextyear = EI
186.                 keep if year==2017
187. 
.                 merge 1:1 statename using `soi', keep(1 3) nogen
188. 
.                 scalar natlW_U70 = 30529954/1000
189.                 scalar natlW_7079 = 33297568/1000
190.                 scalar natlW_O79 = 53305929/1000
191.                 scalar natlW = natlW_U70 + natlW_7079 + natlW_O79 
192. 
.                 /// set prob of death equal to mortality rates from SSA for mean age in forbes for each group, taking 75/25 weighted a
> vg of male and female rates
>                 scalar prob_death_U70 = .75*0.013302 + .25*0.007893     //62yr old 
193.                 scalar prob_death_7079 = .75*0.030070 + .25*0.020705    //73yr old 
194.                 scalar prob_death_O79 = .75*0.107390 + .25*0.082465             //86yr old 
195.                 /// adjust using mortality differential for top 1% from Fig 3 of Saez-Zucman (2019)
>                 scalar prob_death_U70 =  prob_death_U70*.3
196.                 scalar prob_death_7079 = prob_death_7079*.5
197.                 scalar prob_death_O79 = prob_death_O79*.7  //see fig 3 of SZ 2019
198. 
.                 scalar natl_YW_ratio_U70 = 0.103                //see 08es03lk.xls
199.                 scalar natl_YW_ratio_7079 = 0.071
200.                 scalar natl_YW_ratio_O79 = 0.058
201. 
. 
.                 ///merge in estate values from IRS SOI for 2015-2017; average by state
>                 gen W_U70 = (amount/1000)*(natlW_U70/natlW)/prob_death_U70 
202.                 gen W_7079 = (amount/1000)*(natlW_7079/natlW)/prob_death_7079 
203.                 gen W_O79 = (amount/1000)*(natlW_O79/natlW)/prob_death_O79
204.                 gen Y_U70 = W_U70*(natl_YW_ratio_U70) 
205.                 gen Y_7079 = W_7079*(natl_YW_ratio_7079) 
206.                 gen Y_O79 = W_O79*(natl_YW_ratio_O79)
207. 
.                 scalar tauE = 0.16*(.25/.40)  // .25 is federal estate ATR, .4 is federal statutory top MTR, so this accounts for prog
> ressivity
208. 
.                 local T_U70 = 31.6*`LP' + `spouse'
209.                 local T_7079 = 22.9*`LP'+ `spouse'
210.                 local T_O79 = 14.8*`LP'+ `spouse'
211. 
.                 local etaBaseU70 = eta0 + delta*62
212.                 local etaAltU70 = `etaBaseU70'/2
213.                 local etaBase7079 = eta0 + delta*73
214.                 local etaAlt7079 = `etaBase7079'/2
215.                 local etaBaseO79 = eta0 + delta*86
216.                 local etaAltO79 = `etaBaseO79'/2
217. 
.                 rename abbr state
218.                 foreach j in Base Alt {
219.                         gen cost_`j'U70 = 0
220.                         foreach i of num 1/`T_U70' {
221.                                 replace cost_`j'U70 = cost_`j'U70 + (1/(1+`r'))^(`i')*(Y_U70*(`g'^`i'))*`eta`j'U70'*(avg/100)
222.                         }
223.                         gen benefit_`j'U70 = (1/(1+`r'))^(`T_U70')*(W_U70*(`g'^`T_U70'))*(1-`eta`j'U70')*tauE
224.                         gen cost_`j'7079 = 0
225.                         foreach i of num 1/`T_7079' {
226.                                 replace cost_`j'7079 = cost_`j'7079 + (1/(1+`r'))^(`i')*(Y_7079*(`g'^`i'))*`eta`j'7079'*(avg/100)
227.                         }
228.                         gen benefit_`j'7079 = (1/(1+`r'))^(`T_7079')*(W_7079*(`g'^`T_7079'))*(1-`eta`j'7079')*tauE
229.                         gen cost_`j'O79 = 0
230.                         foreach i of num 1/`T_O79' {
231.                                 replace cost_`j'O79 = cost_`j'O79 + (1/(1+`r'))^(`i')*(Y_O79*(`g'^`i'))*`eta`j'O79'*(avg/100)
232.                         }
233.                         gen benefit_`j'O79 = (1/(1+`r'))^(`T_O79')*(W_O79*(`g'^`T_O79'))*(1-`eta`j'O79')*tauE
234. 
.                         gen CBratio`j' = (cost_`j'U70+cost_`j'7079+cost_`j'O79)/(benefit_`j'U70+benefit_`j'7079+benefit_`j'O79)
235.                         gen net_revenues`j' = benefit_`j'U70+benefit_`j'7079+benefit_`j'O79 - (cost_`j'U70+cost_`j'7079+cost_`j'O79
> )
236.                 }
237.                 
.                 *************************************************************
.                 ***Table 7: Cost-Benefit Calculations for Broad Estate Tax***
.                 *************************************************************
. 
.                 if "`scenario'" == "baseline"{
238. 
.                         foreach x of num 0 1 {
239.                                 if `x' {  //Panel A: States w/ Estate Tax
240.                                 #delimit ;
delimiter now ;
.                                 tabout State using "../Tables/Table7_a.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                                 cells(mean avg mean CBratioBase mean net_revenuesBase mean CBratioAlt mean net_revenuesAlt) f(2 2 0c 2
>  0c)
>                                 oneway h3(& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower
>  Elasticity}}\\ &Personal Income & &EPV Net Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit
> &from Adopting (mil)\\) total(Average);
241.                                 #delimit cr
delimiter now cr
.                                 }
242.                                 else{ //Panel B: States w/out Estate Tax
243.                                 #delimit ;
delimiter now ;
.                                 tabout State using "../Tables/Table7_b.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                                 cells(mean avg mean CBratioBase mean net_revenuesBase mean CBratioAlt mean net_revenuesAlt) f(2 2 0c 2
>  0c)
>                                 oneway h3(& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower
>  Elasticity}}\\ &Personal Income & &EPV Net Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit
> &from Adopting (mil)\\) total(Average);
244.                                 #delimit cr
delimiter now cr
.                                 }
245.                         }
246.                 }
247.                 
.                 **********************************************************************************************
.                 ***Table B7: Cost-Benefit Results Under Alternative Assumptions (Panel B: Broad Estate Tax)***
.                 **********************************************************************************************
. 
.                 sum CBratioBase
248.                 matrix R2[10,`col'] = r(mean)
249.                 sum CBratioBase if CBratioBase>=1
250.                 matrix R2[11,`col'] = r(N)
251.                 sum CBratioBase if EInextyear==1
252.                 matrix R2[2,`col'] = r(mean)
253.                 sum CBratioBase if EInextyear==1 & CBratioBase>=1
254.                 matrix R2[3,`col'] = r(N)
255.                 sum CBratioBase if EInextyear==0
256.                 matrix R2[6,`col'] = r(mean)
257.                 sum CBratioBase if EInextyear==0 & CBratioBase>=1
258.                 matrix R2[7,`col'] = r(N)
259. 
.                 outtable using "../Tables/TableB7_b", mat(R2) replace center format(%3.2f)
260. 
. 
.                 drop cost_* benefit_* CBratio* net_revenues*
261.         
.         }  //end scenario loop
. 
. } //end runCB IF code

. 
. /// 6. TABLE OF LEVELS AND CHANGES BY STATE
> if "$runCOUNTS_BY_STATE" == "yes" {
. 
. ****************************************
. ***Table 1: Forbes 400 by State, 2017***
. ****************************************
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth EI year State
. reshape wide stock pbwealth EI, i(State) j(year)
. gen stock_delta82_17 = stock2017 - stock1982
. gen stock_delta82_00 = stock2000 - stock1982
. gen stock_delta00_17 = stock2017 - stock2000
. 
. #delimit ;
delimiter now ;
. tabout State using "../Tables/Table1.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17 mean stock_delta82_00 mean stock_delta00_17) f(0 0 0 0 0)
>  
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change & 1982-2000 Change & 2000-2017 Change\\State & in 2017
> & in 2017 (mil) & in Forbes Population & in Forbes Population & in Forbes Population\\) total(Average);
. #delimit cr
delimiter now cr
. 
. *************************************************
. ***Figure 2: Population of Forbes 400 by State***
. *************************************************
. 
. preserve
. import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
. rename abbr state
. keep state State
. tempfile mapping
. save `mapping'
. restore
. merge 1:1 State using `mapping', nogen keep(1 3)
. maptile stock1982, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5")))
. graph export ../Figures/Figure2_a.pdf, replace as(pdf) //Panel A, 1982
. maptile stock2017, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5") ))
. graph export ../Figures/Figure2_b.pdf, replace as(pdf) //Panel B, 2017
. 
. ********************************************************************
. ***Table B4: Forbes 400 by Consolidated Metro Area (Top 40), 2017***
. ********************************************************************
. 
. use ./stata_data/IndivAnalysisDataset.dta, clear
. collapse (count) stock=nameid (sum) NetWorthMill, by(CAname year)
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth year CAname
. reshape wide  stock pbwealth, i(CAname) j(year)
. replace stock1982=0 if stock1982==.
. gen stock_delta82_17 = stock2017 - stock1982
. 
. gen neg_stock2017 = -stock2017
. sort neg_stock2017, stable
. 
. keep if _n <= 40
. replace CAname = subinstr(CAname," Combined Statistical Area","",.)
. replace CAname = subinstr(CAname," Metropolitan Statistical Area","",.)
. label variable CAname "City Name"
. #delimit ;
delimiter now ;
. tabout CAname using "../Tables/TableB4.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change\\City & in 2017& in 2017 (mil) & in Forbes Population\
> \) total(Average);
. #delimit cr
delimiter now cr
. 
. }

. 
end of do-file

. clear

. exi
