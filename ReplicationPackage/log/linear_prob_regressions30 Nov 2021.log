----------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  S:\dan\Paper - Forbes\ReplicationPackage\data\../log/linear_prob_regressions30 Nov 2021.log
  log type:  text
 opened on:  30 Nov 2021, 13:33:34

. 
. ///SET LOCALS AND GLOBALS
> local postyear = 2001

. ///     Set controls to empty set if no controls:
> *local controls pop_change gdp_change
. *local controls c.pop#1.old pop
. local controls

. *local drop_condition "drop if stock==0"
. local drop_condition "" 

. *local wealth logwealth
. local wealth wealth_normalized

. global BuildData "no"

. global run2D "no"

. global run3D "no"

. global runINDIV "yes"

. global runMOVERS "no"

. global runCB "no"

. global runCOUNTS_BY_STATE "no"

. 
. 
. if "$BuildData" == "yes" {
. 
. *set haverdir M:/Haver/DLX/DATA
. set haverdir C:\DLX\DATA
. 
. //Import state GDP data and create GDP change variable
. use "stata_data\gdp_inst.dta", clear 
. rename state abbr
. xtset fips year, yearly
. g gdp_change = 100*log(gdp-L1.gdp)
. tempfile stateGDP
. save `stateGDP'
. 
. //Import EI and Total tax revenues by state and year
. use "stata_data/EI_Tax.dta", clear
. rename Year year
. destring Total_Taxes, replace ignore(",")
. tempfile EI_Tax
. save `EI_Tax'
. 
. //Import population data and create population change variable
. import haver ??rbt@uspop, tvar(year) clear
. describe *uspop, varlist
. 
. foreach var in `r(varlist)' {
  2.         local tmp = strupper(substr("`var'", 1, 2))
  3.         di "`tmp'"
  4.         rename `var' pop`tmp'
  5. }
. 
. drop popC1 popC2 popC3 popC4 popC5 popC6 popC7 popC8 popC9
. drop popR1 popR2 popR3 popR4 
. drop popDC popPR
. drop if year < 1981
. reshape long pop, i(year) j(state) string
. rename state abbr
. egen id = group(abbr)
. xtset id year, yearly
. g pop_change = 100*log(pop-L1.pop)
. drop if year==1981
. 
. 
. /// ENTER EI INDICATOR
> gen EI = 0
. 
. /// From Conway & Rork (2004 NTJ), Table 1:
> replace EI = 1 if inlist(abbr,"AK","AL","GA","FL","AR","NV")==0 //ALL BUT 6 STATES HAD EI BEYOND PICK-UP TAX PRIOR TO 1976
. replace EI = 0 if abbr=="NM" & year>=1976
. replace EI = 0 if abbr=="UT" & year>=1977
. replace EI = 0 if abbr=="ND" & year>=1979
. replace EI = 0 if inlist(abbr,"AZ","VA","CO","VT") & year>=1980
. replace EI = 0 if abbr=="MO" & year>=1981
. replace EI = 0 if inlist(abbr,"CA","WA") & year>=1982
. replace EI = 0 if inlist(abbr,"IL","WY","TX") & year>=1983
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if inlist(abbr,"MN","ME") & year>=1986
. replace EI = 0 if abbr=="OR" & year>=1987
. replace EI = 0 if abbr=="ID" & year>=1988
. replace EI = 0 if abbr=="WV" & year>=1985
. replace EI = 0 if abbr=="RI" & year>=1991
. replace EI = 0 if inlist(abbr,"SC","WI") & year>=1992
. replace EI = 0 if abbr=="MI" & year>=1993
. replace EI = 0 if abbr=="MA" & year>=1997
. *replace EI = 0 if abbr=="KS" & year>=1998 //this says KS has estate tax continuing after 1998 when inheritance tax was repealed: http
> s://www.ksrevenue.org/taxnotices/notice10-07.pdf
. replace EI = 0 if inlist(abbr,"DE","NC") & year>=1999
. replace EI = 0 if inlist(abbr,"MS", "NY") & year>=2000 //from Conway-Rork. Though NY is unclear because of EI with no gift tax: https:
> //www.tax.ny.gov/pit/estate/etidx.htm
. replace EI = 0 if inlist(abbr,"SD","MT") & year>=2001
. 
. //from https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218...says HI replaced stand-alone I tax with pick-up tax in 1
> 983
. replace EI = 0 if abbr=="HI" & year>=1983
. 
. /// Some states from above list reinstated EI tax later on
> replace EI = 1 if abbr=="OR" & year>=2003 //https://olis.leg.state.or.us/liz/2019R1/Downloads/CommitteeMeetingDocument/159041
. replace EI = 1 if abbr=="VT" & year>=2004
. replace EI = 1 if abbr=="RI" & year>=2002 //http://www.tax.ri.gov/forms/2018/Estate/RI-100A_2002-2014_m2018.pdf
. replace EI = 1 if abbr=="DE" & inrange(year,2009,2017)
. replace EI = 1 if abbr=="IL" & year>=2009
. replace EI = 1 if abbr=="HI" & year>=2010 //https://www.thebalance.com/does-hawaii-collect-an-estate-tax-3505218
. replace EI = 1 if abbr=="NC" & year>=2002
. replace EI = 1 if abbr=="WA" & year>=2005 //(https://dor.wa.gov/sites/default/files/legacy/Docs/reports/2010/Tax_Reference_2010/06taxh
> istory.pdf)
. 
. replace EI = 1 if abbr=="WI" & inrange(year,2001,2007) //pick-up tax kept after EGTRRA, then repealed after 2007. https://www.wisbar.o
> rg/newspublications/wisconsinlawyer/pages/Article.aspx?Volume=80&Issue=12&ArticleID=1396
. replace EI = 1 if abbr=="VA" & inrange(year,2001,2006) //pick-up tax kept after EGTRRA, then repealed after 2006. https://www.mcplegal
> .com/practice-areas/trusts-estate-planning/taxes/
. replace EI = 1 if abbr=="ME" & year>=2013 //from MN study and verified at https://www.maine.gov/revenue/incomeestate/estate/index.htm
. replace EI = 1 if abbr=="MA" & year>=2001 //from https://www.mass.gov/guides/a-guide-to-estate-taxes
. replace EI = 1 if abbr=="MN" & year>=2001
. 
. replace EI = 0 if abbr=="KS" & year>2009 //KS estate tax repealed after 2009: https://www.ksrevenue.org/taxnotices/notice10-07.pdf
. 
. //NY: from https://www.tax.ny.gov/pit/estate/etidx.htm and http://riker.com/publications/significant-new-york-tax-legislation-replaces
> -current-estate-tax-with-a-pic
. //It seems NY replaced their EI tax with a pick-up tax in 2000 and they repealed their gift tax. Hence, one could avoid EI taxes by gi
> ving gifts before death. In April 2014, they brought back the gift tax.
. replace EI = 1 if abbr=="NY" & /*year>=2001*/ year>2014
. 
. ***************** CT PUT $20M CAP ON ESTATE TAX PAYMENT STARTING IN 2016 (REDUCED TO $15M IN 2019) ***************
. ***************** NOTE $20M WOULD BE THE ET BILL FOR A CT ESTATE WORTH $323M ($20M/(12%*(8.25/16)))
. ***************** ALSO NOTE THAT $20M ET BILL ON $1B CT ESTATE EQUATE TO ET RATE OF 2%...SO SMALL BUT NON-TRIVIAL
. ***************** WE TREAT CT HAS CONTINUING TO HAVE ET AFTER 2015. BUT LATER SHOW RESULTS ROBUST TO DROPPING CT.
. *replace EI = 0 if abbr=="CT" & year>=2016  //https://www.cga.ct.gov/2017/ACT/pa/2017PA-00002-R00SB-01502SS1-PA.htm
. 
. /// More recent repeals (from MN study)
> replace EI = 0 if inlist(abbr,"NJ") & year>=2018
. replace EI = 0 if inlist(abbr,"NC","OH") & year>=2013
. replace EI = 0 if abbr=="OK" & year>=2010               //found online
. 
. /// Dealing with Inheritance-tax-only cases, which all have low or zero rates for lineal heirs (and ~16% for non-lineal heirs). 
> //B&S says IA, KY, and NJ had I tax (as of 1998) only on collateral heirs. I confirmed this is true post-98 as well (see Michael 2018)
> .
. //NE repealed its estate tax in 2007. It retained an inheritance tax but with a rate on lineal heirs (kids) of just 1%. EI taxes/gdp p
> lummeted after 2007
. //NH had an I tax for death before 2003: https://www.revenue.nh.gov/faq/inheritance-estate.htm
. //In 2008, LA repealed its I tax which was a pick-up tax that had never been coupled to fed credit; deaths after 2004 not subject to t
> ax 
. //In 2012, TN I tax was phased out to be fully repealed by 2016.
. //The IN I tax is being phased out from 2013-2022 by 10% each year. Lineal heirs have low rate.
. 
. // NJ had an estate tax in addition to I tax up until 2018: https://www.state.nj.us/treasury/taxation/inheritance-estate/tax-rates.sht
> ml
. *replace EI = 0 if inlist(abbr,"NJ","IA","KY","NE","NH","LA","TN","IN")
. replace EI = 0 if inlist(abbr,"IA","KY","NE","NH","LA","TN","IN")
. gen Ionly = 0
. *replace Ionly = 1 if inlist(abbr,"NJ","IA","KY") | (abbr=="NE" & year>=2007) | (abbr=="NH" & year<2003) | (abbr=="LA" & year<2008) | 
> (abbr=="TN" & year<2012) | (abbr=="IN" & year<2013)  
. replace Ionly = 1 if inlist(abbr,"IA","KY") | (abbr=="NE" & year>=2007) | (abbr=="NH" & year<2003) | (abbr=="LA" & year<2008) | (abbr=
> ="TN" & year<2012) | (abbr=="IN" & year<2013)  | (abbr=="NJ" & year>=2018)
. 
. // COULD CHANGE PA TO I-ONLY STATE (SEE MICHAEL 2018 ). It is unique among I-only states in having tax (4.5%) on lineal heirs (and 15%
>  on other heirs)...so more similar to ET.
. // at least check into robustness of this choice
. 
. // Our baseline counts these I taxes as EI taxes because EI_Tax/gdp tends to be high in these cases. Uncomment below to treat I taxes 
> as EI=0
. *replace EI = 1 if Ionly==1
. 
. levelsof abbr if EI==1 & year==2000, local(temp)
. levelsof abbr if EI==1 & year==2001, local(temp)
. levelsof abbr if EI==1 & year==2017, local(temp)
. *pause
. 
. /// ENTER STATUTORY ET RATES AND THEN COMPUTE COMBINED FED+STATE ET RATE FOR EACH STATE-YEAR
> gen EIrate_state = 0
. *replace EIrate_state = 0.16*EI if inlist(abbr,"OR","OK","KS","MN","WI","IL","OH","NC") | inlist(abbr,"VA","MD","DE","PA","NY","RI","M
> A","VT")
. replace EIrate_state = 0.16*EI if inlist(abbr,"NJ","OR","OK","KS","MN","WI","IL","OH","NC") | inlist(abbr,"VA","MD","DE","PA","NY","RI
> ","MA","VT")
. replace EIrate_state = 0.157*EI if abbr=="HI"
. replace EIrate_state = 0.12*EI if abbr=="ME"
. replace EIrate_state = 0.20*EI if abbr=="WA"
. 
. replace EIrate_state = 0.16*EI if abbr=="CT" & year<2010
. replace EIrate_state = 0.12*EI if abbr=="CT" & year>=2010
. replace EIrate_state = 0.02*EI if abbr=="CT" & inrange(year,2016,2018) //implied ET rate on $1B estate given $20M max tax
. replace EIrate_state = 0.015*EI if abbr=="CT" & year>=2019 //implied ET rate on $1B estate given $15M max tax
. 
. *pause
. 
. 
. /// Federal top ET rate by year (https://www.sparrowcapital.com/resource-center/estate/a-brief-history-of-estate-taxes)
> gen EIrate_fed = .70 if year<1982
. replace EIrate_fed = .65 if inrange(year,1982,1982) 
. replace EIrate_fed = .60 if inrange(year,1983,1983) 
. replace EIrate_fed = .55 if inrange(year,1984,2001) 
. replace EIrate_fed = .50 if inrange(year,2002,2002)
. replace EIrate_fed = .49 if inrange(year,2003,2003)
. replace EIrate_fed = .48 if inrange(year,2004,2004)
. replace EIrate_fed = .47 if inrange(year,2005,2005)
. replace EIrate_fed = .46 if inrange(year,2006,2006)
. replace EIrate_fed = .45 if inrange(year,2007,2009)
. replace EIrate_fed = 0 if inrange(year,2010,2010)
. replace EIrate_fed = .35 if inrange(year,2011,2012)
. replace EIrate_fed = .396 if inrange(year,2013,2017)
. replace EIrate_fed = .37 if inrange(year,2018,2019)
. 
. gen EIratecombined = EIrate_state + EIrate_fed - EIrate_state if year<=2001  //full federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .75*EIrate_state if year==2002  //75% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .5*EIrate_state if year==2003  //50% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed - .25*EIrate_state if year==2004  //25% federal credit for state ET
. replace EIratecombined = EIrate_state + EIrate_fed*(1 - EIrate_state) if year>=2005  //federal deduction for state ET
. 
. *replace EIratecombined = EIrate_fed if year<=2001
. *replace EIratecombined = (0.16)*EI + EIrate_fed if year>2001
. 
. save stata_data/popEI.dta, replace
. 
. //Merge in state GDP data
. use "stata_data/EI_Tax_Merged_v2.dta", clear
. 
. rename Year year
. sort year State
. drop if year < 1982
. drop if abbr == "" | abbr == "DC"
. *use "stata_data/Tax_Rate_Merged_2.dta",clear
. merge m:1 abbr year using stata_data/popEI.dta, nogen keepusing(pop_change pop EI Ionly) keep(1 3)
. merge m:1 abbr year using `stateGDP', nogen keepusing(gdp gdp_change) keep(1 3)
. 
. //Relabel variables that will be included in regression
. label variable pop_change "Pop. Change"
. label variable gdp_change "GDP Change"
. label variable EI "ET indicator"
. 
. /// EI tax revenues data
> destring Total_Taxes, replace ignore(",")
. gen EIshare = EI_Tax/Total_Taxes
. 
. //Import annual CPI-U data
. preserve
. import haver cpiuann@usecon, tvar(year) clear
. rename cpiuann cpi
. replace cpi = cpi/245.120  //re-base cpi to be 1 in 2017
. tempfile cpi
. save `cpi'
. restore
. merge m:1 year using `cpi', nogen keep(1 3)
. 
. // Dropping observations that are not reported, out of the country, or Washington D.C.
. drop if State == "Washington DC"
. drop if State == ""
. drop if Name == ""
. 
. //Generate average
. g avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. 
. glevelsof abbr, local(state)
. 
. drop if Name == "Henry Earl Singleton" & year == 1988 & ourrank == . // Keeping higher ranked observation
. 
. //Adding 2 to the younger family members with the same name in order to be able to differentiate
. duplicates tag Name year, gen(tag)
. g young_man=0
. sort year Name Age_num
. replace young_man = 1 if Name[_n]==Name[_n+1] & year[_n]==year[_n+1] & Age_num[_n]!=Age_num[_n+1] & tag==1
. 
. replace Name = "Charles A Vose 2" if Name == "Charles A Vose" & young_man==1
. replace Name = "Pierre Samuel Du Pont Family" if Name == "Pierre Samuel Du Pont" & family == 1
. replace Name = "Stephen Davidson Betchel 2" if Name == "Stephen Davidson Betchel" & young_man == 1
. replace Name = "Stephen Davidson Betchel Family" if Name == "Stephen Davidson Betchel" & family == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & young_man == 1
. replace Name = "Robert Boisseau Pamplin 2" if Name == "Robert Boisseau Pamplin" & year >= 1995
. *****I am letting the second occurence of Alice Francis Du Pont Mills in 1994 drop because I did not see two entries in the scanned Fo
> rbes document**********
. replace Name = "Frank Batten 2" if Name == "Frank Batten" & young_man == 1
. replace Name = "Jim Davis 2" if Name == "Jim Davis" & young_man == 1
. replace Name = "Edward Crosby Johnson 2" if Name == "Edward Crosby Johnson" & young_man == 1
. 
. drop tag
. 
. duplicates tag Name year, gen(tag)
. drop if tag~=0  //drops individuals with multiple residences
. drop tag
. tempfile cleaned
. save `cleaned'
. 
. //Relabel some variables
. label variable avg "Top State Personal MTR"
. label variable our_wealthy "Inheritors" 
. label variable state_tax "CIT Rate"
. 
. //Changing name to make it easier to differentiate between family members with same name
. replace Name = "Edward Johnson" if Name == "Edward Crosby Johnson" & year == 2017 & Age_num == 53 
. 
. //Other name fixes
. replace Name = "Oakleigh Blakeman Thorne" if Name=="Oakleigh Blakeman Thome"
. 
. drop stab //redundant with abbr
. 
. //Fix units
. replace our_wealthy = 1 if our_wealthy==2
. replace avg = avg/100
. *replace Residence_State = Residence_State*(10^15)
. 
. encode Name, gen(nameid)
. egen stateyear = group(abbr year)
. egen stateyearnameid = group(abbr year nameid)
. 
. /// CLEAN UP THE AGE VARIABLE (Note: there truly was someone who was 101, and the ages for 400 and 800 are for families and are mistak
> es)
> if _rc==0 {
. tab Age
. replace Age_num = 25 if Age == "20s"
. replace Age_num = 35 if Age == "30s"
. replace Age_num = 45 if Age == "40s"
. replace Age_num = 55 if inlist(Age,"50s",">51")
. replace Age_num = 65 if Age == "60s"
. replace Age_num = 75 if Age == "70s"
. replace Age_num = 85 if Age == "80s"
. replace Age_num = 95 if Age == "90s"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 78 if Age == "late 70s"
. replace Age_num = 88 if Age == "late 80s"
. replace Age_num = 50 if Age == "near 50"
. replace Age_num = 70 if Age == "near 70"
. replace Age_num = 68 if Age == "late 60s"
. replace Age_num = 83 if Age == "83, 79 "
. replace Age_num = 74 if Age == "74, 75 "
. replace Age_num = 65 if Age == "65, 63 "
. replace Age_num = real(subinstr(Age,",","",.))
. replace Age_num = real(subinstr(Age,"*","",.))
. replace Age_num = real(subinstr(Age,"'","",.))
. replace Age_num = real(subinstr(Age,"`","",.))
. replace Age_num = real(subinstr(Age,"_","",.))
. replace Age_num = real(subinstr(Age,"-","",.))
. replace Age_num = real(subinstr(Age," ","",.))
. replace Age_num = real(subinstr(Age,"Q","0",.))
. replace Age_num = real(subinstr(Age,">","",.))
. replace Age_num = real(subinstr(Age,"a","0",.))
. replace Age_num = real(subinstr(Age,".","",.))
. *replace Age_num = 100 if inlist(Age,"dec.","deceased","Deceased")
. 
. //Fixing Forbes age issues (Dan)
. replace Age_num = 77 if Name == "John Hammond Krehbiel Jr" & year == 1983
. replace Age_num = 33 if Name == "Swanee Hunt" & year == 1983
. replace Age_num = (1998 - 1945) if year == 1998 & Name == "Gary Tharaldson"
. replace Age_num = (1997 - 1945) if year == 1997 & Name == "Gary Tharaldson"
. replace Age_num = 85 if year==2015 & Name == "Warren Edward Buffett"
. replace Age_num = 60 if year==2015 & Name == "William Henry Gates"
. replace Age_num = 95 if year==1994 & Name == "Katsumasa (Roy) Sakioka"
. 
. //Fixing Forbes age issues (Amber)
. replace Age_num = 51 if Name == "Abigail Johnson" & year == 2012
. replace Age_num = . if Name == "Abigail Johnson" & (year >= 2013 | year < 2012)
. 
. replace Age_num = 58 if Name == "Adolph Alfred Taubman" & year == 1982
. replace Age_num = . if Name == "Adolph Alfred Taubman" & year >= 1983
. 
. replace Age_num = 48 if Name == "Alan C Ashton" & year == 1990 
. replace Age_num = . if Name == "Alan C Ashton" & year > 1990
. 
. replace Age_num = 82 if Name == "Alan Gerry" & year == 2011
. replace Age_num = . if Name == "Alan Gerry" & year > 2011
. 
. replace Age_num = 66 if Name == "Albert Lee Ueltschi" & year == 1983
. 
. replace Age_num = 64 if Name == "Alberto Vilar" & year == 2004
. 
. replace Age_num = 72 if Name == "Zachary Fisher" & year == 1982
. replace Age_num = . if Name == "Zachary Fisher" & year > 1982
. 
. replace Age_num = 44 if Name == "Winthrop Paul Rockefeller" & year == 1992
. replace Age_num = . if Name == "Winthrop Paul Rockefeller" & year > 1992
. 
. replace Age_num = 46 if Name == "Winnie Johnson-Marquart" & year == 2004
. replace Age_num = . if Name == "Winnie Johnson-Marquart" & year > 2004
. 
. replace Age_num = 62 if Name == "Alec Gores" & year == 2015
. 
. replace Age_num = 38 if Name == "Alejandro Santo Domingo" & year == 2015
. replace Age_num = . if Name == "Alejandro Santo Domingo" & year > 2015
. 
. replace Age_num = 66 if Name == "Alice L Walton" & year == 2015
. replace Age_num = . if Name == "Alice L Walton" & year > 2015
. 
. replace Age_num = 74 if Name == "Allan Goldman" & year == 2016
. 
. replace Age_num = 81 if Name == "Amos Barr Hostetter" & year == 2017
. replace Age_num = . if Name == "Amos Barr Hostetter" & year < 2017
. 
. replace Age_num = 44 if Name == "Amy Wyss" & year == 2015
. replace Age_num = 45 if Name == "Amy Wyss" & year == 2016
. 
. replace Age_num = 37 if Name == "Andres Santo Domingo" & year == 2015
. 
. replace Age_num = 62 if Name == "Andrew Beal" & year == 2014
. replace Age_num = . if Name == "Andrew Beal" & year > 2014
. 
. replace Age_num = 84 if Name == "Andrew Jerrold Perenchio" & year == 2015
. replace Age_num = 85 if Name == "Andrew Jerrold Perenchio" & year == 2016
. 
. replace Age_num = 59 if Name == "Anita Zucker" & year == 2010 //Overwrote Forbes age
. replace Age_num = . if Name == "Anita Zucker" & year > 2010
. 
. replace Age_num = . if Name == "Ann Walton Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Anne Cox Chambers" & year > 1982
. 
. replace Age_num = 80 if Name == "Anne Gittinger" & year == 2015
. replace Age_num = . if Name == "Anne Gittinger" & year < 2015
. 
. replace Age_num = 54 if Name == "Anthony Pritzker" & year == 2015
. replace Age_num = . if Name == "Anthony Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "Archie Aldis Emmerson" & year < 2017
. 
. replace Age_num = . if Name == "Arthur M Blank" & year < 2017
. 
. replace Age_num = . if Name == "Arturo Moreno" & year < 2017
. 
. replace Age_num = . if Name == "Austen S Cargill" & year < 2017
. 
. replace Age_num = 69 if Name == "Barbara Carlson Gage" & year == 2011 //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year > 2011  //Overwrote Forbes age
. replace Age_num = . if Name == "Barbara Carlson Gage" & year < 2011  //Overwrote Forbes age
. 
. replace Age_num = . if Name == "Barry Diller" & year < 2017
. 
. replace Age_num = . if Name == "Bennett Dorrance" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Francis Saul" & year < 2017
. 
. replace Age_num = . if Name == "Bernard Marcus" & year < 2017
. 
. replace Age_num = . if Name == "Bharat Desai" & year < 2016
. 
. replace Age_num = . if Name == "Bill Haslam" & year < 2017
. 
. replace Age_num = . if Name == "Blase Thomas Golisano" & year < 2017
. 
. replace Age_num = . if Name == "Bob Parsons" & year < 2017
. 
. replace Age_num = . if Name == "Bobby Murphy" & year < 2017
. 
. replace Age_num = . if Name == "Brad Kelley" & year < 2017
. 
. replace Age_num = . if Name == "Bradley Wayne Hughes" & year < 2017
. 
. replace Age_num = . if Name == "Brian Acton" & year < 2017
. 
. replace Age_num = . if Name == "Brian Chesky" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Halle" & year < 2016
. 
. replace Age_num = . if Name == "Bruce Karsh" & year < 2017
. 
. replace Age_num = . if Name == "Bruce Kovner" & year < 2017
. 
. replace Age_num = . if Name == "Bubba Cathy" & year < 2017
. 
. replace Age_num = . if Name == "C Dean Metropoulos" & year < 2017
. 
. replace Age_num = . if Name == "Carl Celian Icahn" & year < 2017
. 
. replace Age_num = . if Name == "Carl Cook" & year < 2017
. 
. replace Age_num = . if Name == "Charles Bartlett Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Charles Butt" & year >= 2014
. 
. replace Age_num = 65 if Name == "Charles Cohen" & year == 2016
. 
. replace Age_num = . if Name == "Charles Ergen" & year < 2017
. 
. replace Age_num = . if Name == "Charles Francis Dolan" & year < 2017
. 
. replace Age_num = . if Name == "Charles R Schwab" & year < 2017
. 
. replace Age_num = . if Name == "Charles de Ganahl Koch" & year < 2017
. 
. replace Age_num = . if Name == "Chase Coleman" & year < 2017
. 
. replace Age_num = . if Name == "Christopher Cline" & year < 2017
. 
. replace Age_num = . if Name == "Christy Walton" & year < 2017
. 
. replace Age_num = . if Name == "Clayton Lee Mathile" & year < 2017
. 
. replace Age_num = . if Name == "Clemmie Dixon Spangler" & year < 2017
. 
. replace Age_num = 66 if Name == "Craig O Mccaw" & year == 2015 //Forbes age overwritten
. 
. replace Age_num = . if Name == "Dagmar Dolby" & year < 2017
. 
. replace Age_num = . if Name == "Dan Cathy" & year < 2017
. 
. replace Age_num = . if Name == "Dan Friedkin" & year < 2017
. 
. replace Age_num = . if Name == "Dan Snyder" & year < 2017
. 
. replace Age_num = . if Name == "Daniel D'Aniello" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Gilbert" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Loeb" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Morton Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Och" & year < 2017
. 
. replace Age_num = . if Name == "Daniel Pritzker" & year < 2017
. 
. replace Age_num = 51 if Name == "Dannine Avara" & year == 2014
. replace Age_num = . if Name == "Dannine Avara" & year > 2014
. 
. replace Age_num = . if Name == "David A Duffield" & year < 2017
. 
. replace Age_num = . if Name == "David Bonderman" & year < 2017
. 
. replace Age_num = 44 if Name == "David Einhorn" & year == 2012
. replace Age_num = . if Name == "David Einhorn" & year > 2012
. 
. replace Age_num = . if Name == "David Filo" & year < 2017
. 
. replace Age_num = . if Name == "David Geffen" & year < 2017
. 
. replace Age_num = . if Name == "David Green" & year < 2017
. 
. replace Age_num = . if Name == "David Hamilton Koch" & year < 2017
. 
. replace Age_num = . if Name == "David Howard Murdock" & year < 2017
. 
. replace Age_num = 101 if Name == "David Rockefeller" & year == 2016
. replace Age_num = 99 if Name == "David Rockefeller" & year == 2014
. replace Age_num = . if Name == "David Rockefeller" & year < 2014
. 
. replace Age_num = . if Name == "David Rubenstein" & year < 2017
. 
. replace Age_num = . if Name == "David Shaw" & year < 2017
. 
. replace Age_num = . if Name == "David Siegel" & year < 2017 & Source == "Hedge Funds"
. 
. replace Age_num = . if Name == "David Sun" & year < 2017
. 
. replace Age_num = . if Name == "David Tepper" & year < 2017
. 
. replace Age_num = . if Name == "David Walentas" & year < 2017
. 
. replace Age_num = 92 if Name == "Dean White" & year == 2015
. 
. replace Age_num = . if Name == "Denise Debartolo York" & year < 2017
. 
. replace Age_num = . if Name == "Dennis Washington" & year < 2017
. 
. replace Age_num = . if Name == "Diane Hendricks" & year < 2017
. 
. replace Age_num = . if Name == "Dirk Edward Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Don Hankey" & year < 2017
. 
. replace Age_num = . if Name == "Donald Edward Newhouse" & year < 2017
. 
. replace Age_num = . if Name == "Donald Leroy Bren" & year < 2017
. 
. replace Age_num = . if Name == "Donald Sterling" & year < 2017
. 
. replace Age_num = . if Name == "Doris Feigenbaum Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Douglas Leone" & year < 2017
. 
. replace Age_num = . if Name == "Dustin Moskovitz" & year < 2017
. 
. replace Age_num = . if Name == "Edward Crosby Johnson" & year < 2016
. 
. replace Age_num = . if Name == "Edward John Debartolo Jr" & year < 2017
. 
. replace Age_num = 53 if Name == "Edward Lampert" & year == 2015
. 
. replace Age_num = . if Name == "Edward Perry Bass" & year < 2017
. 
. replace Age_num = . if Name == "Edward Roski" & year < 2017
. 
. replace Age_num = . if Name == "Eli Broad" & year < 2017
. 
. replace Age_num = 31 if Name == "Elizabeth Holmes" & year == 2015
. 
. replace Age_num = . if Name == "Elon Musk" & year < 2017
. 
. replace Age_num = . if Name == "Enos Stanley Kroenke" & year < 2017
. 
. replace Age_num = . if Name == "Eric Schmidt" & year < 2017
. 
. replace Age_num = . if Name == "Evan Spiegel" & year < 2017
. 
. replace Age_num = 43 if Name == "Evan Williams" & year == 2015 //Overwrote Forbes age
. 
. replace Age_num = 87 if Name == "Fayez Shalaby Sarofim" & year == 2015 //Overwrote Forbes age
. replace Age_num = . if Name == "Fayez Shalaby Sarofim" & year < 2015
. 
. replace Age_num = 84 if Name == "Forrest Edward Mars Jr" & year == 2015
. replace Age_num = . if Name == "Forrest Edward Mars Jr" & year < 2015
. 
. replace Age_num = 82 if Name == "Forrest Preston" & year == 2015
. 
. replace Age_num = . if Name == "Frank Fertitta" & year < 2017
. 
. replace Age_num = . if Name == "Frederick Wallace Smith" & year < 2017
. 
. replace Age_num = . if Name == "Gabe Newell" & year < 2017
. 
. replace Age_num = 73 if Name == "Gail Miller" & year == 2015
. replace Age_num = 74 if Name == "Gail Miller" & year == 2016
. 
. replace Age_num = . if Name == "Gary Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Gayle Cook" & year < 2013
. 
. replace Age_num = . if Name == "George B Kaiser" & year < 2017
. 
. replace Age_num = . if Name == "George Bishop" & year < 2017
. 
. replace Age_num = . if Name == "George L Lindemann" & year < 2017
. 
. replace Age_num = . if Name == "George Leon Argyros" & year < 2017
. 
. replace Age_num = . if Name == "George Lucas" & year < 2017
. 
. replace Age_num = . if Name == "George R Roberts" & year < 2017
. 
. replace Age_num = . if Name == "George Soros" & year < 2017
. 
. replace Age_num = . if Name == "Gerald J Ford" & year < 2017
. 
. replace Age_num = . if Name == "Glen Taylor" & year < 2017
. 
. replace Age_num = . if Name == "Glenn Dubin" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Earle Moore" & year < 2017
. 
. replace Age_num = . if Name == "Gordon Peter Getty" & year < 2017
. 
. replace Age_num = . if Name == "Gwendolyn Sontheim Meyer" & year < 2017
. 
. replace Age_num = . if Name == "H Fisk Johnson" & year < 2017
. 
. replace Age_num = . if Name == "H Ty Warner" & year < 2017
. 
. replace Age_num = . if Name == "Haim Saban" & year < 2017
. 
. replace Age_num = 64 if Name == "Hamilton James" & year == 2015
. 
. replace Age_num = . if Name == "Harold Hamm" & year < 2017
. 
. replace Age_num = . if Name == "Harry Stine" & year < 2017
. 
. replace Age_num = . if Name == "Harry Wayne Huizenga" & year < 2017
. 
. replace Age_num = . if Name == "Helen Johnson-Leipold" & year < 2017
. 
. replace Age_num = 97 if Name == "Henry Lea Hillman" & year == 2016
. 
. replace Age_num = . if Name == "Henry Nicholas" & year < 2017
. 
. replace Age_num = . if Name == "Henry R Kravis" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot" & year < 2017
. 
. replace Age_num = . if Name == "Henry Ross Perot Jr" & year < 2017
. 
. replace Age_num = . if Name == "Henry Samueli" & year < 2017
. 
. replace Age_num = . if Name == "Herbert Kohler" & year < 2017
. 
. replace Age_num = 88 if Name == "Herbert Louis" & year == 2014
. 
. replace Age_num = . if Name == "Herbert Simon" & year < 2017
. 
. replace Age_num = . if Name == "Howard Marks" & year < 2017
. 
. replace Age_num = . if Name == "Howard Schultz" & year < 2017
. 
. replace Age_num = . if Name == "Igor Olenicoff" & year < 2017
. 
. replace Age_num = 86 if Name == "Imogene Powers Johnson" & year == 2017
. replace Age_num = . if Name == "Imogene Powers Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Ira L Rennert" & year < 2017
. 
. replace Age_num = . if Name == "Irwin Mark Jacobs" & year < 2014
. 
. replace Age_num = . if Name == "Isaac Perlmutter" & year < 2017
. 
. replace Age_num = . if Name == "Israel Englander" & year < 2017
. 
. replace Age_num = . if Name == "J Christopher Reyes" & year < 2017
. 
. replace Age_num = 93 if Name == "Jack Crawford Taylor" & year == 2015
. 
. replace Age_num = . if Name == "Jack Dangermond" & year < 2017
. 
. replace Age_num = . if Name == "Jack Dorsey" & year < 2017
. 
. replace Age_num = . if Name == "Jacqueline Mars" & year < 2017
. 
. replace Age_num = . if Name == "James C France" & year < 2016
. 
. replace Age_num = . if Name == "James Coulter"  & year < 2017
. 
. replace Age_num = . if Name == "James Dinan" & year < 2016
. 
. replace Age_num = . if Name == "James Goodnight" & year < 2017
. 
. replace Age_num = . if Name == "James H Clark" & year < 2017
. 
. replace Age_num = . if Name == "James Irsay" & year < 2017
. 
. replace Age_num = . if Name == "James Jannard" & year < 2017
. 
. replace Age_num = . if Name == "James Leprino" & year < 2017
. 
. replace Age_num = . if Name == "James R Cargill II" & year < 2017
. 
. replace Age_num = . if Name == "James Simons" & year < 2017
. 
. replace Age_num = . if Name == "Jan Koum" & year < 2017
. 
. replace Age_num = . if Name == "Jay Paul" & year < 2017
. 
. replace Age_num = . if Name == "Jay Robert (JB) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jean (Gigi) Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Greene" & year < 2017
. 
. replace Age_num = . if Name == "Jeff Sutton" & year < 2017
. 
. replace Age_num = . if Name == "Jeffery Hildebrand" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Lorberbaum" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey P Bezos" & year < 2017
. 
. replace Age_num = . if Name == "Jeffrey Skoll" & year < 2017
. 
. replace Age_num = . if Name == "Jen-Hsun Huang" & year < 2017
. 
. replace Age_num = . if Name == "Jennifer Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Jeremy Maurice Jacobs" & year < 2017
. 
. replace Age_num = . if Name == "Jerral Wayne Jones" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Speyer" & year < 2017
. 
. replace Age_num = . if Name == "Jerry Yang" & year < 2017
. 
. replace Age_num = . if Name == "Jim Breyer" & year < 2017
. 
. replace Age_num = . if Name == "Jim C Walton" & year < 2017
. 
. replace Age_num = 72 if Name == "Jim Davis" & year == 2015
. 
. replace Age_num = . if Name == "Jim Kennedy" & year < 2017
. 
. replace Age_num = 62 if Name == "Jimmy Haslam" & year == 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year > 2015
. replace Age_num = . if Name == "Jimmy Haslam" & year < 2015
. 
. replace Age_num = . if Name == "Jin Sook & Do Won Chang" & year < 2017
. 
. replace Age_num = . if Name == "Joan Tisch" & year < 2016
. 
. replace Age_num = . if Name == "Joe Gebbia" & year < 2017
. 
. replace Age_num = . if Name == "John Andreas Catsimatidis" & year < 2017
. 
. replace Age_num = . if Name == "John Anthony Sobrato" & year < 2017
. 
. replace Age_num = 44 if Name == "John Arnold" & year == 2017
. replace Age_num = . if Name == "John Arnold" & year < 2017
. 
. replace Age_num = 78 if Name == "John Arrillaga" & year == 2015
. 
. replace Age_num = . if Name == "John C Malone" & year < 2017
. 
. replace Age_num = 90 if Name == "John Farber" & year == 2015
. 
. replace Age_num = . if Name == "John Franklyn Mars" & year < 2017
. 
. replace Age_num = . if Name == "John Henry" & year < 2017 & Source == "Sports"
. 
. replace Age_num = . if Name == "John J Fisher" & year < 2017 
. 
. replace Age_num = 72 if Name == "John Kapoor" & year == 2015
. 
. replace Age_num = . if Name == "John Middleton" & year < 2017
. 
. replace Age_num = . if Name == "John Morris" & year < 2017
. 
. replace Age_num = . if Name == "John Overdeck" & year < 2017
. 
. replace Age_num = . if Name == "John Paul Dejoria" & year < 2017
. 
. replace Age_num = . if Name == "John Paulson" & year < 2017
. 
. replace Age_num = 62 if Name == "John Pritzker" & year == 2015
. replace Age_num = . if Name == "John Pritzker" & year > 2015
. 
. replace Age_num = . if Name == "John R Menard" & year < 2017
. 
. replace Age_num = 67 if Name == "John Sall" & year == 2015
. 
. replace Age_num = . if Name == "John Tu" & year < 2017
. 
. replace Age_num = . if Name == "John W Brown" & year < 2017 
. 
. replace Age_num = . if Name == "Johnelle Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Jon LLoyd Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Jonathan Gray" & year < 2017
. 
. replace Age_num = 59 if Name == "Jonathan Nelson" & year == 2015
. 
. replace Age_num = 66 if Name == "Jorge Perez" & year == 2015
. 
. replace Age_num = . if Name == "Joseph D Mansueto" & year < 2017
. 
. replace Age_num = . if Name == "Joseph Dahr Jamail" & year < 2014
. 
. replace Age_num = . if Name == "Joseph Grendys" & year < 2017
. 
. replace Age_num = 85 if Name == "Josephine Louis" & year == 2015
. 
. replace Age_num = . if Name == "Joshua Harris" & year < 2017
. 
. replace Age_num = . if Name == "Judy Faulkner" & year < 2017
. 
. replace Age_num = . if Name == "Julian Robertson" & year < 2017
. 
. replace Age_num = . if Name == "Julio Mario Santo Domingo" & year < 2017
. 
. replace Age_num = . if Name == "Karen Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Kavitark Ram Shriram" & year < 2017
. 
. replace Age_num = 87 if Name == "Keith Rupert Murdoch" & year == 2017
. replace Age_num = . if Name == "Keith Rupert Murdoch" & year < 2017
. 
. replace Age_num = . if Name == "Kelcy Warren" & year < 2017
. 
. replace Age_num = . if Name == "Ken Fisher" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth C Griffin" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth Feld" & year < 2017
. 
. replace Age_num = . if Name == "Kenneth G Langone" & year < 2017
. 
. replace Age_num = . if Name == "Kevin Plank" & year < 2016
. 
. replace Age_num = . if Name == "Kieu Hoang" & year < 2017
. 
. replace Age_num = 97 if Name == "Kirk Kerkorian" & year == 2014
. 
. replace Age_num = . if Name == "L John Doerr" & year < 2017
. 
. replace Age_num = . if Name == "Larry E Page" & year < 2017
. 
. replace Age_num = 46 if Name == "Larry Robbins" & year == 2015
. 
. replace Age_num = 52 if Name == "Laurene Powell Jobs" & year == 2015
. 
. replace Age_num = . if Name == "Lawrence Joseph Ellison" & year < 2017
. 
. replace Age_num = . if Name == "Leandro Rizzuto" & year < 2016
. 
. replace Age_num = . if Name == "Lee Marshall Bass" & year < 2017
. 
. replace Age_num = . if Name == "Leon Black" & year < 2017
. 
. replace Age_num = . if Name == "Leon G Cooperman" & year < 2017
. 
. replace Age_num = 84 if Name == "Leonard Alan Lauder" & year == 2017 //Overwrote Forbes Age
. replace Age_num = . if Name == "Leonard Alan Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Leonard Norman Stern" & year < 2017
. 
. replace Age_num = . if Name == "Leslie Herbert Wexner" & year < 2017
. 
. replace Age_num = . if Name == "Linda Pritzker" & year < 2016
. 
. replace Age_num = . if Name == "Lorenzo Fertitta" & year < 2017
. 
. replace Name = "Louis Moore Bacon" if Name == "Lours Moore Bacon" //Name mistake
. replace Age_num = . if Name == "Louis Moore Bacon" & year < 2016
. 
. replace Age_num = . if Name == "Lynn Schusterman" & year < 2017
. 
. replace Age_num = . if Name == "M Jude Reyes" & year < 2017
. 
. replace Age_num = 88 if Name == "Manuel Moroun" & year == 2015
. 
. replace Age_num = . if Name == "Marc Benioff" & year < 2017
. 
. replace Age_num = 55 if Name == "Marc Lasry" & year == 2015
. 
. replace Age_num = 53 if Name == "Marc Rowan" & year == 2015
. 
. replace Age_num = . if Name == "Margaret C Whitman" & year < 2017
. 
. replace Age_num = . if Name == "Marianne Liebmann" & year < 2017
. 
. replace Age_num = . if Name == "Marilyn Carlson Nelson" & year < 2014
. 
. replace Age_num = . if Name == "Mark Cuban" & year < 2017
. 
. replace Age_num = . if Name == "Mark Shoen" & year < 2017
. 
. replace Age_num = . if Name == "Mark Stevens" & year < 2017
. 
. replace Age_num = . if Name == "Mark Walter" & year < 2017
. 
. replace Age_num = . if Name == "Mark Zuckerberg" & year < 2017
. 
. replace Age_num = . if Name == "Martha Robinson Rivers Ingram" & year < 2017
. 
. replace Age_num = . if Name == "Mary Alice Dorrance Malone" & year < 2017
. 
. replace Age_num = . if Name == "Michael Dell" & year < 2017
. 
. replace Age_num = . if Name == "Michael Moritz" & year < 2017
. 
. replace Age_num = . if Name == "Michael Robert Milken" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubens Bloomberg" & year < 2017
. 
. replace Age_num = . if Name == "Michael Rubin" & year < 2017
. 
. replace Age_num = . if Name == "Micky Arison" & year < 2017
. 
. replace Age_num = . if Name == "Milane Duncan Frantz" & year < 2017
. 
. replace Age_num = . if Name == "Min H Kao" & year < 2017
. 
. replace Age_num = . if Name == "Mitchell Rales" & year < 2017
. 
. replace Age_num = . if Name == "Mortimer Benjamin Zuckerman" & year < 2017
. 
. replace Age_num = . if Name == "Nancy Walton Laurie" & year < 2017
. 
. replace Age_num = . if Name == "Nathan Blecharczyk" & year < 2017
. 
. replace Age_num = . if Name == "Neil Gary Bluhm" & year < 2017
. 
. replace Age_num = 73 if Name == "Nelson Peltz" & year == 2015
. 
. replace Age_num = 40 if Name == "Nicholas Woodman" & year == 2015
. 
. replace Age_num = . if Name == "Noam Gottesman" & year < 2017
. 
. replace Age_num = . if Name == "Norman Braman" & year < 2017
. 
. replace Age_num = . if Name == "Oprah Winfrey" & year < 2017
. 
. replace Age_num = . if Name == "Pat Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Patrick George Ryan" & year < 2017
. 
. replace Age_num = 76 if Name == "Patrick Joseph Mcgovern" & year == 2013
. 
. replace Age_num = . if Name == "Patrick Soon-Shiong" & year < 2017
. 
. replace Age_num = 64 if Name == "Paul Gardner Allen" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Paul Gardner Allen" & year < 2017
. 
. replace Age_num = . if Name == "Paul Tudor Jones" & year < 2017
. 
. replace Age_num = 83 if Name == "Pauline Macmillan Keinath" & year == 2017 //overwrote Forbes age
. replace Age_num = . if Name == "Pauline Macmillan Keinath" & year < 2017
. 
. replace Age_num = . if Name == "Peter Buck" & year < 2017
. 
. replace Age_num = . if Name == "Peter R Kellogg" & year < 2017
. 
. replace Age_num = . if Name == "Peter Thiel" & year < 2017
. 
. replace Age_num = . if Name == "Philip Hampson Knight" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Frederick Anschutz" & year < 2017
. 
. replace Age_num = 82 if Name == "Phillip Frost" & year == 2017
. replace Age_num = . if Name == "Phillip Frost" & year < 2017
. 
. replace Age_num = . if Name == "Phillip Ruffin" & year < 2017
. 
. replace Age_num = . if Name == "Pierre M Omidyar" & year < 2017
. 
. replace Age_num = . if Name == "Ralph Lauren" & year < 2017
. 
. replace Age_num = . if Name == "Randa Williams" & year < 2017
. 
. replace Age_num = . if Name == "Randal J Kirk" & year < 2017
. 
. replace Age_num = . if Name == "Randall Rollins" & year < 2017
. 
. replace Age_num = . if Name == "Ray Dalio" & year < 2017
. 
. replace Age_num = . if Name == "Ray Davis" & year < 2017
. 
. replace Age_num = . if Name == "Ray Lee Hunt" & year < 2017
. 
. replace Age_num = . if Name == "Reid Hoffman" & year < 2017
. 
. replace Age_num = . if Name == "Reinhold Schmieding" & year < 2017
. 
. replace Age_num = . if Name == "Richard Kinder" & year < 2017
. 
. replace Age_num = . if Name == "Richard Lefrak" & year < 2017
. 
. replace Age_num = 91 if Name == "Richard M Devos" & year == 2017
. replace Age_num = . if Name == "Richard M Devos" & year < 2017
. 
. replace Age_num = . if Name == "Richard M Schulze" & year < 2017
. 
. replace Age_num = . if Name == "Richard Taylor Peery" & year < 2017
. 
. replace Age_num = . if Name == "Richard Yuengling" & year < 2016
. 
. replace Age_num = . if Name == "Rick Caruso" & year < 2017
. 
. replace Age_num = . if Name == "Riley P Bechtel" & year < 2017
. 
. replace Age_num = 80 if Name == "Robert C Mcnair" & year == 2017
. replace Age_num = . if Name == "Robert C Mcnair" & year < 2017
. 
. replace Age_num = . if Name == "Robert David Ziff" & year < 2017
. 
. replace Age_num = . if Name == "Robert Drayton Mclane" & year < 2017
. 
. replace Age_num = . if Name == "Robert Duggan" & year < 2016
. 
. replace Age_num = . if Name == "Robert Edward (Ted) Turner" & year < 2017
. 
. replace Age_num = . if Name == "Robert Edward Rich Jr" & year < 2017
. 
. replace Age_num = . if Name == "Robert Kraft" & year < 2017
. 
. replace Age_num = . if Name == "Robert Muse Bass" & year < 2017
. 
. replace Age_num = 40 if Name == "Robert Pera" & year == 2017
. replace Age_num = . if Name == "Robert Pera" & year < 2017
. 
. replace Age_num = . if Name == "Robert Rowling" & year < 2017
. 
. replace Age_num = . if Name == "Robert Smith" & year < 2017
. 
. replace Age_num = . if Name == "Romesh T Wadhwani" & year < 2017
. 
. replace Age_num = . if Name == "Ron Baron" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Owen Perelman" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Steven Lauder" & year < 2017
. 
. replace Age_num = . if Name == "Ronald Wanek" & year < 2017
. 
. replace Age_num = . if Name == "Ronda E Stryker" & year < 2017
. 
. replace Age_num = . if Name == "Rupert Harris Johnson" & year < 2017
. 
. replace Age_num = . if Name == "Russ Weiner" & year < 2017
. 
. replace Age_num = . if Name == "Alexander Gus Spanos" & year < 2017
. 
. replace Age_num = 63 if Name == "Alfred James Clark" & year == 1991
. 
. replace Age_num = . if Name == "Amar Gopal Bose" & year < 2008
. 
. replace Age_num = . if Name == "Arthur Charles Nielsen" & year < 1992
. 
. replace Age_num = 65 if Name == "David Durst" & year == 1990
. 
. replace Age_num = . if Name == "Donald John Trump" & year < 2016
. 
. replace Age_num = 83 if Name == "Dorothy Green" & year == 1989
. replace Age_num = . if Name == "Dorothy Green" & year < 1989
. 
. replace Age_num = . if Name == "Elizabeth Ann Reid" & year < 2004
. 
. replace Age_num = . if Name == "Estee Lauder" & year < 1995
. 
. replace Age_num = . if Name == "Fred Deluca" & year < 2014
. 
. replace Age_num = . if Name == "Harry Brakmann Helmsley" & year < 1996
. 
. replace Age_num = . if Name == "Irene Sophie Du Pont May" & year < 1997
. 
. replace Age_num = . if Name == "James LeVoy Sorenson" & year < 2007
. 
. replace Age_num = . if Name == "Jane B Engelhard" & year < 1996
. 
. replace Age_num = 77 if Name == "Larry Fisher" & year == 1985
. replace Age_num = . if Name == "Larry Fisher" & year < 1985
. 
. replace Age_num = . if Name == "Louis Larrick Ward" & year < 1994
. 
. replace Age_num = . if Name == "Marc Lasry" & year < 2015
. 
. replace Age_num = . if Name == "Patrick Joseph Mcgovern" & year < 2013
. 
. replace Age_num = . if Name == "Paul Milstein" & year < 2009
. 
. replace Age_num = . if Name == "Preston Robert Tisch" & year < 2005
. 
. replace Age_num = . if Name == "Richard Mellon Scaife" & year < 2013
. 
. replace Age_num = . if Name == "S Robson Walton" & year < 2017
. 
. replace Age_num = . if Name == "Samuel Irving Newhouse" & year < 2016
. 
. replace Age_num = . if Name == "Samuel Zell" & year < 2017
. 
. replace Age_num = . if Name == "Scott Duncan" & year < 2017
. 
. replace Age_num = . if Name == "Sergey Brin" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Adelson" & year < 2017
. 
. replace Age_num = . if Name == "Sheldon Henry Solow" & year < 2017
. 
. replace Age_num = . if Name == "Sid Richardson Bass" & year < 2017
. 
. replace Age_num = . if Name == "Stanley Druckenmiller" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Schwarzman" & year < 2017
. 
. replace Age_num = . if Name == "Stephen A Wynn" & year < 2017
. 
. replace Age_num = . if Name == "Stephen Ross" & year < 2017
. 
. replace Age_num = . if Name == "Steve Ballmer" & year < 2017
. 
. replace Age_num = . if Name == "Steven A Cohen" & year < 2017
. 
. replace Age_num = . if Name == "Steven Allan Spielberg" & year < 2017
. 
. replace Age_num = . if Name == "Steven Udvar-Hazy" & year < 2017
. 
. replace Age_num = . if Name == "Stewart Rahr" & year < 2017
. 
. replace Age_num = . if Name == "Sumner Murray Redstone" & year < 2017
. 
. replace Age_num = . if Name == "Theodore Nathan Lerner" & year < 2017
. 
. replace Age_num = . if Name == "Thomas F Frist" & year < 2017
. 
. replace Age_num = . if Name == "Thomas J Pritzker" & year < 2017
. 
. replace Age_num = . if Name == "Trevor Rees-Jones" & year < 2017
. 
. replace Age_num = . if Name == "Warren Stephens" & year < 2017
. 
. replace Age_num = . if Name == "Whitney Macmillan" & year < 2017
. 
. replace Age_num = . if Name == "William Bernard Ziff" & year < 1994
. 
. replace Age_num = . if Name == "William Herbert Hunt" & year < 2017
. 
. replace Age_num = 75 if Name == "William Ingrahm Koch" & year == 2015
. replace Age_num = . if Name == "William Ingrahm Koch" & year < 2015
. 
. replace Age_num = . if Name == "William Morse Davidson" & year < 2008
. 
. replace Age_num = . if Name == "William Wrigley" & year < 2017
. }
. 
. *tab Age_num
. *pause
. ///Impute age for individual-year obs when we observe age for same individual in another year
> sort nameid year
. tsset nameid  year, yearly
. sleep 1000
. foreach lag of num 1/36 {
  2.         replace Age_num = L`lag'.Age_num + (year - L`lag'.year) if Age_num==. & L`lag'.Age_num ~=.
  3. }
. foreach lag of num 1/36 {
  2.         replace Age_num = F`lag'.Age_num + (year - F`lag'.year) if Age_num==. & F`lag'.Age_num ~=.
  3. }
. replace Age_num = . if Age_num > 110
. replace Age_num = 96 if Age_num>=96 & Age_num~=.  //lumping together for graphing purposes
. 
. gen flag = 0
. replace flag = 1 if (Age_num ~= L.Age_num+1) & (L.Age_num~=. & Age_num~=.)
. tab Name if flag == 1
. 
. drop if Age_num==.
. tab Age_num
. histogram Age_num, start(20) width(5) xlabels(20(5)100) xtitle("Age (Lower End of 5-year Cohort)") fcolor(gs12) lcolor(white) graphreg
> ion(color(white)) frequency discrete
. graph export ../tables/hist_age.pdf, replace as(pdf)
. gen old = 0 if Age_num~=.
. replace old = 1 if Age_num >= 65 & Age_num~=.
. gen old60 = 0 if Age_num~=. 
. replace old60 = 1 if Age_num >= 60 & Age_num~=. 
. gen old70 = 0 if Age_num~=. & inrange(Age_num,65,69)==0
. replace old70 = 1 if Age_num >= 70 & Age_num~=.
. gen old75 = 0 if Age_num~=. & inrange(Age_num,65,74)==0
. replace old75 = 1 if Age_num >= 75 & Age_num~=.
. gen footloose = (our_wealthy | old)
. label variable Age_num "Age"
. gen wealth = (NetWorthMill/1000)/cpi
. label variable wealth "Net Worth (billions, 2017 dollars)"
. 
. drop if inrange(year,2002,2002)  // no location for Forbes 400 in 2002...and possibly exclude phase-out period
. 
. gen post=(year>`postyear')
. gen AgeXpost = Age_num*post
. label variable post "post-`postyear'"
. label variable AgeXpost "Age X post-`postyear'"
. label variable Age_num "Age"
. encode abbr, gen(statenum)
. */
. 
. drop _m
. merge 1:1 Name year Forbes_Rank using "stata_data\Forbes_2015_top_100_companies.dta", keep(1 3) keepusing(company* officer* company_lo
> cation*) gen(from_company)
. 
. ******** construct officer_tied = 1 if any officer* are non-missing AND Residence==company_location* 
. generate company_state = substr(company_location,-2,2)
. generate company_state_2 = substr(company_location_2,-2,2)
. generate company_state_3 = substr(company_location_3,-2,2)
. generate company_tied = .
. replace company_tied = 0 if from_company==3
. *replace company_tied = 1 if from_company==3 & inlist(officer,"","Chairman Emeritus")==0 & abbr==company_state
. replace company_tied = 1 if from_company==3 & abbr==company_state
. 
. *replace company_tied = 1 if officer != "" & abbr == company_state
. *replace company_tied = 1 if officer_2 != "" & abbr == company_state_2
. *replace company_tied = 1 if officer_3 != "" & abbr == company_state_3
. 
. save ./stata_data/IndivAnalysisDataset.dta, replace
. 
. /// GET STATE*YEAR DATA ON PIT RATES TO MERGE IN BELOW
> use stata_data/State_Max_Tax_Rates.dta, clear
. rename Year year
. rename State_ID irsstatecode
. *pause
. merge m:1 irsstatecode using stata_data/irscode_fips_xwalk.dta
. rename stateabbrev abbr
. rename fips statefips
. drop irsstatecode statefips
. sort abbr year
. tempfile PIT
. save `PIT'
. 
. /// Get state CIT rates
> use stata_data/CIT_rates.dta, clear
. rename Year year
. keep year State state_tax
. rename state_tax CIT_rate
. label var CIT_rate "state corp income tax rate"
. tempfile CIT
. save `CIT'
. 
. //Import CEPR/CPS data (h/t Olivia Lofton) on state-year population for top 3%, top 10%, and total
. use "stata_data/styr_pop_by_wpctile.dta", clear
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop
. save `toppop'
. 
. use "stata_data/styr_pop_by_wpctile_young.dta", clear
. append using "stata_data/styr_pop_by_wpctile_old.dta", gen(old)
. drop state
. rename st_string State
. gen pop_90to97 = (pop_above90 - pop_above97)/1000
. label var pop_above90 "State population with earnings in top 10% nationally (from CPS)"
. label var pop_above97 "State population with earnings in top 3% nationally (from CPS)"
. label var pop_total "State population (thous)(from CPS)"
. label var pop_90to97 "State population with earnings between top 10% and 3% nationally (from CPS)"
. tempfile toppop_old
. save `toppop_old'
. 
. /// CREATE STATE*YEAR PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change gdp Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 State year using `CIT', nogen keep(1 3)
. merge 1:1 State year using `toppop', nogen keep(1 3)
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/StateyearAnalysisDataset.dta, replace
. 
. preserve
. gen EI_GDP = EI_Tax/(gdp)
. line EI_Tax year if abbr=="NY"
. restore
. 
. 
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES 100, 200, 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'
  4.         gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
  5.         label variable stock "Population of Forbes 200"
  6.         label variable Age_num "Age"
  7.         label variable wealth "Net Worth (billions 2017 dollars)"
  8.         label variable NetWorthMill "Net Worth of Forbes 200 (billions nom. dollars)"
  9.         *replace wealth = . if wealth == 0
. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
 10.         replace abbr = "AK" if _n==1
 11.         replace year = 1982 if abbr=="AK"
 12. 
.         fillin abbr year
 13.         replace wealth = 0 if _fillin | abbr=="AK"
 14.         replace stock = 0 if _fillin | abbr=="AK"
 15. 
.         merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
 16.         label variable EI "Estate Tax Indicator"
 17. 
.         merge 1:1 abbr year using `PIT', nogen keep(1 3)
 18.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 19.         label variable avg "Top PIT Rate"
 20. 
.         merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
 21.         gen EIshare = EI_Tax/Total_Taxes
 22. 
.         egen stateyear = group(abbr year)
 23.         sort abbr year
 24.         encode abbr, gen(statenum)
 25.         tsset statenum year, yearly
 26.         save ./stata_data/StateyearTop`x'AnalysisDataset.dta, replace
 27. }
. /// CREATE STATE*YEAR PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change Age_num cpi, by(year abbr)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. 
. fillin abbr year
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge 1:1 abbr year using stata_data/popEI.dta, keep(1 3) nogen
. label variable EI "Estate Tax Indicator"
. 
. merge 1:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. merge 1:1 abbr year using `EI_Tax', nogen keep(1 3)
. gen EIshare = EI_Tax/Total_Taxes
. 
. egen stateyear = group(abbr year)
. sort abbr year
. encode abbr, gen(statenum)
. tsset statenum year, yearly
. save ./stata_data/Stateyear10obsAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*AGE PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. gcollapse (count) stock=nameid (sum) wealth NetWorthMill (mean) pop_change gdp_change cpi, by(year abbr Age_num)
. label variable stock "Population of Forbes 400"
. label variable Age_num "Age"
. label variable wealth "Net Worth of Forbes 400 (billions 2017 dollars)"
. label variable NetWorthMill "Net Worth of Forbes 400 (billions nom. dollars)"
. *replace wealth = . if wealth == 0
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace Age_num = 96 if abbr=="AK"
. fillin abbr year Age_num
. 
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. 
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. encode abbr, gen(statenum)
. egen stateyear = group(abbr year)
. save ./stata_data/StateyearAgeAnalysisDataset.dta, replace
. 
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET
> foreach v in old old60 old70 old75 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if `v'==.
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr `v')
  5.         rename `v' old
  6. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  7.         replace abbr = "AK" if _n==1
  8.         replace year = 1982 if abbr=="AK"
  9.         replace old = 0 if abbr=="AK"
 10.         fillin abbr year old
 11.         replace wealth = 0 if _fillin | abbr=="AK"
 12.         replace stock = 0 if _fillin | abbr=="AK"
 13. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 14.         label variable EI "Estate Tax Indicator"
 15.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 16.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 17.         label variable avg "Top Personal Income Tax (PIT) Rate"
 18.         merge 1:1 State year old using `toppop_old', nogen keep(1 3)
 19. 
.         gen post=(year>`postyear')
 20.         label variable EI "ET-state"
 21.         label variable post "post-`postyear'"
 22.         gen EIxPost = EI*post
 23.         label variable EIxPost "ET-state X post-`postyear'"
 24.         gen avgxPost = avg*post
 25.         label variable avgxPost "PIT X post-`postyear'"
 26.         gen EIratecombinedxPost = EIratecombined*post
 27.         label variable EIratecombinedxPost "ET rate X post-`postyear'"
 28.         gen EIxold = EI*old
 29.         label variable EIxold "ET-state X old"
 30.         gen avgxold = avg*old
 31.         label variable avgxold "PIT X old"
 32.         gen oldxPost = old*post
 33.         label variable oldxPost "old X post-`postyear'"
 34.         gen EIxPostxold = EI*post*old
 35.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 36.         gen avgxPostxold = avg*post*old
 37.         label variable avgxPostxold "PIT X post-`postyear' X old"
 38.         gen EIratecombinedxPostxold = EIratecombined*post*old
 39.         label variable EIratecombinedxPostxold "ET rate X post-`postyear' X old"
 40.         egen stateold = group(abbr old)
 41. 
.         encode abbr, gen(statenum)
 42.         tsset stateold year, yearly
 43.         save ./stata_data/Stateyear`v'AnalysisDataset.dta, replace
 44. }
.         
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR TOP 100, 200, AND 300
> foreach x of num 100 200 300 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         drop if ourrank>`x'     
  4.         gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
  5. 
.         /// Add observations for AK, which had no billionaires over the entire sample period
>         insobs 1, before(1)
  6.         replace abbr = "AK" if _n==1
  7.         replace year = 1982 if abbr=="AK"
  8.         replace old = 0 if abbr=="AK"
  9.         fillin abbr year old
 10.         replace wealth = 0 if _fillin | abbr=="AK"
 11.         replace stock = 0 if _fillin | abbr=="AK"
 12. 
.         merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
 13.         label variable EI "Estate Tax Indicator"
 14.         merge m:1 abbr year using `PIT', nogen keep(1 3)
 15.         gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
 16.         label variable avg "Top PIT Rate"
 17. 
.         gen post=(year>`postyear')
 18.         label variable EI "ET-state"
 19.         label variable post "post-`postyear'"
 20.         gen EIxPost = EI*post
 21.         label variable EIxPost "ET-state X post-`postyear'"
 22.         gen EIxold = EI*old
 23.         label variable EIxold "ET-state X old"
 24.         gen oldxPost = old*post
 25.         label variable oldxPost "old X post-`postyear'"
 26.         gen EIxPostxold = EI*post*old
 27.         label variable EIxPostxold "ET-state X post-`postyear' X old"
 28.         egen stateold = group(abbr old)
 29. 
.         encode abbr, gen(statenum)
 30.         tsset stateold year, yearly
 31.         save ./stata_data/StateyearOldTop`x'AnalysisDataset.dta, replace
 32. }
. 
. /// CREATE STATE*YEAR*OLD PANEL DATA SET FOR FORBES INDIVIDUAL WITH AT LEAST 10 OBSERVATIONS
> use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observations for AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "Top PIT Rate"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. egen stateold = group(abbr old)
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly
. save ./stata_data/StateyearOld10obsAnalysisDataset.dta, replace
. 
. /// CREATE STATE*YEAR*OLD UNDER-40 PANEL DATA SET
> use ./stata_data/IndivAnalysisDataset.dta, clear
. keep if Age_num>=40
. gcollapse (count) stock=nameid (sum) wealth (mean) stateyear pop_change gdp_change, by(year abbr old)
. 
. /// Add observation AK, which had no billionaires over the entire sample period
> insobs 1, before(1)
. replace abbr = "AK" if _n==1
. replace year = 1982 if abbr=="AK"
. replace old = 0 if abbr=="AK"
. 
. fillin abbr year old
. replace wealth = 0 if _fillin | abbr=="AK"
. replace stock = 0 if _fillin | abbr=="AK"
. 
. merge m:1 abbr year using stata_data/popEI.dta, nogen keep(1 3)
. label variable EI "Estate Tax Indicator"
. merge m:1 abbr year using `PIT', nogen keep(1 3)
. gen avg = (State_Rate_Wages + State_Rate_Long_Gains)/2
. label variable avg "PIT"
. 
. gen post=(year>`postyear')
. label variable EI "ET-state"
. label variable post "post-`postyear'"
. gen EIxPost = EI*post
. label variable EIxPost "ET-state X post-`postyear'"
. gen EIxold = EI*old
. label variable EIxold "ET-state X old"
. gen EIxPostxold = EI*post*old
. label variable EIxPostxold "ET-state X post-`postyear' X old"
. gen oldxPost = old*post
. label variable oldxPost "old X post-`postyear'"
. egen stateold = group(abbr old)
. 
. gen avgxold = avg*old
. label variable avgxold "PIT X old"
. gen avgxPostxold = avg*post*old
. label variable avgxPostxold "PIT X post-`postyear' X old"
. gen avgxPost = avg*post
. label variable avgxPost "PIT X post-`postyear'"
. 
. encode abbr, gen(statenum)
. tsset stateold year, yearly     
. save ./stata_data/StateyearOldU40AnalysisDataset.dta, replace
. */
. }  //end BuildData IF code

. 
. 
. *********************************************** ANALYSES **********************************************************
. /// 1. ANALYSIS OF STATE*YEAR FORBES POPULATION
> if "$run2D" == "yes" {
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. 
. list abbr avg EI if year==2015
. bysort EI: sum avg
. bysort EI: sum State_Rate_Wages
. bysort EI: sum State_Rate_Long_Gains
. corr EI avg
. corr EI avg if avg>0
. corr EI State_Rate_Long_Gains
. corr EI State_Rate_Wages
. sum avg if EI==0 & year==`postyear'
. local mean0 = r(mean)
. histogram avg if EI==0 & year==`postyear', bin(25) xline(`mean0') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(wh
> ite))
. graph export ../tables/hist_avg_`postyear'_EI0.pdf, replace as(pdf)
. sum avg if EI==1 & year==`postyear'
. local mean1 = r(mean)
. histogram avg if EI==1 & year==`postyear', bin(25) xline(`mean1') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(wh
> ite))
. graph export ../tables/hist_avg_`postyear'_EI1.pdf, replace as(pdf)
. *histogram avg if year==`postyear', by(EI) bin(25) xline(`mean0') xline(`mean1')
. 
. sum avg if EI==0 & year==2017
. local mean0 = r(mean)
. histogram avg if EI==0 & year==2017, bin(25) xline(`mean0') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
. graph export ../tables/hist_avg_2017_EI0.pdf, replace as(pdf)
. sum avg if EI==1 & year==2017
. local mean1 = r(mean)
. histogram avg if EI==1 & year==2017, bin(25) xline(`mean1') xscale(range(0 15)) xlabels(0 2 4 6 8 10 12 14) graphregion(color(white))
. graph export ../tables/hist_avg_2017_EI1.pdf, replace as(pdf)
. *histogram avg if year==2017, by(EI) bin(25) xline(`mean0') xline(`mean1')
. *pause
. 
. /// PROBIT ANALYSIS OF ET ADOPTION
> gen post = (year>`postyear')
. label variable post "post-`postyear'"
. gen avgXpost = avg*post
. gen CITXpost = CIT_rate*post
. gen gdp_changeXpost = gdp_change*post
. label var gdp_change "Log Change in real GDP"
. label var CIT_rate "Top Corp. Income Tax (CIT) Rate"
. label var avgXpost "Top PIT Rate X post-2001"
. label var CITXpost "Top CIT Rate X post-2001"
. label var gdp_changeXpost "GDP Change X post-2001"
. eststo adopt1: reg EI avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)
.         estadd local yearFE       "No",   replace:   adopt1
.         estadd local stateFE      "No",   replace:   adopt1
. eststo adopt2: reg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, cluster(statenum)
.         estadd local yearFE       "Yes",   replace:   adopt2
.         estadd local stateFE      "No",   replace:   adopt2
. eststo adopt3: xtreg EI i.year avg CIT_rate gdp_change avgXpost CITXpost gdp_changeXpost, fe cluster(statenum)
.         estadd local yearFE       "Yes",   replace:   adopt3
.         estadd local stateFE      "Yes",   replace:   adopt3
. *logit EI avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, 
. *logit EI i.year avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, 
. *xtlogit EI i.year avg CIT_rate gdp_change c.avg#i.post c.CIT_rate#i.post c.gdp_change#i.post, fe 
. #delimit ;
delimiter now ;
.         esttab adopt1 adopt2 adopt3
>           using ../tables/adopt`postyear'.tex, replace se scalars(stateFE yearFE) drop(*year)
>                 noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0
> .1 ** 0.05 *** 0.01 )
>                 postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize Standard errors (clustered by state) in parentheses.}\\"
>                 "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
. #delimit cr
delimiter now cr
. 
. 
. /// MAPS
> preserve
. gen state = abbr
. keep if year<=`postyear'
. *keep if year==`postyear'
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../tables/Pre`postyear'_EImap.pdf, replace as(pdf)
. restore
. preserve
. gen state = abbr
. keep if year>`postyear'
. collapse (mean) EI, by(state)
. maptile EI, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 .5 .99)  twopt(legend(lab(2 "Never") lab(3 "Less than half") lab(4 "Mor
> e than half") lab(5 "All Years") ))
. graph export ../tables/Post`postyear'_EImap.pdf, replace as(pdf)
. restore
. /*
> preserve
> use "C:\ado\personal\maptile_geographies\statehex_database.dta", clear
> keep _polygonid state __label_X __label_Y
> tempfile centroid
> save `centroid'
> restore
> 
> foreach t of num 1983/2001 2003/2017 {
>         preserve
>         keep if year==`t'
>         gen state = abbr
>         gen statehex = abbr
>         label values stock .
>         egen natl_stock = total(stock)
>         gen share = stock/natl_stock
>         merge m:1 state using `centroid', nogen keep(1 3)
>         *maptile EI if year==`t', geo(statehex) geoid(state) ndfcolor(gray) nquantiles(2) twopt( legend( lab(2 "Non-ET") lab(3 "ET")  
> ) title("`t'") )
>         spmap EI using "C:\ado\personal\maptile_geographies\statehex_coords.dta" , id(_polygonid) clnumber(2) fcolor(BuRd) ///
>                 point(x(__label_X) y(__label_Y) proportional(share) fcolor(yellow))  ///
>                 label(x(__label_X) y(__label_Y) label(state) color(black))  ///
>                 legend( lab(2 "Non-ET") lab(3 "ET")  pos(5)) title("`t'")
>         *pause
>         qui graph export "s:/dan/Paper - Forbes/tables/EImap_`t'.png", replace as(png)
>         restore
> }
> */
. 
. /// TIME-SERIES GRAPH OF FORBES POPULATION IN EI VS NON-EI STATES
> preserve
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. reg stock i.year avg
. predict stockA, r
. collapse (mean) stock stockA `wealth', by(EI year)
. reshape wide stock stockA `wealth', i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. gen propA = stockA1/(stockA1 + stockA0)
. gen propW = `wealth'1/(`wealth'1 + `wealth'0)
. *twoway line prop /*stock1 stock0*/ year, legend(order(1 "Non-EI states" 2 "EI states")) xline(`postyear')
. twoway line prop year, title(Fraction of Forbes 400 Living in Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion(color(w
> hite))
. twoway line stockA1 year, title(Proportion of Forbes 400 Living in Estate Tax State) ytitle(Proportion)  xline(`postyear') graphregion
> (color(white))
. twoway line propW year, title(Fraction of Forbes 400 Wealth in Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion(color(
> white))
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. qui reg stock i.year
. predict stockA, r
. qui reg stock i.year i.statenum
. predict stockB, r
. qui reg stock i.year i.statenum avg
. predict stockC, r
. collapse (sum) stock stockA stockB stockC `wealth', by(EI`postyear' year)
. reshape wide stock stockA stockB stockC `wealth', i(year) j(EI`postyear')
. gen prop = (stock1/(stock1 + stock0))*100
. gen propA = stockA1/(stockA1 + stockA0)
. gen propW = `wealth'1/(`wealth'1 + `wealth'0)
. qui sum prop if year<=`postyear'
. gen premean = r(mean) if year<2002
. qui sum prop if year>`postyear'
. gen postmean = r(mean) if year>2002
. 
. twoway line prop premean postmean year, ytitle(Percentage) yscale(range(0 30)) xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyea
> r', lcolor(black)) graphregion(color(white)) ylabel(#10) lcolor(black red red) lpattern(solid dash dash) legend(off)
. graph export "../tables/ShareIn2001ET.pdf", replace as(pdf)
. *pause
. *twoway line prop year, title(Fraction of Forbes 400 Living in a `postyear' Estate Tax State /*legend(order(1 "States with EI in `post
> year'" 2 "States without EI in `postyear'"))*/ ytitle(Fraction) yscale(range(0 .22)) xline(`postyear') graphregion(color(white))
. *twoway line stock1 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Fraction) xline(`postyear') g
> raphregion(color(white))
. twoway line stock1 stock0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with ET
>  in `postyear'" 2 "States without ET in `postyear'")) xline(`postyear') graphregion(color(white))
. *twoway line stockA1 stockA0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on year
>  FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockA1 stockA0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on year FEs)  xline(`postyear') graphregion(color(white))
. *twoway line stockB1 stockB0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on year
>  and state FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockB1 stockB0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on year and state FEs)  xline(`postyear') graphregion(colo
> r(white))
. *twoway line stockC1 stockC0 year, title(Proportion of Forbes 400 Living in a `postyear' Estate Tax State) ytitle(Residualized on PIT 
> and year and state FEs)  xline(`postyear') graphregion(color(white))
. twoway line stockC1 stockC0 year, title("Mean # of Forbes 400 in State, by `postyear' Estate Tax Status") legend(order(1 "States with 
> ET in `postyear'" 2 "States without ET in `postyear'")) ytitle(Residualized on PIT and year and state FEs)  xline(`postyear') graphreg
> ion(color(white))
. /*
> reg prop i.year
> predict prop2, r
> twoway line prop2 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by year fixed effects)
> pause
> reg prop i.year i.statenum
> predict prop3, r
> twoway line prop3 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by year and state fixed effects)
> pause
> reg prop i.year i.statenum avg
> predict prop4, r
> twoway line prop4 year, title(Fraction of Forbes 400 Living in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregion
> (color(white)) note(residualized by PIT and year and state fixed effects)
> pause
> */
. *twoway line propW year, title(Fraction of Forbes 400 Wealth in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear') graphregio
> n(color(white))
. *pause
. 
. 
. /*
> gen interval = "1982-87" if inrange(year,1982,1987)
> replace interval = "1988-92" if inrange(year,1988,1992)
> replace interval = "1992-96" if inrange(year,1992,1996)
> replace interval = "1997-01" if inrange(year,1997,2001)
> replace interval = "2002-06" if inrange(year,2002,2006)
> replace interval = "2007-11" if inrange(year,2007,2011)
> replace interval = "2012-17" if inrange(year,2012,2017)
> collapse (sum) stock*, by(interval)
> gen prop = stock1/(stock1 + stock0)
> graph bar (asis) prop, over(interval)
> */
. restore
. 
. estpost sum stock wealth EI avg, detail
. esttab using "../tables/Summary_Stats_2.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median
> )) sd(fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label
. 
. ///Event Study Around EI switches
> preserve
. sort statenum year
. gen dEI = D.EI
. gen beta = .
. gen beta_lb = .
. gen beta_ub = .
. gen h = .
. gen zero = 0
. gen y = .
. local c = 0
. foreach h of num -3/5 {
  2.  local c = `c' + 1
  3.  *replace y = F`h'.stock - L1.stock
.  qui ivreg2 F(`h').stock dEI i.year i.statenum if year>2001, dkraay(3) partial(i.year i.statenum)
  4.  qui replace beta = _b[dEI] if _n==`c'
  5.  qui replace beta_lb = _b[dEI] - 1.65*_se[dEI] if _n==`c'
  6.  qui replace beta_ub = _b[dEI] + 1.65*_se[dEI] if _n==`c'
  7.  qui replace h = `h' if _n==`c'
  8. }
. twoway (rarea beta_lb beta_ub h, color(gs14)) (line beta h, color(black)) (line zero h, lcolor(black) lwidth(thin)) if inrange(h,-3,5)
> , xline(0, lcolor(black) lwidth(thin))
. *pause
. restore
. 
. /// B. DIFF-IN-DIFF (BEFORE/AFTER `postyear')
> replace avg = avg*100
. replace State_Rate_Wages = State_Rate_Wages*100
. replace State_Rate_Long_Gains =  State_Rate_Long_Gains*100
. 
. label variable EI "ET-state"
. label variable avg "PIT"
. gen EIxPost = EI*post
. gen avgxPost = avg*post
. gen EIratecombinedxPost = EIratecombined*post
. label variable EIxPost "ET-state X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. label variable EIratecombinedxPost "ET rate X post-`postyear'"
. gen logwealth = ln(wealth+.001)
. gen logstock = ln(stock)
. gen stockpc = (stock/pop)*1000
. gen logstockpc = log(stockpc)
. egen total_wealth = total(wealth), by(year)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. 
. foreach drop in no yes {
  2.         preserve
  3.   drop if stock==0 & "`drop'"=="yes"
  4. 
.         sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'
  5.         local baseline_stock = r(mean)
  6.         *pause
.   sum wealth if year>2001
  7.         local post_wealth_mean = r(mean)
  8.         sum wealth if year==2001
  9.         local pre_wealth_mean = r(mean)
 10.         sum wealth if year==2001 & EI==1, detail //yields baseline statewide wealth of billionaires pre-`postyear'
 11.         local baseline_wealth = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 12.         sum stockpc if year==2001 & EI==1       //yields baseline number of billionaires pre-`postyear'
 13.         local baseline_stockpc = r(mean)
 14.         sum wealth_share if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'
 15.         local baseline_wealth_share = r(mean)
 16.         sum wealth_normalized if year==2001 & EI==1 //yields baseline statewide wealth of billionaires pre-`postyear'
 17.         local baseline_wealth_normalized = r(mean)
 18. 
. /*
> eststo: ivreg2 `wealth' EIxPost `controls' EI post, dkraay(10)
> esttab using "../tables/wealth_EI.tex",replace  se star(* 0.10 ** 0.05 *** 0.01) label 
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> //Adding i.year
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> sleep 1000 //gives state time to finish esttab above before adding to it
> //Adding i.statenum
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> 
> sleep 1000
> //Adding PIT
> eststo: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum avgxPost avg, dkraay(10) partial(i.statenum i.year)
> esttab using "../tables/wealth_EI.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and State FE" "Ad
> d Pers Income Tax (PIT)")
> if "`wealth'" == "wealth"  di "Elasticity = " _b[EIxPost]/`baseline_wealth'
> eststo clear
> */
. 
.         eststo stock_EI1: ivreg2 stock EIxPost `controls' EI post, dkraay(10)
 19.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI1
 20.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI1
 21.         estadd local yearFE       "No",   replace:   stock_EI1
 22.         estadd local stateFE      "No",   replace:   stock_EI1
 23. 
.         //Adding i.year
.         eststo stock_EI2: ivreg2 stock EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
 24.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI2
 25.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI2
 26.         estadd local yearFE      "Yes",   replace:   stock_EI2
 27.         estadd local stateFE     "No",   replace:    stock_EI2
 28. 
.         sleep 1000 //gives stata time to finish esttab above before adding to it
 29.         //Adding i.statenum
.         eststo stock_EI3: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 30.         *ivreghdfe stock EIxPost `controls' EI , dkraay(10) absorb(i.statenum i.year i.statenum#c.year)
.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
 31.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3
 32.         estadd local yearFE      "Yes",   replace:   stock_EI3
 33.         estadd local stateFE     "Yes",   replace:   stock_EI3
 34. 
.         //Replace ET dummy with ET rate
.         eststo stock_EIrate3: ivreg2 stock EIratecombinedxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 35. *       eststo stock_EIrate3: ivreg2 stock EIratecombinedxPost `controls' i.year i.statenum, dkraay(10) partial(i.statenum i.year)
.         estadd local yearFE      "Yes",   replace:   stock_EIrate3
 36.         estadd local stateFE     "Yes",   replace:   stock_EIrate3
 37. *pause
. 
.         // Interact EIxPost with average billionaire wealth in the state-year
.         cap gen Avgwealth = wealth/stock
 38.         cap gen EIxPostxAvgwealth = EIxPost*Avgwealth
 39.         ivreg2 stock EIxPost EIxPostxAvgwealth `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 40. *pause
.         
.         sleep 1000
 41.         //poisson or NB
.         eststo stock_EI3b: xtpoisson stock EIxPost `controls' EI i.year, fe vce(robust)
 42.         estadd local elas = .,   replace:   stock_EI3b
 43.         estadd local stderr = .,   replace:   stock_EI3b
 44.         estadd local yearFE      "Yes",   replace:   stock_EI3b
 45.         estadd local stateFE     "Yes",   replace:   stock_EI3b
 46. 
.         //Change dep var to stock p.c.
.         eststo stock_EI9: ivreg2 stockpc EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 47.         estadd local elas = round((_b[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
 48.         estadd local stderr = round((_se[EIxPost]/`baseline_stockpc')*1000)/1000,   replace:   stock_EI9
 49.         estadd local yearFE      "Yes",   replace:   stock_EI9
 50.         estadd local stateFE     "Yes",   replace:   stock_EI9
 51. 
.         sleep 1000
 52.         //Adding PIT
.         eststo stock_EI4: ivreg2 stock EIxPost `controls' EI i.year i.statenum avgxPost avg, dkraay(10) partial(i.statenum i.year)
 53.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
 54.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI4
 55.         estadd local yearFE      "Yes",  replace:   stock_EI4
 56.         estadd local stateFE     "Yes",  replace:   stock_EI4
 57. 
.         //Control for ordinary high earner population
.         egen pop_90to97_natl = total(pop_90to97), by(year)
 58.         gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
 59.         label var topshr_90to97 "High earners share"
 60.         eststo stock_EI10: ivreg2 stock EIxPost `controls' EI i.year i.statenum topshr_90to97, dkraay(10) partial(i.statenum i.year
> )
 61.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
 62.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI10
 63.         estadd local yearFE      "Yes",  replace:   stock_EI10
 64.         estadd local stateFE     "Yes",  replace:   stock_EI10
 65.         // Try placebo check
.         ivreg2 topshr_90to97 EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 66. *       pause
. 
. /*
> //Fix post-`postyear' EI values at `postyear' values
> gen EItrue = EI
> gen EIxPosttrue = EIxPost
> levelsof abbr if year==`postyear' & EI==1, local(temp)
> cap di "`temp'"
> replace EI = 0
> replace EIxPost = 0
> foreach s of local temp {
>         di "`s'"
>         replace EI = 1 if abbr == "`s'" & year>=`postyear'
> }
> replace EIxPost = EI*post
> eststo stock_EI5: ivreg2 stock EIxPost `controls' EI i.year, dkraay(10) partial(i.year)
> estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
> estadd local yearFE       "Yes",   replace:    stock_EI5
> estadd local stateFE      "No",   replace:    stock_EI5
> replace EI = EItrue
> replace EIxPost = EIxPosttrue
> drop *true
> */
.         //Reduced-Form reg replacing post-`postyear' EI with 2001 EI
.         levelsof abbr if year==2001 & EI==1, local(temp)
 67.         gen EI2001 = 0
 68.         foreach s of local temp {
 69.                 di "`s'"
 70.                 replace EI2001 = 1 if abbr == "`s'" & year>=2001
 71.         }
 72.         
.         gen EI2001xPost = EI2001*post
 73.         label variable EI2001xPost "ET-state-2001 X post-2001"
 74.         eststo stock_EI5: ivreg2 stock  `controls' EI2001 EI2001xPost i.year i.statenum, dkraay(10) partial(i.year i.statenum)
 75.         estadd local elas = round((_b[EI2001xPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
 76.         estadd local stderr = round((_se[EI2001xPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI5
 77.         estadd local yearFE       "Yes",   replace:    stock_EI5
 78.         estadd local stateFE      "Yes",   replace:    stock_EI5
 79. 
.         eststo stock_EI6: ivreg2 stock  `controls' i.year i.statenum (EI EIxPost = EI2001 EI2001xPost), dkraay(10) partial(i.year i.st
> atenum) first endog(EI EIxPost)
 80.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
 81.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI6
 82.         estadd local yearFE       "Yes",   replace:    stock_EI6
 83.         estadd local stateFE      "Yes",   replace:    stock_EI6
 84. 
.         eststo stock_EI7: ivreg2 `wealth' EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 85.         if "`wealth'" == "logwealth" estadd local elas = round((_b[EIxPost])*1000)/1000,   replace:   stock_EI7
 86.         if "`wealth'" == "wealth"        estadd local elas = round((_b[EIxPost]/`baseline_wealth')*1000)/1000,   replace:   stock_E
> I7
 87.         if "`wealth'" == "wealth_normalized"     estadd local elas = round((_b[EIxPost]/`baseline_wealth_normalized')*1000)/1000, r
> eplace:   stock_EI7
 88.         if "`wealth'" == "logwealth" estadd local stderr = round((_se[EIxPost])*1000)/1000,   replace:   stock_EI7
 89.         if "`wealth'" == "wealth"        estadd local stderr = round((_se[EIxPost]/`baseline_wealth')*1000)/1000,   replace:   stoc
> k_EI7
 90.         if "`wealth'" == "wealth_normalized"     estadd local stderr = round((_se[EIxPost]/`baseline_wealth_normalized')*1000)/1000
> , replace:   stock_EI7
 91.         estadd local yearFE      "Yes",   replace:   stock_EI7
 92.         estadd local stateFE     "Yes",   replace:   stock_EI7
 93.         
.   //Drop NY
.         eststo stock_EI3d: ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="NY", dkraay(10) partial(i.statenum i.year)
 94.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3d
 95.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3d
 96.         estadd local yearFE      "Yes",   replace:   stock_EI3d
 97.         estadd local stateFE     "Yes",   replace:   stock_EI3d
 98. 
.   //Drop PA
.         eststo stock_EIxPA: ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="PA", dkraay(10) partial(i.statenum i.year)
 99.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EIxPA
100.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EIxPA
101.         estadd local yearFE      "Yes",   replace:   stock_EIxPA
102.         estadd local stateFE     "Yes",   replace:   stock_EIxPA
103.         pause
104. 
.         //Drop each ET state (shown in Figure 1B) one at a time 
.         local i=1
105.         qui ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
106.         lincom EIxPost
107.         gen beta=r(estimate) if _n==`i'
108.         gen ub = r(ub) if _n==`i'
109.         gen lb = r(lb) if _n==`i'
110.         gen n = `i' if _n==`i'
111.         label define n `i' "None", add
112.         foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
113.           local ++i
114.                 qui ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="`s'", dkraay(10) partial(i.statenum i.year)
115.                 di "State: `s'"
116.                 *sum EIxPost if abbr=="`s'" & post==1
.                 lincom EIxPost
117.                 *pause
.                 replace beta=r(estimate) if _n==`i'
118.                 replace ub = r(ub) if _n==`i'
119.                 replace lb = r(lb) if _n==`i'
120.                 replace n = `i' if _n==`i'
121.                 label define n `i' "`s'", add
122.         }
123.         label values n n
124.         #delimit ;
delimiter now ;
.         twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
>                 xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
>                 ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
>                 yscale(range(-5 1)) ylabel(-5(1)1, nogrid)
>                 ;
125.         #delimit cr
delimiter now cr
.         graph export ../tables/DD_drop_each_ET_state_drop0`drop'.pdf, replace as(pdf)
126.         drop beta ub lb n
127.         
.   //Drop CA
.         ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="CA", dkraay(10) partial(i.statenum i.year)
128. *       pause
.   //Drop PA
.         ivreg2 stock EIxPost `controls' EI i.year i.statenum if abbr~="PA", dkraay(10) partial(i.statenum i.year)
129. *       pause
.         
.         //Drop phase-out period (2002-2004)
.         eststo stock_EI3e: ivreg2 stock EIxPost `controls' EI i.year i.statenum if inrange(year,2002,2004)==0, dkraay(10) partial(i.st
> atenum i.year)
130.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
131.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3e
132.         estadd local yearFE      "Yes",   replace:   stock_EI3e
133.         estadd local stateFE     "Yes",   replace:   stock_EI3e
134. 
.         //Use only post period
.         eststo stock_EI3f: ivreg2 stock EI2001 `controls' i.year i.statenum if year>`postyear', dkraay(10) partial(i.statenum i.year)
135.         estadd local elas = round((_b[EI2001]/`baseline_stock')*1000)/1000,   replace:   stock_EI3f
136.         estadd local stderr = round((_se[EI2001]/`baseline_stock')*1000)/1000,   replace:   stock_EI3f
137.         estadd local yearFE      "Yes",   replace:   stock_EI3f
138.         estadd local stateFE     "Yes",   replace:   stock_EI3f
139.         
.         //Count Inheritance-tax-only cases as EI=1 (be sure to do this reg last because it changes EI data)
.         replace EI = 1 if Ionly==1
140.         eststo stock_EI3c: ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
141.         estadd local elas = round((_b[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
142.         estadd local stderr = round((_se[EIxPost]/`baseline_stock')*1000)/1000,   replace:   stock_EI3c
143.         estadd local yearFE      "Yes",   replace:   stock_EI3c
144.         estadd local stateFE     "Yes",   replace:   stock_EI3c
145.         
.   if "`drop'"=="yes" {
146.                 #delimit ;
delimiter now ;
.                 esttab /*stock_EI1 stock_EI2*/ stock_EI3 stock_EI4 stock_EI10 stock_EI6 stock_EI9 stock_EI7 stock_EI3c stock_EI3e stoc
> k_EIrate3
>                   using ../tables/stock_EI`postyear'.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "IV" "Per Capita
> " "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate") /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" yearFE "Year Fixe
> d Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. IV regression instruments for ET-state\textsubscript{s,t}} \\" 
>                         "\multicolumn{9}{l}{\footnotesize and its interactions using a variable (and its corresponding interactions) e
> qual to ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001}} \\"
>                         "\multicolumn{9}{l}{\footnotesize  for t$\geq$2001.  \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.
> 01\)}  \end{tabular} }");
147.                 #delimit cr
delimiter now cr
.                 }
148.         if "`drop'"=="no" {
149.                 #delimit ;
delimiter now ;
.                 esttab /*stock_EI1 stock_EI2*/ stock_EI3 stock_EI4 stock_EI10 stock_EI6 stock_EI9 stock_EI7 stock_EI3c stock_EI3e stoc
> k_EIrate3
>                   using ../tables/stock_EI`postyear'with0.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "" "IV" "Pe
> r Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate") /*drop(*year *cons)*/
>                 noconstant label compress substitute(0000000000001 "" \_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" 
> yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. IV regression instruments for ET-state\textsubscript{s,t}} \\" 
>                         "\multicolumn{9}{l}{\footnotesize and its interactions using a variable (and its corresponding interactions) e
> qual to ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,2001}} \\"
>                         "\multicolumn{9}{l}{\footnotesize  for t$\geq$2001.  \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.
> 01\)}  \end{tabular} }");
150.                 esttab stock_EI3 stock_EI4 stock_EI6
>                   using ../tables/stock_EI`postyear'with0_ForSlides.tex, replace se scalars(elas stderr stateFE yearFE) mtitle("" "" "
> IV") /*drop(*year *cons)*/
>                 noconstant label compress substitute(0000000000001 "" \_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}" 
> yearFE "Year Fixed Effects" stateFE "State Fixed Effects" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} 
> \(p<0.01\)}  \end{tabular} }");
151.                 #delimit cr
delimiter now cr
.         }
152. 
.         //Restrict to top 100, 200, 300, or 10+ observations
.   local m = 10
153.   foreach x in Top100 Top200 Top300 10obs {
154.                 use ./stata_data/Stateyear`x'AnalysisDataset.dta, clear
155.                 gen post = (year>`postyear')
156.         drop if stock==0 & "`drop'"=="yes"
157.                 sum stock if year==2001 & EI==1 //yields baseline number of billionaires pre-`postyear'
158.                 local baseline_stock`x' = r(mean)
159.                 label variable post "post-`postyear'"
160.                 label variable EI "ET-state"
161.                 gen EIxPost = EI*post
162.                 label variable EIxPost "ET-state X post-`postyear'"
163.                 label variable avg "PIT"
164.                 gen avgxPost = avg*post
165.                 label variable avgxPost "PIT X post-`postyear'"
166.                 eststo stock_EI`m': ivreg2 stock EIxPost `controls' EI i.year i.statenum, dkraay(10) partial(i.statenum i.year)
167.                 estadd local elas = round((_b[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
168.                 estadd local stderr = round((_se[EIxPost]/`baseline_stock`x'')*1000)/1000,   replace:   stock_EI`m'
169.                 estadd local yearFE      "Yes",   replace:   stock_EI`m'
170.                 estadd local stateFE     "Yes",   replace:   stock_EI`m'
171.                 local m = `m'+1
172.         }
173.   if "`drop'"=="yes" {
174.                 #delimit ;
delimiter now ;
.                 esttab stock_EI10 stock_EI11 stock_EI12 stock_EI13
>                   using ../tables/stock_EI`postyear'TopX.tex, replace se scalars(elas stderr) mtitle("Top 100" "Top200" "Top300" "10+ 
> Obs" ) /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}") star(* 0.1 ** 0.
> 05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses.} \\" 
>                         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
175.                 #delimit cr
delimiter now cr
.         }
176.   if "`drop'"=="no" {
177.                 #delimit ;
delimiter now ;
.                 esttab stock_EI10 stock_EI11 stock_EI12 stock_EI13
>                   using ../tables/stock_EI`postyear'TopXwith0.tex, replace se scalars(elas stderr) mtitle("Top 100" "Top200" "Top300" 
> "10+ Obs" ) /*drop(*year *cons)*/
>                 noconstant label compress substitute(\_ _  elas "Semi-elasticity" stderr "\quad \textit{Std. Error}") star(* 0.1 ** 0.
> 05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses.} \\" 
>                         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
178.                 #delimit cr
delimiter now cr
.         }
179.   restore
180. }
. } // end Run2D IF code

. 
. 
. /// 2. ANALYSIS OF STATE*YEAR*OLD FORBES POPULATION
> if "$run3D" == "yes" {
. use ./stata_data/StateyearoldAnalysisDataset.dta, clear
. local v ""
. *use ./stata_data/Stateyearold70AnalysisDataset.dta, clear
. *local v "70"
. *use ./stata_data/Stateyearold75AnalysisDataset.dta, clear
. *local v "75"
. *use ./stata_data/Stateyearold60AnalysisDataset.dta, clear
. *local v "60"
. 
. preserve
. collapse (sum) stock, by(EI year old)
. keep if old
. reshape wide stock, i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Old Forbes 400 Living in ET State)
. *pause
. restore
. preserve
. collapse (sum) stock, by(EI year old)
. keep if old==0
. reshape wide stock, i(year) j(EI)
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Young Forbes 400 Living in ET State)
. *pause
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. collapse (sum) stock, by(EI`postyear' year old)
. keep if old==1
. reshape wide stock, i(year) j(EI`postyear')
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Old Forbes 400 Living in 2001 ET State) yscale(range(0 .3)) ylabel(#10)
. *pause
. restore
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. collapse (sum) stock, by(EI`postyear' year old)
. keep if old==0
. reshape wide stock, i(year) j(EI`postyear')
. gen prop = stock1/(stock1 + stock0)
. twoway line prop year, xline(`postyear') title(Fraction of Young Forbes 400 Living in 2001 ET State) yscale(range(0 .3)) ylabel(#10)
. *pause
. restore
. 
. preserve
. gen dum`postyear' = (year==`postyear')
. gen x = EI*dum`postyear'
. egen EI`postyear' = max(x), by(abbr)
. egen total_wealth = total(wealth), by(year old)
. gen wealth_share = (wealth/total_wealth)*100
. sum total_wealth if year==2017
. gen wealth_normalized = (wealth)*(r(mean)/total_wealth)   //rescale each state-year's wealth so national total is constant over time (
> equal to 2017 national total).
. qui reg stock i.year
. predict stockA, r
. qui reg stock i.year avg
. predict stockC, r
. collapse (mean) stock stockA stockC `wealth', by(EI`postyear' year old)
. reshape wide stock stockA stockC `wealth', i(year old) j(EI`postyear')
. reshape wide stock* `wealth'*, i(year) j(old) 
. label var stock11 stockETold
. label var stock01 stockNonETold
. label var stock10 stockETyoung
. label var stock00 stockNonETyoung
. twoway (line stock11 stock01 stock10 stock00 year),  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphre
> gion(color(white))
. *pause
. 
. foreach a of numlist 1 0 {
  2.         gen prop`a' = /*stock1`a'/(stock1`a' + stock0`a')*/ stock1`a' - stock0`a'
  3.         gen propA`a' = /*stockA1`a'/(stockA1`a' + stockA0`a')*/ stockA1`a' - stockA0`a'
  4.         gen propC`a' = /*stockC1`a'/(stockC1`a' + stockC0`a')*/ stockC1`a' - stockC0`a'
  5.         gen propW`a' = `wealth'1`a'/(`wealth'1`a' + `wealth'0`a')
  6. }
. rename prop1 propETold
. rename prop0 propETyoung
. rename propA1 propAETold
. rename propA0 propAETyoung
. rename propC1 propCETold
. rename propC0 propCETyoung
. twoway (line propETold year) (line propETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, ax
> is(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregion(
> color(white))
. *pause
. twoway (line propAETold year) (line propAETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, 
> axis(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregio
> n(color(white))
. *pause
. twoway (line propCETold year) (line propCETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, 
> axis(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregio
> n(color(white))
. *pause
. twoway (line propETold year) (line propETyoung year, yaxis(2)), yscale(axis(2) range(0 .3)) yscale(axis(1) range(0 .3)) ylabel(#10, ax
> is(1)) ylabel(#10, axis(2)) ytitle(Percentage)  xline(`postyear'(.01)2004, lcolor(gs14)) xline(`postyear', lcolor(black)) graphregion(
> color(white))
. twoway line propW1 propW0 year, title(Proportion of Old Forbes 400 Wealth in a 2001 Estate Tax State) ytitle(Fraction) xline(`postyear
> ') graphregion(color(white))
. restore
. 
. ///Event Study Around EI switches
> preserve
. gen dEI = D.EI
. gen beta = .
. gen beta_lb = .
. gen beta_ub = .
. gen h = .
. gen zero = 0
. gen y = .
. local c = 0
. foreach h of num -3/5 {
  2.  local c = `c' + 1
  3.  *replace y = F`h'.stock - L1.stock
.  qui ivreg2 F(`h').stock dEI i.year i.statenum if year>2001 & old, dkraay(3) partial(i.year i.statenum)
  4.  qui replace beta = _b[dEI] if _n==`c'
  5.  qui replace beta_lb = _b[dEI] - 1.65*_se[dEI] if _n==`c'
  6.  qui replace beta_ub = _b[dEI] + 1.65*_se[dEI] if _n==`c'
  7.  qui replace h = `h' if _n==`c'
  8. }
. twoway (rarea beta_lb beta_ub h, color(gs14)) (line beta h, color(black)) (line zero h, lcolor(black) lwidth(thin)) if inrange(h,-3,5)
> , xline(0, lcolor(black) lwidth(thin))
. restore
. 
. 
. *`drop_condition'
. foreach drop in no yes {
  2.   preserve
  3.   drop if stock==0 & "`drop'"=="yes"
  4. 
.         gen stockpc = (stock/pop)*1000
  5.         sum stock if year==2001 & EI==1 & old==1        //yields baseline number of old billionaires pre-`postyear'
  6.         local baseline_stock_old = r(mean)
  7.         sum stock if year==2001 & EI==1 & old==0        //yields baseline number of young billionaires pre-`postyear'
  8.         local baseline_stock_young = r(mean)
  9.         sum stockpc if year==2001 & EI==1 & old==1      //yields baseline number of old billionaires p.c. pre-`postyear'
 10.         local baseline_stockpc_old = r(mean)
 11.         sum stockpc if year==2001 & EI==1 & old==0      //yields baseline number of young billionaires p.c. pre-`postyear'
 12.         local baseline_stockpc_young = r(mean)
 13.   sum wealth if year>2001
 14.         local post_wealth_mean = r(mean)
 15.         sum wealth if year==2001
 16.         local pre_wealth_mean = r(mean)
 17.         sum wealth if year==2001 & EI==1 & old==1, detail //yields baseline statewide wealth of old billionaires pre-`postyear'
 18.         local baseline_wealth_old = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 19.         sum wealth if year==2001 & EI==1 & old==0, detail //yields baseline statewide wealth of young billionaires pre-`postyear'
 20.         local baseline_wealth_young = r(mean)*(`post_wealth_mean'/`pre_wealth_mean')
 21. 
.         egen total_wealth = total(wealth), by(year)
 22.         sum total_wealth if year==2001 & old==1
 23.         sum total_wealth if year==2017 & old==1 
 24.         gen wealth_normalized = (wealth)*(r(mean)/(total_wealth))   //rescale each state-year-generation's wealth so national total
>  is constant over time (equal to 2017 national total).
 25.   sum wealth_normalized if year==2001 & EI==1 & old==1
 26.         local baseline_wealth_normalized_old = r(mean)
 27.   sum wealth_normalized if year==2001 & EI==1 & old==0
 28.         local baseline_wealth_normalized_yng = r(mean)
 29.         
.         /// A. TRIPLE-DIFF REGRESSIONS (BEFORE/AFTER AND OLD/YOUNG)
>         eststo stock_EI_old1: ivreg2 stock `controls' EIxPostxold EIxold EIxPost EI old post,  dkraay(10)
 30.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old1
 31.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old1
 32.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 1
 33.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 34.   local stderr_old = round(_se[elas_old]*1000)/1000
 35.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old1
 36.         estadd local yearFE      "No",   replace:   stock_EI_old1
 37.         estadd local stateFE     "No",   replace:   stock_EI_old1
 38.         
.         //Adding i.year
.         eststo stock_EI_old2: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year, dkraay(10) partial(i.year)
 39.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
 40.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old2
 41.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 2
 42.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 43.   local stderr_old = round(_se[elas_old]*1000)/1000
 44.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old2
 45.         estadd local yearFE      "Yes",   replace:   stock_EI_old2
 46.         estadd local stateFE     "No",   replace:   stock_EI_old2
 47. 
.         //Adding i.statenum
. *       eststo stock_EI_old3: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum i.statenum#c.year, 
> dkraay(10) partial(i.year i.statenum i.statenum#c.year)
.         eststo stock_EI_old3: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partial
> (i.year i.statenum)
 48.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3
 49.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3
 50.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3
 51.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 52.   local stderr_old = round(_se[elas_old]*1000)/1000
 53.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3
 54.         estadd local yearFE      "Yes",   replace:   stock_EI_old3
 55.         estadd local stateFE     "Yes",   replace:   stock_EI_old3
 56. 
.         //Replace ET dummy with ET rate
.         label var EIratecombinedxPostxold  "ET rate X post-2001 X old"
 57.         label var EIratecombinedxPost "ET rate X post-2001"
 58.         eststo stock_EIrate_old3: ivreg2 stock `controls' EIratecombinedxPostxold EIxold EIratecombinedxPost oldxPost EI old i.year
>  i.statenum, dkraay(10) partial(i.year i.statenum)
 59. *       eststo stock_EIrate_old3: ivreg2 stock `controls' EIratecombinedxPostxold EIratecombinedxPost oldxPost old i.year i.statenu
> m, dkraay(10) partial(i.year i.statenum)
.         estadd local yearFE      "Yes",   replace:   stock_EIrate_old3
 60.         estadd local stateFE     "Yes",   replace:   stock_EIrate_old3
 61. *pause  
.         
.         //Adding PIT
.         label var avgxPostxold  "PIT X post-2001 X old"
 62.         label var avgxold  "PIT X old"
 63.         label var avgxPost  "PIT X post-2001"
 64.         label var avg "PIT"
 65.         eststo stock_EI_old4: ivreg2 stock `controls' EIxPostxold EIxold EIxPost avgxPostxold avgxold avgxPost oldxPost EI avg old 
> i.year i.statenum, dkraay(10) partial(i.statenum i.year)
 66.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
 67.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old4
 68.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 4
 69.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 70.   local stderr_old = round(_se[elas_old]*1000)/1000
 71.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old4
 72.         estadd local yearFE      "Yes",  replace:   stock_EI_old4
 73.         estadd local stateFE     "Yes",  replace:   stock_EI_old4
 74. 
.         //Control for ordinary high earners
.         egen pop_90to97_natl = total(pop_90to97), by(year old)
 75.         gen topshr_90to97 = (pop_90to97/pop_90to97_natl)*100
 76.         label var topshr_90to97 "High earners share"
 77.         eststo stock_EI_old20: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old topshr_90to97 i.year i.statenum, 
> dkraay(10) partial(i.statenum i.year)
 78.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
 79.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old20
 80.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 20
 81.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
 82.   local stderr_old = round(_se[elas_old]*1000)/1000
 83.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old20
 84.         estadd local yearFE      "Yes",  replace:   stock_EI_old20
 85.         estadd local stateFE     "Yes",  replace:   stock_EI_old20
 86.         // Try placebo check
.         *ivreg2 topshr_90to97 `controls' EIxPostxold EIxold EIxPost /*avgxPostxold avgxold avgxPost*/ oldxPost EI /*avg*/ old i.year i
> .statenum, dkraay(10) partial(i.statenum i.year)
.         *pause
.         
.         //wealth
.         eststo stock_EI_old7: ivreg2 `wealth' `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) part
> ial(i.statenum i.year)
 87.         if "`wealth'" == "logwealth" estadd local elas = round((_b[EIxPostxold])*1000)/1000,   replace:   stock_EI_old7
 88.         if "`wealth'" == "wealth"        estadd local elas = round((_b[EIxPostxold]/`baseline_wealth_old')*1000)/1000,   replace:  
>  stock_EI_old7
 89.         if "`wealth'" == "wealth_normalized" {
 90.                 estadd local elas_young = round((_b[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI_ol
> d7
 91.                 estadd local stderr_young = round((_se[EIxPost]/`baseline_wealth_normalized_yng')*1000)/1000,   replace:   stock_EI
> _old7
 92.                 estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old')*1000)/1000,   rep
> lace:   stock_EI_old7
 93.                 nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_wealth_normalized_old', post
 94.                 local stderr_old = round(_se[elas_old]*1000)/1000
 95.                 estadd local stderr_old = `stderr_old',   replace:   stock_EI_old7
 96.         }       
 97.         estadd local yearFE      "Yes",   replace:   stock_EI_old7
 98.         estadd local stateFE     "Yes",   replace:   stock_EI_old7
 99. *di "elas = " round((_b[EIxPostxold]/`baseline_wealth_normalized_old')*1000)/1000
. *pause
.         
.         //poisson
.         eststo stock_EI_old8: poisson stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year, vce(robust)
100.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old8
101.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old8
102.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 8
103.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
104.   local stderr_old = round(_se[elas_old]*1000)/1000
105.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old8
106.         estadd local stderr = round((_se[EIxPostxold]/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old8
107.         estadd local yearFE      "Yes",   replace:   stock_EI_old8
108.         estadd local stateFE     "Yes",   replace:   stock_EI_old8
109. 
.         //Change dep var to stock p.c.
.         eststo stock_EI_old9: ivreg2 stockpc `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) parti
> al(i.year i.statenum)
110.         estadd local elas_young = round((_b[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
111.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stockpc_young')*1000)/1000,   replace:   stock_EI_old9
112.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old')*1000)/1000,   replace:   stock_EI_o
> ld9
113.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stockpc_old', post
114.   local stderr_old = round(_se[elas_old]*1000)/1000
115.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old9
116.         estadd local yearFE      "Yes",   replace:   stock_EI_old9
117.         estadd local stateFE     "Yes",   replace:   stock_EI_old9
118. 
.         //Instrument post-2001 EI with 2001 EI
.         levelsof abbr if year==2001 & EI==1, local(temp)
119.         gen EI2001 = 0
120.         foreach s of local temp {
121.                 di "`s'"
122.                 replace EI2001 = 1 if abbr == "`s'" & year>=2001
123.         }
124.         gen EI2001xPost = EI2001*post
125.         gen EI2001xPostxold = EI2001xPost*old
126.         gen EI2001xold = EI2001*old
127.         eststo stock_EI_old6: ivreg2 stock  `controls' oldxPost old i.year i.statenum (EI EIxold EIxPost EIxPostxold = EI2001 EI200
> 1xold EI2001xPost EI2001xPostxold), dkraay(10) partial(i.year i.statenum)
128.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
129.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old6
130.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 6
131.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
132.   local stderr_old = round(_se[elas_old]*1000)/1000
133.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old6
134.         estadd local yearFE       "Yes",   replace:    stock_EI_old6
135.         estadd local stateFE      "Yes",   replace:    stock_EI_old6
136.         
.         //Drop NY
.         eststo stock_EI_old3d: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="NY", dkr
> aay(10) partial(i.year i.statenum)
137.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3d
138.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3d
139.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3d
140.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
141.   local stderr_old = round(_se[elas_old]*1000)/1000
142.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3d
143.         estadd local yearFE      "Yes",   replace:   stock_EI_old3d
144.         estadd local stateFE     "Yes",   replace:   stock_EI_old3d
145. 
.         //Drop PA
.         eststo stock_EI_oldxPA: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="PA", dk
> raay(10) partial(i.year i.statenum)
146.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_oldxPA
147.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_oldxPA
148.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> xPA
149.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
150.   local stderr_old = round(_se[elas_old]*1000)/1000
151.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_oldxPA
152.         estadd local yearFE      "Yes",   replace:   stock_EI_oldxPA
153.         estadd local stateFE     "Yes",   replace:   stock_EI_oldxPA
154. 
.         //Drop each ET state (shown in Figure 1B) one at a time 
.         local i=1
155.         qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partial(i.year i.state
> num)
156.         lincom EIxPostxold
157.         gen beta=r(estimate) if _n==`i'
158.         gen ub = r(ub) if _n==`i'
159.         gen lb = r(lb) if _n==`i'
160.         gen n = `i' if _n==`i'
161.         label define n `i' "None", add
162.         foreach s in WA OR HI OK KS MN WI IL OH NC VA MD DE PA NJ NY CT RI MA VT ME {
163.           local ++i
164.                 qui ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if abbr~="`s'", dkraay(10)
>  partial(i.year i.statenum)
165.                 di "State: `s'"
166.                 lincom EIxPostxold
167.                 replace beta=r(estimate) if _n==`i'
168.                 replace ub = r(ub) if _n==`i'
169.                 replace lb = r(lb) if _n==`i'
170.                 *replace s = "`s'"
.                 replace n = `i' if _n==`i'
171.                 label define n `i' "`s'", add
172.         }
173.         label values n n
174.         #delimit ;
delimiter now ;
.         twoway (rcap ub lb n, lcolor(ltblue)) (scatter beta n, mcolor(blue)) if inrange(n,1,`i'), 
>                 xlabel(1(1)`i',valuelabel alternate) xtitle(Excluded ET State) legend(off) graphregion(color(white))
>                 ytitle(Point Estimate and 95% Confidence Interval) yline(0, lcolor(black)) 
>                 yscale(range(-3 1)) ylabel(-3(1)1)
>                 ;
175.         #delimit cr
delimiter now cr
.         graph export ../tables/DDD_drop_each_ET_state_drop0`drop'`v'.pdf, replace as(pdf)
176.         
.         //Drop phase-out period (2002-2004)
.         eststo stock_EI_old3e: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum if inrange(year,20
> 02,2004)==0, dkraay(10) partial(i.year i.statenum)
177.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
178.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3e
179.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3e
180.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
181.   local stderr_old = round(_se[elas_old]*1000)/1000
182.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3e
183.         estadd local yearFE      "Yes",   replace:   stock_EI_old3e
184.         estadd local stateFE     "Yes",   replace:   stock_EI_old3e
185. 
.         //Use only post period
.         eststo stock_EI_old3f: ivreg2 stock `controls' EIxold EI old i.year i.statenum if year>`postyear', dkraay(10) partial(i.year i
> .statenum)
186.         estadd local elas = round((_b[EIxold]/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old3f
187.         estadd local yearFE      "Yes",   replace:   stock_EI_old3f
188.         estadd local stateFE     "Yes",   replace:   stock_EI_old3f
189.         
.         //Count Inheritance-tax-only cases as EI=0
.         replace EI = 1 if Ionly==1
190.         eststo stock_EI_old3c: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) par
> tial(i.year i.statenum)
191.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
192.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old3c
193.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 3c
194.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
195.   local stderr_old = round(_se[elas_old]*1000)/1000
196.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old3c
197.         estadd local yearFE      "Yes",   replace:   stock_EI_old3c
198.         estadd local stateFE     "Yes",   replace:   stock_EI_old3c
199. 
.         //Restrict to top 100, 200, 300, or 10+ observations
.   local m = 10
200.   foreach x in Top100 Top200 Top300 10obs {
201.           use ./stata_data/StateyearOld`x'AnalysisDataset.dta, clear
202.         drop if stock==0 & "`drop'"=="yes"
203.                 sum stock if year==2001 & EI==1 & old==1        //yields baseline number of billionaires pre-`postyear'
204.                 local baseline_stock_old = r(mean)
205.                 eststo stock_EI_old`m': ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraa
> y(10) partial(i.year i.statenum)
206.                 estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
207.                 estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old`m'
208.                 estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stoc
> k_EI_old`m'
209.                 nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
210.                 local stderr_old = round(_se[elas_old]*1000)/1000
211.                 estadd local stderr_old = `stderr_old',   replace:   stock_EI_old`m'
212.                 estadd local yearFE      "Yes",   replace:   stock_EI_old`m'
213.                 estadd local stateFE     "Yes",   replace:   stock_EI_old`m'
214.                 local m = `m'+1
215.         }
216. 
.         
.         //Exclude Forbes pop under 40
.         use ./stata_data/StateyearOldU40AnalysisDataset.dta, clear
217. 
.         *`drop_condition'
.         eststo stock_EI_old40: ivreg2 stock `controls' EIxPostxold EIxold EIxPost oldxPost EI old i.year i.statenum, dkraay(10) partia
> l(i.year i.statenum)
218.         estadd local elas_young = round((_b[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old40
219.         estadd local stderr_young = round((_se[EIxPost]/`baseline_stock_young')*1000)/1000,   replace:   stock_EI_old40
220.         estadd local elas_old = round(((_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old')*1000)/1000,   replace:   stock_EI_old
> 40
221.         nlcom elas_old: (_b[EIxPostxold] +  _b[EIxPost])/`baseline_stock_old', post
222.   local stderr_old = round(_se[elas_old]*1000)/1000
223.         estadd local stderr_old = `stderr_old',   replace:   stock_EI_old40
224.         estadd local yearFE      "Yes",   replace:   stock_EI_old40
225.         estadd local stateFE     "Yes",   replace:   stock_EI_old40
226. 
.         if "`drop'"=="yes" {
227.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old6 stock_EI_old9 stock_EI_old7 stock_EI_old3c stock_EI_old3e stock_EIrat
> e_old3
>         using ../tables/stock_EI_old`postyear'`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("" "" "I
> V" "Per Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions include year fixed effects. Note state fixed effects are absorbed by} \\" 
>                         "\multicolumn{9}{l}{\footnotesize old-young differencing. IV regression instruments for ET-state\textsubscript
> {s,t} and its interactions using a variable (and its corresponding interactions) equal to} \\"
>                         "\multicolumn{9}{l}{\footnotesize ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,200
> 1} for t$\geq$2001..} \\"
>                         "\multicolumn{9}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
228.                 #delimit cr             
delimiter now cr
.                 
.         }
229.         if "`drop'"=="no" {             
230.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old20 stock_EI_old6 stock_EI_old9 stock_EI_old7 stock_EI_old3c stock_EI_ol
> d3e stock_EIrate_old3
>         using ../tables/stock_EI_old`postyear'with0`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("" 
> "" "" "IV" "Per Capita" "Wealth" "Incl. inher. tax" "Drop 2002-04" "ET Rate")  /*drop(*year *cons)*/
>         noconstant label compress 
>                         substitute(topshr_90to97 "High Earners Share" EIratecombinedxPostxold "ET rate X post-2001 X old" EIratecombin
> edxPost "ET rate X post-2001" 0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{Std. Error}" elas
> _old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{9}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions include year fixed effects. Note state fixed effects are absorbed by} \\" 
>                         "\multicolumn{9}{l}{\footnotesize old-young differencing. IV regression instruments for ET-state\textsubscript
> {s,t} and its interactions using a variable (and its corresponding interactions) equal to} \\"
>                         "\multicolumn{9}{l}{\footnotesize ET-state\textsubscript{s,t} for t$<$2001 and to ET-state\textsubscript{s,200
> 1} for t$\geq$2001..} \\"
>                         "\multicolumn{9}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
231.                 esttab stock_EI_old2 stock_EI_old4 stock_EI_old6 
>         using ../tables/stock_EI_old`postyear'with0_ForSlides`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) 
> mtitle("" "" "IV" "Per Capita" "Wealth" "Incl. inher. tax" "Drop NY" "Drop 2002-04")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}" main "") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{3}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} 
> \(p<0.01\)}  \end{tabular} }");
232.                 #delimit cr
delimiter now cr
.         }
233.         if "`drop'"=="yes" {
234.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old10 stock_EI_old11 stock_EI_old12 stock_EI_old13
>         using ../tables/stock_EI_old`postyear'TopX`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle("Top
>  100" "Top200" "Top300" "10+ Obs")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions} \\" 
>                         "\multicolumn{5}{l}{\footnotesize include year fixed effects. State fixed effects are absorbed by old-young di
> fferencing.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
235.                         #delimit cr
delimiter now cr
.         }
236.         if "`drop'"=="no" {
237.                 #delimit ;
delimiter now ;
.                 esttab stock_EI_old10 stock_EI_old11 stock_EI_old12 stock_EI_old13
>         using ../tables/stock_EI_old`postyear'TopXwith0`v'.tex, replace se scalars(elas_young stderr_young elas_old stderr_old) mtitle
> ("Top 100" "Top200" "Top300" "10+ Obs")  /*drop(*year *cons)*/
>         noconstant label compress substitute(0000000000001 "" \_ _  elas_young "Semi-elasticity, Young" stderr_young "\quad \textit{St
> d. Error}" elas_old "Semi-elasticity, Old" stderr_old "\quad \textit{Std. Error}") star(* 0.1 ** 0.05 *** 0.01 )
>                         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay (with 10-year bandwidth) standard er
> rors in parentheses. All regressions} \\" 
>                         "\multicolumn{5}{l}{\footnotesize include year fixed effects. State fixed effects are absorbed by old-young di
> fferencing.} \\"
>                         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular
> } }");
238.                 #delimit cr
delimiter now cr
.         }
239. 
.         restore
240. }
. */
. 
. /*
> /// B. FALSIFICATION TESTS USING INCOME TAX RATES
> use ./stata_data/StateyearoldAnalysisDataset.dta, clear
> foreach t of varlist avg state_tax {
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old, dkraay(10)
>         esttab using "../tables/stock_`t'_old.tex",replace  se star(* 0.10 ** 0.05 *** 0.01) label
> 
>         //Adding i.year
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old i.year, dkraay(10) partial(i.year)
>         esttab using "../tables/stock_`t'_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label
> 
>         sleep 1000
>         //Adding i.statenum
>         eststo: ivreg2 stock `controls' old `t' c.`t'#1.old i.year i.statenum, dkraay(10) partial(i.year i.statenum)
>         esttab using "../tables/stock_`t'_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and S
> tate FE")
>         eststo clear
> 
>         use ./stata_data/StateyearOldU40AnalysisDataset.dta
>         eststo: ivreg2 stock `controls' `t'xPostxold `t'xold `t'xPost `t' old oldxPost i.year i.statenum, dkraay(10) partial(i.year i.
> statenum)
>         esttab using "../tables/stock_EI_old.tex",replace se star(* 0.10 ** 0.05 *** 0.01) label mtitle("No FE" "year FE" "year and St
> ate FE" "Drop Age $\leq$ 40")
>         eststo clear
> }
> */
. } // end run3D IF code

. 
. 
. /// 3. INDIVIDUAL LEVEL ANALYSIS
> if "$runINDIV" == "yes" {
. 
. use ./stata_data/IndivAnalysisDataset.dta, clear
. tsset nameid year, yearly
       panel variable:  nameid (unbalanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
. gen oldXpost = old*post
. gen LEI = L.EI
(2,431 missing values generated)
. gen EIxPost = EI*post
. gen LEIxPost = L.EI*post
(2,431 missing values generated)
. gen avgxPost = avg*post
. label variable EI "ET-state"
. label variable LEI "ET-state(t-1)"
. label variable avg "PIT"
. label variable EIxPost "ET-state X post-`postyear'"
. label variable LEIxPost "ET-state(t-1) X post-`postyear'"
. label variable avgxPost "PIT X post-`postyear'"
. 
. 
. /// A. INDIVIDUAL LEVEL SUMMARY STATISTICS
> eststo clear
. estpost sum Age_num wealth, detail

             |  e(count)   e(sum_w)    e(mean)     e(Var)      e(sd)  e(skewn~)  e(kurto~)     e(sum)     e(min)     e(max)      e(p1) 
-------------+-------------------------------------------------------------------------------------------------------------------------
     Age_num |     13432      13432   64.31395   171.9664    13.1136  -.1855916   2.659062     863865         23         96         33 
      wealth |     13121      13121   3.017842   32.84489   5.731046   7.449132    82.8722    39597.1   .1905078   125.0612   .3076305 

             |     e(p5)     e(p10)     e(p25)     e(p50)     e(p75)     e(p90)     e(p95)     e(p99) 
-------------+----------------------------------------------------------------------------------------
     Age_num |        42         47         55         65         74         81         85         91 
      wealth |  .4472993   .5394366    .840129   1.599575   2.906561   5.471499   9.621532   27.30956 
. esttab using "../tables/Summary_Stats_1.tex", replace modelwidth(10 20) cell((mean(fmt(%9.2f) label(Mean)) p50(fmt(%9.2f) label(Median
> )) sd(fmt(%9.2f) label(Standard Deviation)) min(label(Minimum)) max(label(Maximum)))) nonumber nomtitle label
(output written to ../tables/Summary_Stats_1.tex)
. *stop
. sum Age_num if year>`postyear', detail

                             Age
-------------------------------------------------------------
      Percentiles      Smallest
 1%           34             24
 5%           44             25
10%           49             25       Obs               5,689
25%           57             25       Sum of Wgt.       5,689

50%           67                      Mean           66.03516
                        Largest       Std. Dev.      12.92944
75%           75             96
90%           83             96       Variance       167.1704
95%           86             96       Skewness      -.2410089
99%           92             96       Kurtosis       2.714624
. local median = r(p50)
. 
. /// LIST TOP 10 AND  BOTTOM 10 BILLIONAIRES
> list Name Age_num NetWorthMill temp_city State if year==2017 & Forbes_Rank<=10

       +------------------------------------------------------------------------+
       |                     Name   Age_num   NetWor~l   temp_city        State |
       |------------------------------------------------------------------------|
 1745. |   Charles de Ganahl Koch        82      48500     Wichita       Kansas |
 2378. |      David Hamilton Koch        77      48500    New York     New York |
 5765. |          Jeffrey P Bezos        54      81500     Seattle   Washington |
 7331. |             Larry E Page        44      44600   Palo Alto   California |
 7462. |  Lawrence Joseph Ellison        73      59000    Woodside   California |
       |------------------------------------------------------------------------|
 8284. |          Mark Zuckerberg        33      71000   Palo Alto   California |
 8722. | Michael Rubens Bloomberg        76      46800    New York     New York |
11464. |              Sergey Brin        44      43400   Los Altos   California |
12728. |    Warren Edward Buffett        87      78000       Omaha     Nebraska |
13038. |      William Henry Gates        62      89000      Medina   Washington |
       +------------------------------------------------------------------------+
. list Name Age_num NetWorthMill temp_city State if year==2017 & Forbes_Rank>=388

       +------------------------------------------------------------------------------------+
       |                     Name   Age_num   NetWor~l             temp_city          State |
       |------------------------------------------------------------------------------------|
   81. | Aerin Lauder Zinterhofer        47       2000              New York       New York |
 1789. |        Christopher Cline        59       2000            Palm Beach        Florida |
 2562. |              David Zalik        44       2000               Atlanta        Georgia |
 3639. |           Frank Fertitta        56       2000             Las Vegas         Nevada |
 4184. |              Glenn Dubin        60       2000              New York       New York |
       |------------------------------------------------------------------------------------|
 5109. |        J Joseph Ricketts        76       2000   Little Jackson Hole        Wyoming |
 5389. |            James H Clark        73       2000            Palm Beach        Florida |
 5624. |              Jane Lauder        45       2000              New York       New York |
 5746. |            Jeffrey Lurie        66       2000             Wynnewood   Pennsylvania |
 6645. |               John Tyson        64       2000            Springdale       Arkansas |
       |------------------------------------------------------------------------------------|
 6784. |            Jon Yarbrough        60       2000              Franklin      Tennessee |
 7870. |         Lorenzo Fertitta        49       2000             Las Vegas         Nevada |
 9562. |           Peter Peterson        91       2000              New York       New York |
       +------------------------------------------------------------------------------------+
. 
. /// DISPLAY WEALTH DISTRIBUTION AS OF 2017
> histogram wealth if year==2017, freq discrete xscale(range(0 90)) xlabel(0(10)90) graphregion(color(white))
(start=2, width=.09999847)
. graph export ../tables/histogram_wealth2017.pdf, replace as(pdf)
(file ../tables/histogram_wealth2017.pdf written in PDF format)
. sum NetWorthMill if year==2017, detail

                        NetWorthMill
-------------------------------------------------------------
      Percentiles      Smallest
 1%         2000           2000
 5%         2100           2000
10%         2200           2000       Obs                 389
25%         2700           2000       Sum of Wgt.         389

50%         3700                      Mean           6694.087
                        Largest       Std. Dev.      10610.22
75%         5500          71000
90%        12000          78000       Variance       1.13e+08
95%        23000          81500       Skewness       4.821526
99%        71000          89000       Kurtosis       29.59803
. gen rowlabel = "Net Worth (bill)"
. tabout rowlabel using "../tables/wealth_percentiles.tex", style(tex) h2(nil) bt replace sum cells(p1 wealth p10 wealth p25 wealth p50 
> wealth p75 wealth p90 wealth p99 wealth) f(1 1 1 1 1 1 1) oneway clab(1st 10th 25th 50th 75th 90th 99th)

Table output written to: ../tables/wealth_percentiles.tex

rowlabel&1st&10th&25th&50th&75th&90th&99th \\
\midrule
Net Worth (bill)&0.3&0.5&0.8&1.6&2.9&5.5&27.3 \\
Total&0.3&0.5&0.8&1.6&2.9&5.5&27.3 \\
. *stop
. 
. /// PLOT AVERAGE WEALTH OVER TIME
> preserve
. collapse (mean) wealth NetWorthMill (count) nameid, by(year)
. gen NetWorthBill = NetWorthMill/1000
. label variable NetWorthBill "Nominal"
. label variable wealth "Real (2017 $)"
. twoway bar nameid year, ytitle("Count") graphregion(color(white)) 
. twoway line wealth NetWorthBill year, ytitle("Billions ($)") graphregion(color(white)) ylabels(0(1)7) lpattern(solid dash) lwidth(thic
> k .) lcolor(navy red)
. graph export ../tables/avg_wealth_tsgraph.pdf, replace as(pdf)
(file ../tables/avg_wealth_tsgraph.pdf written in PDF format)
. restore
. 
. /// Event-study of potential deaths
> /*
> preserve
> sort nameid year
> gen tag = (ourrank<=300 & Age_num>50 & nameid[_n-3]==nameid & nameid[_n-2]==nameid & nameid[_n-1]==nameid ///
>   & nameid[_n+1]~=nameid & year<2016 & (EI==1 | year<=2001) )
> br nameid year Age_num ourrank EI if tag
> pause
> restore
> */
. preserve
. import excel using ../data/raw_data/ForbesDeaths2.xlsx, firstrow clear sheet(Table_For_Export)
(9 vars, 434 obs)
. drop Notes ResidenceStateForbes
. rename YearofDeath death_year
. rename StateofDeath state_of_death
. drop if death_year==.
(306 observations deleted)
. tempfile deaths
. save `deaths', replace
(note: file C:\Users\l1djw01\AppData\Local\Temp\ST_42b4_000003.tmp not found)
file C:\Users\l1djw01\AppData\Local\Temp\ST_42b4_000003.tmp saved
. restore
. 
. preserve
. *drop _merge
. merge 1:1 Name year using `deaths', keep(1 3)

    Result                           # of obs.
    -----------------------------------------
    not matched                        13,304
        from master                    13,304  (_merge==1)
        from using                          0  (_merge==2)

    matched                               128  (_merge==3)
    -----------------------------------------
. gen death = (_merge==3)
. drop _merge
. sum death_year if death==1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |        128    2002.609    8.815014       1985       2018
. sum death_year if death==1 & abbr~=state_of_death

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         25      2002.2    9.861541       1987       2017
. sum death_year if death==1 & abbr~=ResidenceStateObituary

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         21    2000.429    9.458179       1986       2017
. sum death_year if death==1 & state_of_death~=ResidenceStateObituary

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         24    2002.292    10.34399       1986       2017
. sum death_year if death==1 & abbr==state_of_death & death_married==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         34    2000.029     9.10373       1985       2016
. sum death_year if death==1 & abbr==ResidenceStateObituary & death_married==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         35      2000.4    9.403379       1985       2016
. sum death_year if death==1 & death_married==0 & year>2001

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         10      2009.4    5.295701       2003       2017
. sum death_year if death==1 & death_married==0 & inrange(year,2001,2003)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |          4        2005    3.366502       2003       2010
. sum death_year if death==1 & death_married==0 & year>2001 & EI==1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |          1        2009           .       2009       2009
. sum death_year if death==1 & death_married==0 & year>2001 & Ionly==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  death_year |         10      2009.4    5.295701       2003       2017
. *pause 
. gen tag1 = (death==1 & state_of_death==abbr & death_married==0)
. gen tag2 = (death==1 & state_of_death==abbr)
. gen tag3 = (death==1)
. gen tag4 = (death==1 & death_married==0)
. sum tag*

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        tag1 |     13,432    .0025313    .0502499          0          1
        tag2 |     13,432    .0076683    .0872354          0          1
        tag3 |     13,432    .0095295    .0971564          0          1
        tag4 |     13,432    .0030524    .0551663          0          1
. sum wealth if tag4==1 & (year>2004 & EI==0)==0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      wealth |         35    1.778399    1.654429   .4472993   7.342664
. *pause
. 
. *collapse (sum) tag*, by(state_of_death death_year)
. *rename state_of_death abbr
. collapse (sum) tag*, by(ResidenceStateObituary death_year)
. rename ResidenceStateObituary abbr
. *collapse (sum) tag*, by(abbr death_year)
. 
. rename death_year year
. keep if -tag3<0
(1 observation deleted)
. *br year abbr tag4
. 
. tempfile deathcounts
. save `deathcounts'
file C:\Users\l1djw01\AppData\Local\Temp\ST_42b4_000005.tmp saved
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. drop _merge
. merge 1:1 abbr year using `deathcounts', keep(1 3) nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                         1,656
        from master                     1,656  
        from using                          0  

    matched                                94  
    -----------------------------------------
. tsset statenum year, yearly
       panel variable:  statenum (strongly balanced)
        time variable:  year, 1982 to 2017, but with gaps
                delta:  1 year
. foreach i of num 1/4 {
  2.         replace tag`i' = 0 if tag`i'==. 
  3.         replace tag`i' = 1 if -tag`i'<-1
  4.         replace tag`i' = 0 if year>2004 & EI==0
  5.         gen dtag`i' = D.tag`i' 
  6. }
(1,656 real changes made)
(1 real change made)
(9 real changes made)
(100 missing values generated)
(1,656 real changes made)
(8 real changes made)
(33 real changes made)
(100 missing values generated)
(1,656 real changes made)
(11 real changes made)
(36 real changes made)
(100 missing values generated)
(1,656 real changes made)
(1 real change made)
(10 real changes made)
(100 missing values generated)
. 
. replace EI_Tax = 0 if EI_Tax==.
(48 real changes made)
. replace EI_Tax = (EI_Tax/cpi)/1000 //convert to millions
variable EI_Tax was long now double
(1,660 real changes made, 352 to missing)
. sum EI_Tax if inrange(year,1985,2015)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      EI_Tax |      1,199    170.2617    267.3043   -.079727   1576.454
. di (165*35)/(r(mean)*r(N))  *100   //calculate share of total EI tax revenues accounted for by forbes 400 deaths
2.8288878
. *pause
. gen dEI_Tax = D.EI_Tax
(469 missing values generated)
. gen lnEI_Tax = ln(EI_Tax)
(443 missing values generated)
. gen dlnEI_Tax = D.lnEI_Tax
(575 missing values generated)
. gen TaxXEI = Total_Tax - EI_Tax
(352 missing values generated)
. gen lnTaxXEI = ln(TaxXEI)
(352 missing values generated)
. gen dlnTaxXEI = lnTaxXEI - L.lnTaxXEI
(469 missing values generated)
. reg dEI_Tax L(-3/5).dtag4

      Source |       SS           df       MS      Number of obs   =       668
-------------+----------------------------------   F(9, 658)       =      3.51
       Model |  74430.4603         9  8270.05115   Prob > F        =    0.0003
    Residual |  1551449.78       658  2357.82641   R-squared       =    0.0458
-------------+----------------------------------   Adj R-squared   =    0.0327
       Total |  1625880.24       667  2437.60156   Root MSE        =    48.557

------------------------------------------------------------------------------
     dEI_Tax |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       dtag4 |
         F3. |  -17.24137   15.72102    -1.10   0.273    -48.11078    13.62804
         F2. |   7.216168   21.63051     0.33   0.739    -35.25697    49.68931
         F1. |   53.06468    23.3642     2.27   0.023     7.187303    98.94205
         --. |   61.81049   24.94192     2.48   0.013     12.83514    110.7858
         L1. |   70.07992   24.61282     2.85   0.005     21.75078    118.4091
         L2. |     65.533   23.14675     2.83   0.005      20.0826    110.9834
         L3. |   33.45725   21.40464     1.56   0.119     -8.57238    75.48687
         L4. |   59.56423   18.58212     3.21   0.001     23.07683    96.05164
         L5. |   51.14465   13.64026     3.75   0.000     24.36096    77.92834
             |
       _cons |   4.579087   1.879814     2.44   0.015     .8879296    8.270243
------------------------------------------------------------------------------
. xtreg dEI_Tax L(-3/5).dtag4, fe

Fixed-effects (within) regression               Number of obs     =        668
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.0556                                         min =          1
     between = 0.0533                                         avg =       13.9
     overall = 0.0453                                         max =         17

                                                F(9,611)          =       3.99
corr(u_i, Xb)  = -0.1002                        Prob > F          =     0.0001

------------------------------------------------------------------------------
     dEI_Tax |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       dtag4 |
         F3. |  -20.20669   16.12616    -1.25   0.211    -51.87611    11.46274
         F2. |   3.181077   22.48217     0.14   0.888    -40.97062    47.33277
         F1. |   53.91035    24.6636     2.19   0.029     5.474636    102.3461
         --. |   70.93151   26.38746     2.69   0.007     19.11039    122.7526
         L1. |   81.59129   26.02675     3.13   0.002     30.47855     132.704
         L2. |   77.08877   24.56281     3.14   0.002     28.85098    125.3265
         L3. |   45.38105   22.83795     1.99   0.047     .5306524    90.23145
         L4. |   72.16252   19.62977     3.68   0.000     33.61252    110.7125
         L5. |   58.13702   14.07174     4.13   0.000     30.50217    85.77187
             |
       _cons |   4.596702   1.894755     2.43   0.016     .8756804    8.317724
-------------+----------------------------------------------------------------
     sigma_u |  10.737928
     sigma_e |   48.94302
         rho |  .04592427   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 611) = 0.78                     Prob > F = 0.8545
. reg dEI_Tax i.year L(-3/5).dtag4

      Source |       SS           df       MS      Number of obs   =       668
-------------+----------------------------------   F(25, 642)      =      3.03
       Model |  171605.084        25  6864.20336   Prob > F        =    0.0000
    Residual |  1454275.16       642   2265.2261   R-squared       =    0.1055
-------------+----------------------------------   Adj R-squared   =    0.0707
       Total |  1625880.24       667  2437.60156   Root MSE        =    47.594

------------------------------------------------------------------------------
     dEI_Tax |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1989  |  -1.421123    11.0055    -0.13   0.897    -23.03224       20.19
       1990  |   1.414738   10.84335     0.13   0.896    -19.87798    22.70745
       1991  |   8.509814   10.81975     0.79   0.432    -12.73656    29.75619
       1992  |  -4.403921   10.86811    -0.41   0.685    -25.74525    16.93741
       1993  |  -3.400003   10.86931    -0.31   0.755    -24.74369    17.94368
       1994  |   4.366222    11.0046     0.40   0.692    -17.24313    25.97558
       1995  |  -17.74335   11.05881    -1.60   0.109    -39.45916    3.972463
       1996  |     4.4692   11.10794     0.40   0.688    -17.34308    26.28148
       1997  |   8.117107   11.05616     0.73   0.463    -13.59349    29.82771
       1998  |   26.96776   10.94121     2.46   0.014     5.482876    48.45264
       2009  |  -16.69684   11.00657    -1.52   0.130    -38.31007      4.9164
       2010  |  -30.46842   11.33953    -2.69   0.007    -52.73546   -8.201374
       2011  |   6.403414   11.11559     0.58   0.565    -15.42389    28.23072
       2012  |  -7.011421    10.9645    -0.64   0.523    -28.54204     14.5192
       2013  |   1.011929   11.07602     0.09   0.927    -20.73768    22.76154
       2014  |  -8.984035   11.14078    -0.81   0.420     -30.8608    12.89273
             |
       dtag4 |
         F3. |  -17.23292   15.61062    -1.10   0.270    -47.88696    13.42112
         F2. |   6.947037   21.52789     0.32   0.747    -35.32654    49.22062
         F1. |   50.07024   23.27755     2.15   0.032     4.360913    95.77957
         --. |   58.09883   24.85745     2.34   0.020     9.287099    106.9106
         L1. |   71.15421   24.54394     2.90   0.004     22.95811    119.3503
         L2. |   62.45057   23.12383     2.70   0.007      17.0431     107.858
         L3. |   26.77616   21.44482     1.25   0.212     -15.3343    68.88663
         L4. |   50.08582   18.64925     2.69   0.007     13.46493    86.70671
         L5. |   46.41505   13.61094     3.41   0.001     19.68771    73.14238
             |
       _cons |   6.025176   7.924807     0.76   0.447    -9.536497    21.58685
------------------------------------------------------------------------------
. xtreg dEI_Tax i.year L(-3/5).dtag4, fe

Fixed-effects (within) regression               Number of obs     =        668
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1189                                         min =          1
     between = 0.0098                                         avg =       13.9
     overall = 0.1048                                         max =         17

                                                F(25,595)         =       3.21
corr(u_i, Xb)  = -0.0778                        Prob > F          =     0.0000

------------------------------------------------------------------------------
     dEI_Tax |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1989  |  -.6564166   11.09752    -0.06   0.953     -22.4515    21.13867
       1990  |   2.732689   11.00882     0.25   0.804    -18.88819    24.35357
       1991  |    10.1867   10.99532     0.93   0.355    -11.40765    31.78106
       1992  |  -2.697698   11.04617    -0.24   0.807    -24.39193    18.99653
       1993  |  -1.502828   11.04884    -0.14   0.892     -23.2023    20.19664
       1994  |   5.413536   11.17072     0.48   0.628     -16.5253    27.35237
       1995  |  -17.37585   11.21974    -1.55   0.122    -39.41096    4.659251
       1996  |   5.243983   11.26362     0.47   0.642    -16.87731    27.36527
       1997  |   9.197314   11.20602     0.82   0.412    -12.81085    31.20548
       1998  |   28.49772   11.15519     2.55   0.011     6.589395    50.40605
       2009  |  -15.67236   11.28058    -1.39   0.165    -37.82696    6.482226
       2010  |  -30.11773     11.542    -2.61   0.009    -52.78573    -7.44972
       2011  |   6.672264   11.29629     0.59   0.555    -15.51318    28.85771
       2012  |  -6.408498   11.16099    -0.57   0.566    -28.32823    15.51123
       2013  |    1.51667   11.28315     0.13   0.893    -20.64298    23.67632
       2014  |  -8.420744   11.35803    -0.74   0.459    -30.72744    13.88595
             |
       dtag4 |
         F3. |  -20.84624   16.00403    -1.30   0.193    -52.27749    10.58502
         F2. |   1.300614   22.38256     0.06   0.954    -42.65781    45.25904
         F1. |   48.68706   24.59765     1.98   0.048     .3782947    96.99583
         --. |    65.2512   26.32909     2.48   0.013     13.54195    116.9604
         L1. |   81.35532   25.99008     3.13   0.002     30.31187    132.3988
         L2. |   73.15082   24.58479     2.98   0.003      24.8673    121.4343
         L3. |   38.09966   22.93314     1.66   0.097    -6.940075     83.1394
         L4. |   62.29982   19.73851     3.16   0.002     23.53419    101.0654
         L5. |   53.20165   14.04485     3.79   0.000     25.61813    80.78516
             |
       _cons |   5.100928   8.067395     0.63   0.527     -10.7431    20.94496
-------------+----------------------------------------------------------------
     sigma_u |  11.813704
     sigma_e |   47.90367
         rho |  .05733153   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 595) = 0.82                     Prob > F = 0.7926
. gen Post = (year>`postyear')
. capture drop cEI_Tax* eventtime b b_*
. gen eventtime = .
(1,750 missing values generated)
. gen b = .
(1,750 missing values generated)
. gen b_lb = .
(1,750 missing values generated)
. gen b_ub = .
(1,750 missing values generated)
. foreach h of num 1/5 {
  2.   gen cEI_TaxL`h' = 0
  3. *       replace cEI_TaxL`h' = (L`h'.EI_Tax - L.EI_Tax)
.         replace cEI_TaxL`h' = (L`h'.EI_Tax)
  4.         xtreg cEI_TaxL`h' i.year tag4, fe
  5. *       areg L`h'.dEI_Tax dtag4, absorb(year)
.         local i = 6-`h'
  6.   replace eventtime = -`h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10. }
(1,673 real changes made, 429 to missing)

Fixed-effects (within) regression               Number of obs     =      1,321
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1420                                         min =          1
     between = 0.0025                                         avg =       27.0
     overall = 0.0345                                         max =         33

                                                F(33,1239)        =       6.21
corr(u_i, Xb)  = 0.0147                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxL1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1984  |   8.780682   25.33085     0.35   0.729    -40.91541    58.47678
       1985  |  -17.83594    24.8726    -0.72   0.473    -66.63301    30.96113
       1986  |  -17.56779   25.16596    -0.70   0.485     -66.9404    31.80483
       1987  |  -10.54042   25.19068    -0.42   0.676    -59.96153    38.88069
       1988  |   12.00621   25.71153     0.47   0.641    -38.43674    62.44915
       1989  |   21.55405    25.3293     0.85   0.395    -28.13901    71.24712
       1990  |   26.47602   24.72872     1.07   0.285    -22.03877    74.99081
       1991  |   33.07213   24.75404     1.34   0.182    -15.49234    81.63661
       1992  |   43.61097   24.76221     1.76   0.078    -4.969532    92.19147
       1993  |   46.79269   24.75404     1.89   0.059    -1.771783    95.35717
       1994  |   47.33971   24.76221     1.91   0.056    -1.240795    95.92021
       1995  |   58.41466   25.23807     2.31   0.021     8.900577    107.9287
       1996  |   49.76702   25.38474     1.96   0.050    -.0348093    99.56885
       1997  |   61.92538   25.20521     2.46   0.014     12.47578     111.375
       1998  |    74.7486   25.32738     2.95   0.003      25.0593    124.4379
       1999  |   107.0783   25.19574     4.25   0.000     57.64729    156.5093
       2000  |   124.5842   25.26939     4.93   0.000     75.00872    174.1598
       2001  |   133.9178   25.42311     5.27   0.000     84.04073     183.795
       2004  |   71.05715    25.2419     2.82   0.005     21.53557    120.5787
       2005  |   41.51885   25.20728     1.65   0.100    -7.934815    90.97251
       2006  |    23.6285   25.35938     0.93   0.352    -26.12358    73.38058
       2007  |   6.868655   25.20728     0.27   0.785    -42.58501    56.32232
       2008  |   4.687418   25.23446     0.19   0.853    -44.81959    54.19442
       2009  |   3.341849   25.07317     0.13   0.894    -45.84871    52.53241
       2010  |   -7.48979   25.21354    -0.30   0.766    -56.95574    41.97616
       2011  |  -37.36447    25.5193    -1.46   0.143    -87.43029    12.70135
       2012  |  -23.30947   25.30347    -0.92   0.357    -72.95185     26.3329
       2013  |   -24.8757   25.30347    -0.98   0.326    -74.51807    24.76668
       2014  |  -18.73205   25.47761    -0.74   0.462    -68.71607    31.25197
       2015  |  -22.36638   25.49526    -0.88   0.381    -72.38504    27.65227
       2016  |  -22.25664   25.52783    -0.87   0.383    -72.33919    27.82591
       2017  |  -13.19764   25.36797    -0.52   0.603    -62.96657     36.5713
             |
        tag4 |   76.49469   25.48697     3.00   0.003     26.49229    126.4971
       _cons |   137.9445   17.82156     7.74   0.000     102.9807    172.9082
-------------+----------------------------------------------------------------
     sigma_u |  218.52836
     sigma_e |  112.20557
         rho |  .79136389   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1239) = 115.41                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,685 real changes made, 468 to missing)

Fixed-effects (within) regression               Number of obs     =      1,282
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1470                                         min =          1
     between = 0.0084                                         avg =       26.2
     overall = 0.0391                                         max =         32

                                                F(32,1201)        =       6.47
corr(u_i, Xb)  = 0.0254                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxL2 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1985  |   2.355286   24.87276     0.09   0.925    -46.44361    51.15418
       1986  |  -17.36948   24.36617    -0.71   0.476    -65.17447    30.43551
       1987  |  -21.66737   24.69974    -0.88   0.381     -70.1268    26.79206
       1988  |  -12.72764   24.69974    -0.52   0.606    -61.18707    35.73179
       1989  |   16.12482   25.17384     0.64   0.522    -33.26477    65.51442
       1990  |   21.56945   24.83486     0.87   0.385    -27.15508    70.29397
       1991  |   26.38666   24.24778     1.09   0.277    -21.18605    73.95938
       1992  |   30.14618   24.28108     1.24   0.215    -17.49188    77.78423
       1993  |   45.24312   24.27276     1.86   0.063    -2.378599    92.86484
       1994  |   43.86673   24.28108     1.81   0.071    -3.771319    91.50478
       1995  |   43.41353   24.30347     1.79   0.074    -4.268453    91.09552
       1996  |   58.97304   24.72347     2.39   0.017     10.46705     107.479
       1997  |   51.49132   24.88313     2.07   0.039     2.672077    100.3106
       1998  |    55.8977   24.74643     2.26   0.024     7.346657    104.4487
       1999  |     72.563   24.83365     2.92   0.004     23.84084    121.2852
       2000  |   107.5383    24.6855     4.36   0.000     59.10679    155.9698
       2001  |   122.9628   24.78356     4.96   0.000     74.33891    171.5867
       2003  |   105.9311   24.91568     4.25   0.000     57.04803    154.8142
       2005  |   74.90539    24.7155     3.03   0.002     26.41502    123.3958
       2006  |   41.54235    24.7155     1.68   0.093    -6.948016    90.03271
       2007  |   23.57923   24.86456     0.95   0.343    -25.20357    72.36203
       2008  |   6.892154    24.7155     0.28   0.780    -41.59821    55.38252
       2009  |   1.372077   24.75717     0.06   0.956    -47.20003    49.94418
       2010  |   4.943977   24.57879     0.20   0.841    -43.27815    53.16611
       2011  |  -10.78066   24.73453    -0.44   0.663    -59.30835    37.74703
       2012  |  -35.29587   25.01049    -1.41   0.158    -84.36497    13.77324
       2013  |  -23.37632   24.80767    -0.94   0.346    -72.04751    25.29486
       2014  |  -24.94255   24.80767    -1.01   0.315    -73.61373    23.72864
       2015  |  -18.71025    24.9784    -0.75   0.454    -67.71641     30.2959
       2016  |  -22.48452   24.99757    -0.90   0.369    -71.52827    26.55923
       2017  |  -22.34099   25.02965    -0.89   0.372    -71.44769    26.76571
             |
        tag4 |    119.504   25.14196     4.75   0.000     70.17692     168.831
       _cons |   137.8032   17.47299     7.89   0.000     103.5222    172.0842
-------------+----------------------------------------------------------------
     sigma_u |  215.92306
     sigma_e |  110.00502
         rho |  .79393212   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1201) = 114.10                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,697 real changes made, 507 to missing)

Fixed-effects (within) regression               Number of obs     =      1,243
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1444                                         min =          1
     between = 0.0100                                         avg =       25.4
     overall = 0.0388                                         max =         31

                                                F(31,1163)        =       6.33
corr(u_i, Xb)  = 0.0272                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxL3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1986  |   10.52598   24.83597     0.42   0.672    -38.20234     59.2543
       1987  |  -14.44461   24.34832    -0.59   0.553    -62.21616    33.32694
       1988  |  -15.77026   24.65554    -0.64   0.523    -64.14458    32.60406
       1989  |  -2.388928   24.68441    -0.10   0.923    -50.81989    46.04203
       1990  |   20.49587   25.19292     0.81   0.416    -28.93279    69.92454
       1991  |    25.8859   24.85356     1.04   0.298    -22.87693    74.64873
       1992  |    28.7466   24.24573     1.19   0.236    -18.82367    76.31686
       1993  |   37.27314   24.29116     1.53   0.125    -10.38626    84.93255
       1994  |   47.52506   24.27093     1.96   0.050    -.0946347    95.14476
       1995  |   46.86198   24.26359     1.93   0.054    -.7433202    94.46728
       1996  |    51.2538   24.27093     2.11   0.035     3.634102     98.8735
       1997  |   66.12181    24.7344     2.67   0.008     17.59276    114.6509
       1998  |   51.10128   24.87447     2.05   0.040     2.297428    99.90514
       1999  |   61.72757   24.70338     2.50   0.013     13.25939    110.1957
       2000  |   80.68934   24.79711     3.25   0.001     32.03727    129.3414
       2001  |   112.7898   24.67382     4.57   0.000     64.37958    161.1999
       2003  |   135.2324   24.91581     5.43   0.000     86.34742    184.1173
       2004  |   111.8923   24.86989     4.50   0.000      63.0974    160.6871
       2006  |   79.27544   24.73248     3.21   0.001     30.75017    127.8007
       2007  |    45.9124   24.73248     1.86   0.064    -2.612865    94.43767
       2008  |   28.02626   24.88148     1.13   0.260    -20.79135    76.84388
       2009  |    9.04141   24.71144     0.37   0.715    -39.44259    57.52541
       2010  |   8.784599   24.76489     0.35   0.723    -39.80425    57.37345
       2011  |   7.287862   24.57307     0.30   0.767    -40.92465    55.50037
       2012  |  -3.264157   24.74039    -0.13   0.895    -51.80495    45.27663
       2013  |  -30.88132   25.02583    -1.23   0.217    -79.98216    18.21951
       2014  |  -18.95123   24.82268    -0.76   0.445    -67.65347    29.75101
       2015  |  -20.51745   24.82268    -0.83   0.409    -69.21969    28.18479
       2016  |  -14.30487   24.99378    -0.57   0.567    -63.34282    34.73308
       2017  |  -18.10246   25.01384    -0.72   0.469    -67.17977    30.97484
             |
        tag4 |   88.83195   24.06899     3.69   0.000     41.60845    136.0555
       _cons |   133.2017   17.50493     7.61   0.000     98.85696    167.5465
-------------+----------------------------------------------------------------
     sigma_u |  215.82362
     sigma_e |  109.94324
         rho |  .79396519   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1163) = 109.88                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,705 real changes made, 546 to missing)

Fixed-effects (within) regression               Number of obs     =      1,204
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1575                                         min =          1
     between = 0.0279                                         avg =       24.6
     overall = 0.0464                                         max =         30

                                                F(30,1125)        =       7.01
corr(u_i, Xb)  = 0.0393                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxL4 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1987  |   5.301909   24.74009     0.21   0.830       -43.24    53.84382
       1988  |  -17.38732   24.25423    -0.72   0.474    -64.97594    30.20131
       1989  |   -12.7419   24.56479    -0.52   0.604    -60.93986    35.45607
       1990  |  -3.802165   24.56479    -0.15   0.877    -52.00013     44.3958
       1991  |   19.15918   25.07065     0.76   0.445    -30.03131    68.34967
       1992  |   21.36833   24.72542     0.86   0.388     -27.1448    69.88146
       1993  |   29.78465   24.14884     1.23   0.218    -17.59719    77.16649
       1994  |   33.26826   24.16752     1.38   0.169    -14.15023    80.68674
       1995  |   42.70829   24.17484     1.77   0.078    -4.724562    90.14114
       1996  |   46.98881   24.16752     1.94   0.052    -.4296714     94.4073
       1997  |   52.19252   24.17415     2.16   0.031     4.761021    99.62402
       1998  |   58.69496   24.61685     2.38   0.017     10.39485    106.9951
       1999  |   48.18576   24.78547     1.94   0.052    -.4451952    96.81671
       2000  |   61.67125   24.60544     2.51   0.012     13.39352     109.949
       2001  |   78.00669    24.7698     3.15   0.002     29.40649    126.6069
       2003  |   123.1247   24.67843     4.99   0.000     74.70373    171.5456
       2004  |   132.3373   24.82868     5.33   0.000      83.6216     181.053
       2005  |   115.1579   24.77871     4.65   0.000     66.54023    163.7756
       2007  |   77.95183   24.61418     3.17   0.002     29.65697    126.2467
       2008  |   44.58879   24.61418     1.81   0.070    -3.706066    92.88365
       2009  |   23.52076   24.75535     0.95   0.342     -25.0511    72.09262
       2010  |   9.938597   24.61418     0.40   0.686    -38.35626    58.23345
       2011  |   4.298266   24.64017     0.17   0.862    -44.04759    52.64413
       2012  |   8.149582   24.47375     0.33   0.739    -39.86975    56.16892
       2013  |  -4.595144   24.61963    -0.19   0.852    -52.90071    43.71042
       2014  |  -32.15066   24.90286    -1.29   0.197    -81.01194    16.71062
       2015  |  -20.30117   24.69532    -0.82   0.411    -68.75524    28.15289
       2016  |   -21.8674   24.69532    -0.89   0.376    -70.32147    26.58667
       2017  |  -15.65386   24.86551    -0.63   0.529    -64.44186    33.13413
             |
        tag4 |   123.7432   24.97464     4.95   0.000     74.74107    172.7453
       _cons |    134.334   17.41076     7.72   0.000     100.1728    168.4953
-------------+----------------------------------------------------------------
     sigma_u |  215.50775
     sigma_e |  109.46683
         rho |  .79490521   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1125) = 107.51                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,717 real changes made, 583 to missing)

Fixed-effects (within) regression               Number of obs     =      1,167
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1564                                         min =          1
     between = 0.0096                                         avg =       23.8
     overall = 0.0419                                         max =         29

                                                F(29,1089)        =       6.96
corr(u_i, Xb)  = 0.0284                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxL5 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1988  |   8.619565   24.90245     0.35   0.729    -40.24265    57.48178
       1989  |  -10.00268   24.43874    -0.41   0.682    -57.95503    37.94967
       1990  |  -11.25585   24.76037    -0.45   0.649    -59.83927    37.32758
       1991  |  -2.316115   24.76037    -0.09   0.925    -50.89954    46.26731
       1992  |   18.15338    25.2433     0.72   0.472    -31.37762    67.68439
       1993  |   26.00902   24.92973     1.04   0.297    -22.90673    74.92476
       1994  |   29.44804   24.31801     1.21   0.226    -18.26741    77.16349
       1995  |   33.77064   24.33557     1.39   0.166    -13.97927    81.52056
       1996  |   48.14076   24.34388     1.98   0.048       .37453    95.90698
       1997  |   51.59586    24.3669     2.12   0.034     3.784473    99.40725
       1998  |   49.81716   24.33557     2.05   0.041     2.067244    97.56708
       1999  |   61.99096   24.77891     2.50   0.013     13.37116    110.6108
       2000  |   53.79614   24.95632     2.16   0.031     4.828225    102.7641
       2001  |   64.18557   24.78463     2.59   0.010     15.55454    112.8166
       2003  |   111.4742   24.81084     4.49   0.000     62.79171    160.1566
       2004  |   126.8291   24.83538     5.11   0.000     78.09847    175.5597
       2005  |   140.5683   25.01673     5.62   0.000     91.48186    189.6547
       2006  |   116.8562   24.97534     4.68   0.000     67.85093    165.8614
       2008  |   79.63301   24.80936     3.21   0.001     30.95345    128.3126
       2009  |   44.06371   24.78548     1.78   0.076    -4.568992    92.69642
       2010  |   28.32386   24.95868     1.13   0.257    -20.64868    77.29639
       2011  |   9.413518   24.78548     0.38   0.704    -39.21919    58.04622
       2012  |   9.197957   24.83731     0.37   0.711    -39.53643    57.93235
       2013  |   10.03005   24.65978     0.41   0.684    -38.35601    58.41611
       2014  |  -2.742508   24.80649    -0.11   0.912    -51.41644    45.93142
       2015  |  -30.66559   25.09657    -1.22   0.222    -79.90869    18.57751
       2016  |  -18.87681   24.87963    -0.76   0.448    -67.69424    29.94062
       2017  |  -20.44303   24.87963    -0.82   0.411    -69.26046    28.37439
             |
        tag4 |   88.25026   25.73934     3.43   0.001     37.74595    138.7546
       _cons |    132.169   17.57399     7.52   0.000     97.68629    166.6517
-------------+----------------------------------------------------------------
     sigma_u |  218.23232
     sigma_e |   110.1712
         rho |  .79690301   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1089) = 104.55                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
. *replace eventtime = -1 if _n==5
. *replace b = 0 if _n==5
. *replace b_lb = 0 if _n==5
. *replace b_ub = 0 if _n==5
. foreach h of num 0/12 {
  2.   gen cEI_TaxF`h' = 0
  3. *       replace cEI_TaxF`h' = (F`h'.EI_Tax - L.EI_Tax)
.         replace cEI_TaxF`h' = (F`h'.EI_Tax)
  4.         xtreg cEI_TaxF`h' i.year tag4, fe
  5. *       areg F`h'.dEI_Tax dtag4, absorb(year)
.   local i = 6 + `h'
  6.   replace eventtime = `h' if _n==`i'
  7.   replace b = _b[tag4] if _n==`i'
  8.   replace b_lb = _b[tag4] - 1.65*_se[tag4] if _n==`i'
  9.   replace b_ub = _b[tag4] + 1.65*_se[tag4] if _n==`i'
 10. }
(1,660 real changes made, 352 to missing)

Fixed-effects (within) regression               Number of obs     =      1,398
Group variable: statenum                        Number of groups  =         49

R-sq:                                           Obs per group:
     within  = 0.1633                                         min =          1
     between = 0.0117                                         avg =       28.5
     overall = 0.0465                                         max =         35

                                                F(35,1314)        =       7.33
corr(u_i, Xb)  = 0.0318                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF0 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   8.824488   25.51129     0.35   0.729    -41.22282     58.8718
       1984  |  -14.15622   25.01811    -0.57   0.572    -63.23603    34.92359
       1985  |  -22.54491   25.36859    -0.89   0.374    -72.31228    27.22246
       1986  |  -10.08651   25.34565    -0.40   0.691    -59.80886    39.63585
       1987  |   8.552455    25.8927     0.33   0.741    -42.24308    59.34799
       1988  |   14.29597    25.5417     0.56   0.576      -35.811    64.40293
       1989  |   26.42409   24.90465     1.06   0.289    -22.43314    75.28131
       1990  |   33.14092   24.92986     1.33   0.184    -15.76576    82.04759
       1991  |    45.4587   24.92986     1.82   0.068    -3.447977    94.36537
       1992  |   43.58829   24.93748     1.75   0.081    -5.333332    92.50991
       1993  |   49.18743   24.92986     1.97   0.049     .2807597    98.09411
       1994  |   58.71071   25.39121     2.31   0.021     8.898976    108.5225
       1995  |   44.49717    25.5872     1.74   0.082    -5.699058    94.69339
       1996  |   58.49266   25.39229     2.30   0.021     8.678811    108.3065
       1997  |   78.68536   25.47255     3.09   0.002     28.71406    128.6567
       1998  |   104.0063   25.37132     4.10   0.000     54.23358     153.779
       1999  |   119.3967   25.47105     4.69   0.000     69.42834    169.3651
       2000  |   132.2496   25.60283     5.17   0.000     82.02271    182.4765
       2001  |    108.474   25.56448     4.24   0.000     58.32233    158.6256
       2003  |   67.91445   25.41952     2.67   0.008     18.04718    117.7817
       2004  |   34.55141   25.41952     1.36   0.174    -15.31586    84.41868
       2005  |   23.74362   25.54105     0.93   0.353    -26.36206    73.84931
       2006  |   6.938556   25.38705     0.27   0.785    -42.86503    56.74214
       2007  |   4.700577   25.41369     0.18   0.853    -45.15526    54.55641
       2008  |     5.2102   25.24376     0.21   0.837    -44.31228    54.73268
       2009  |  -11.02151   25.40304    -0.43   0.664    -60.85646    38.81345
       2010  |  -35.20647   25.69422    -1.37   0.171    -85.61265    15.19972
       2011  |  -26.84741   25.49502    -1.05   0.293    -76.86281    23.16798
       2012  |  -24.80474    25.4867    -0.97   0.331    -74.80381    25.19433
       2013  |  -18.60177   25.66164    -0.72   0.469    -68.94404     31.7405
       2014  |  -22.28268   25.67846    -0.87   0.386    -72.65795    28.09259
       2015  |  -22.15824   25.71107    -0.86   0.389    -72.59747    28.28099
       2016  |  -13.14519   25.54933    -0.51   0.607    -63.26711    36.97674
       2017  |   -26.9229   25.71312    -1.05   0.295    -77.36615    23.52036
             |
        tag4 |   140.7468   24.61054     5.72   0.000     92.46658    189.0271
       _cons |   138.2147   17.95078     7.70   0.000     102.9993      173.43
-------------+----------------------------------------------------------------
     sigma_u |  218.88322
     sigma_e |  113.02177
         rho |  .78950028   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(48, 1314) = 121.13                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,661 real changes made, 433 to missing)

Fixed-effects (within) regression               Number of obs     =      1,317
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1815                                         min =          2
     between = 0.0130                                         avg =       27.4
     overall = 0.0508                                         max =         33

                                                F(33,1236)        =       8.30
corr(u_i, Xb)  = 0.0369                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |  -23.02516   24.34249    -0.95   0.344    -70.78234    24.73202
       1984  |  -24.47012   24.62822    -0.99   0.321    -72.78786    23.84762
       1985  |  -23.69049   24.65909    -0.96   0.337    -72.06879     24.6878
       1986  |   2.860495   25.13539     0.11   0.909    -46.45226    52.17325
       1987  |   4.243206   24.82195     0.17   0.864     -44.4546    52.94101
       1988  |   9.837571   24.23011     0.41   0.685    -37.69912    57.37426
       1989  |   24.12971   24.21995     1.00   0.319    -23.38706    71.64648
       1990  |   36.44749   24.21995     1.50   0.133    -11.06928    83.96426
       1991  |   37.85027   24.21995     1.56   0.118    -9.666502    85.36703
       1992  |   36.38083   24.22748     1.50   0.133    -11.15069    83.91236
       1993  |   53.37679   24.64119     2.17   0.030     5.033599      101.72
       1994  |    38.6476   24.81599     1.56   0.120    -10.03853    87.33372
       1995  |   44.89164   24.69527     1.82   0.069    -3.557643    93.34092
       1996  |   65.70168   24.74465     2.66   0.008     17.15552    114.2478
       1997  |   101.9849   24.61027     4.14   0.000     53.70235    150.2674
       1998  |   109.2701   24.71707     4.42   0.000     60.77807    157.7622
       1999  |   118.5084   24.86659     4.77   0.000     69.72303    167.2938
       2000  |   98.82763   24.84096     3.98   0.000     50.09253    147.5627
       2003  |   24.34132   24.71471     0.98   0.325     -24.1461    72.82874
       2004  |   6.307892   24.86372     0.25   0.800    -42.47187    55.08766
       2005  |  -2.148773   24.68217    -0.09   0.931    -50.57236    46.27481
       2006  |  -4.304061   24.70702    -0.17   0.862    -52.77639    44.16827
       2007  |  -3.793433   24.56128    -0.15   0.877    -51.97984    44.39297
       2008  |  -16.48459    24.7182    -0.67   0.505    -64.97885    32.00966
       2009  |  -48.50866   25.01887    -1.94   0.053    -97.59282    .5754877
       2010  |  -32.20519   24.88025    -1.29   0.196    -81.01738      16.607
       2011  |  -37.95608   24.88858    -1.53   0.128    -86.78462    10.87246
       2012  |  -27.56198   25.05147    -1.10   0.271    -76.71009    21.58614
       2013  |   -31.2572   25.04645    -1.25   0.212    -80.39545    17.88105
       2014  |  -31.17996   25.00519    -1.25   0.213    -80.23727    17.87734
       2015  |  -22.18952   24.84937    -0.89   0.372    -70.94114    26.56209
       2016  |  -35.90073     25.019    -1.43   0.152    -84.98512    13.18367
             |
        tag4 |    163.202   24.36437     6.70   0.000     115.4019    211.0021
       _cons |   147.3193   17.56349     8.39   0.000     112.8617    181.7768
-------------+----------------------------------------------------------------
     sigma_u |  222.83779
     sigma_e |  109.28047
         rho |  .80612932   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1236) = 127.01                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,662 real changes made, 472 to missing)

Fixed-effects (within) regression               Number of obs     =      1,278
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1786                                         min =          2
     between = 0.0087                                         avg =       26.6
     overall = 0.0461                                         max =         32

                                                F(32,1198)        =       8.14
corr(u_i, Xb)  = 0.0270                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF2 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |  -1.492335   24.45208    -0.06   0.951      -49.466    46.48133
       1984  |   7.447398   24.45208     0.30   0.761    -40.52627    55.42106
       1985  |   22.87291   24.99703     0.92   0.360    -26.16993    71.91574
       1986  |   32.08749   24.62592     1.30   0.193    -16.22723    80.40222
       1987  |   34.24493   24.04135     1.42   0.155     -12.9229    81.41276
       1988  |   40.95838   24.06106     1.70   0.089    -6.248127    88.16489
       1989  |     59.548   24.03338     2.48   0.013     12.39581    106.7002
       1990  |   60.95078   24.03338     2.54   0.011     13.79859     108.103
       1991  |   63.27674   24.03338     2.63   0.009     16.12455    110.4289
       1992  |   73.00916   24.47402     2.98   0.003     24.99245    121.0259
       1993  |   65.81605   24.65079     2.67   0.008     17.45253    114.1796
       1994  |   72.62145   24.49676     2.96   0.003     24.56013    120.6828
       1995  |   85.87359   24.60696     3.49   0.001     37.59605    134.1511
       1996  |   121.5583   24.45354     4.97   0.000     73.58174    169.5348
       1997  |   140.4652   24.52232     5.73   0.000     92.35371    188.5766
       1998  |   142.9785    24.7081     5.79   0.000     94.50259    191.4545
       1999  |   119.0117   24.70599     4.82   0.000     70.53984    167.4835
       2001  |   85.43851   24.51482     3.49   0.001     37.34176    133.5353
       2003  |   30.68594   24.69163     1.24   0.214    -17.75772    79.12959
       2004  |   14.05416   24.53854     0.57   0.567    -34.08914    62.19746
       2005  |   18.59827    24.5321     0.76   0.449     -29.5324    66.72894
       2006  |   19.12346   24.39418     0.78   0.433     -28.7366    66.98353
       2007  |    6.39719   24.55507     0.26   0.795    -41.77854    54.57292
       2008  |  -21.39021   24.85605    -0.86   0.390    -70.15645    27.37603
       2009  |   -12.8316   24.66835    -0.52   0.603    -61.22957    35.56636
       2010  |  -10.94027   24.66034    -0.44   0.657    -59.32254    37.44199
       2011  |  -8.339971   24.84281    -0.34   0.737    -57.08022    40.40028
       2012  |  -8.379705   24.83005    -0.34   0.736    -57.09492    40.33551
       2013  |  -8.249343   24.85132    -0.33   0.740    -57.00629     40.5076
       2014  |   .7628111   24.69094     0.03   0.975    -47.67949    49.20511
       2015  |  -12.96884   24.86493    -0.52   0.602    -61.75249    35.81481
             |
        tag4 |   134.8446   24.54695     5.49   0.000     86.68479    183.0044
       _cons |   124.2358    17.1275     7.25   0.000      90.6326    157.8391
-------------+----------------------------------------------------------------
     sigma_u |   225.1951
     sigma_e |  110.44325
         rho |  .80611021   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1198) = 123.50                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,664 real changes made, 513 to missing)

Fixed-effects (within) regression               Number of obs     =      1,237
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1760                                         min =          2
     between = 0.0104                                         avg =       25.8
     overall = 0.0453                                         max =         31

                                                F(31,1158)        =       7.98
corr(u_i, Xb)  = 0.0275                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   8.939733   24.83931     0.36   0.719    -39.79537    57.67483
       1984  |   31.53792   25.36461     1.24   0.214    -18.22781    81.30365
       1985  |   30.39968   25.05211     1.21   0.225    -18.75294    79.55229
       1986  |   39.10625   24.44491     1.60   0.110    -8.855012    87.06751
       1987  |   42.81792    24.4944     1.75   0.081    -5.240452     90.8763
       1988  |   55.13571    24.4944     2.25   0.025      7.07733    103.1941
       1989  |   62.48363   24.46403     2.55   0.011     14.48485    110.4824
       1990  |   64.80959   24.46403     2.65   0.008     16.81081    112.8084
       1991  |   77.85458   24.90957     3.13   0.002     28.98163    126.7275
       1992  |   63.93274    25.1046     2.55   0.011     14.67714    113.1883
       1993  |   77.37479   24.91131     3.11   0.002     28.49844    126.2511
       1994  |   90.73757    25.0069     3.63   0.000     41.67368    139.8015
       1995  |   119.9048   24.90134     4.82   0.000       71.048    168.7616
       1996  |   138.5959   24.97843     5.55   0.000     89.58784    187.6039
       1997  |   151.2201   25.12203     6.02   0.000     101.9304    200.5099
       1998  |   120.6153   25.11802     4.80   0.000     71.33337    169.8972
       2000  |   86.93153    24.9255     3.49   0.001     38.02733    135.8357
       2001  |   53.56849    24.9255     2.15   0.032     4.664287    102.4727
       2003  |   15.72278   24.95108     0.63   0.529    -33.23161    64.67717
       2004  |   13.41909   24.97551     0.54   0.591    -35.58324    62.42141
       2005  |   20.32532   24.80419     0.82   0.413    -28.34087     68.9915
       2006  |   7.537292   24.96471     0.30   0.763    -41.44383    56.51841
       2007  |   -20.2053   25.26598    -0.80   0.424    -69.77752    29.36692
       2008  |  -8.001548   25.14242    -0.32   0.750    -57.33135    41.32825
       2009  |  -12.84523   25.15143    -0.51   0.610    -62.19269    36.50224
       2010  |  -3.491197   25.31803    -0.14   0.890    -53.16555    46.18316
       2011  |  -10.35833    25.3463    -0.41   0.683    -60.08813    39.37148
       2012  |  -6.979587   25.28538    -0.28   0.783    -56.58987     42.6307
       2013  |   2.033745   25.12518     0.08   0.936    -47.26223    51.32972
       2014  |  -11.74308   25.29913    -0.46   0.643    -61.38036    37.89419
             |
        tag4 |   127.8208   25.39842     5.03   0.000     77.98871    177.6528
       _cons |   122.8883   17.63737     6.97   0.000     88.28356    157.4931
-------------+----------------------------------------------------------------
     sigma_u |   227.8828
     sigma_e |  111.08479
         rho |  .80800133   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1158) = 120.85                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,664 real changes made, 554 to missing)

Fixed-effects (within) regression               Number of obs     =      1,196
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1755                                         min =          2
     between = 0.0063                                         avg =       24.9
     overall = 0.0405                                         max =         30

                                                F(30,1118)        =       7.93
corr(u_i, Xb)  = 0.0208                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF4 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   22.39563   24.95674     0.90   0.370     -26.5717    71.36296
       1984  |   27.91275   24.61548     1.13   0.257    -20.38499    76.21049
       1985  |    28.3118   24.07236     1.18   0.240    -18.92029    75.54388
       1986  |   37.30815    24.0851     1.55   0.122    -9.948943    84.56525
       1987  |   47.23483   24.10691     1.96   0.050    -.0650574    94.53471
       1988  |    48.6376   24.10691     2.02   0.044     1.337718    95.93749
       1989  |   55.74578   24.07712     2.32   0.021     8.504351    102.9872
       1990  |    68.6493   24.51585     2.80   0.005     20.54704    116.7516
       1991  |   57.89299   24.70099     2.34   0.019      9.42747    106.3585
       1992  |   65.62386   24.52645     2.68   0.008     17.50079    113.7469
       1993  |   84.77829   24.60432     3.45   0.001     36.50246    133.0541
       1994  |   114.4548   24.48496     4.67   0.000     66.41315    162.4965
       1995  |   127.3003   24.61093     5.17   0.000     79.01148    175.5891
       1996  |   139.1923   24.73606     5.63   0.000     90.65799    187.7266
       1997  |   117.9158   24.68724     4.78   0.000      69.4773    166.3544
       1999  |   75.79486   24.55795     3.09   0.002        27.61    123.9797
       2000  |   45.00226   24.53301     1.83   0.067    -3.133659    93.13818
       2001  |   27.05368   24.68181     1.10   0.273    -21.37421    75.48157
       2003  |   5.392383   24.58188     0.22   0.826    -42.83943    53.62419
       2004  |    6.01704   24.44689     0.25   0.806    -41.94991    53.98399
       2005  |  -1.841332    24.5712    -0.07   0.940    -50.05219    46.36952
       2006  |  -29.59029   24.86821    -1.19   0.234    -78.38392    19.20333
       2007  |  -17.37651   24.74672    -0.70   0.483    -65.93175    31.17873
       2008  |  -18.94273   24.74672    -0.77   0.444    -67.49797    29.61251
       2009  |  -15.65001   24.92854    -0.63   0.530    -64.56201    33.26199
       2010  |  -16.51332   24.93879    -0.66   0.508    -65.44542    32.41879
       2011  |  -19.13592   24.89657    -0.77   0.442    -67.98519    29.71336
       2012  |  -7.373032   24.73013    -0.30   0.766    -55.89573    41.14967
       2013  |  -21.23719   24.90144    -0.85   0.394      -70.096    27.62162
             |
        tag4 |   102.8176   24.82019     4.14   0.000     54.11824     151.517
       _cons |   132.2944   17.36645     7.62   0.000     98.21987    166.3689
-------------+----------------------------------------------------------------
     sigma_u |  232.23713
     sigma_e |  109.29067
         rho |  .81868979   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1118) = 125.40                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,668 real changes made, 594 to missing)

Fixed-effects (within) regression               Number of obs     =      1,156
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1752                                         min =          2
     between = 0.0043                                         avg =       24.1
     overall = 0.0399                                         max =         29

                                                F(29,1079)        =       7.90
corr(u_i, Xb)  = 0.0198                         Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF5 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   5.673613   25.18371     0.23   0.822    -43.74099    55.08821
       1984  |   10.83931   24.63584     0.44   0.660    -37.50026    59.17889
       1985  |   12.96919   24.73157     0.52   0.600    -35.55823    61.49662
       1986  |   27.45124   24.71002     1.11   0.267     -21.0339    75.93639
       1987  |   26.68975   24.73157     1.08   0.281    -21.83768    75.21718
       1988  |   29.01571   24.73157     1.17   0.241    -19.51172    77.54314
       1989  |   46.20419   25.11968     1.84   0.066    -3.084761    95.49314
       1990  |   35.23481   25.27195     1.39   0.164    -14.35292    84.82254
       1991  |   45.61995   25.09033     1.82   0.069     -3.61143    94.85132
       1992  |   59.80154   25.18429     2.37   0.018     10.38582    109.2173
       1993  |   94.51433   25.05601     3.77   0.000      45.3503    143.6784
       1994  |   107.5744    25.1673     4.27   0.000     58.19196    156.9568
       1995  |   114.5137   25.34035     4.52   0.000     64.79176    164.2357
       1996  |   92.80683   25.28582     3.67   0.000     43.19188    142.4218
       1998  |   53.64221   25.14831     2.13   0.033     4.297075    102.9873
       1999  |   20.27917   25.14831     0.81   0.420    -29.06596     69.6243
       2000  |   4.658618   25.26985     0.18   0.854    -44.92499    54.24223
       2001  |  -12.04444   25.12375    -0.48   0.632    -61.34137     37.2525
       2003  |  -15.93272   25.07685    -0.64   0.525    -65.13763     33.2722
       2004  |  -28.96116   25.23507    -1.15   0.251    -78.47653    20.55422
       2005  |   -52.3542   25.45494    -2.06   0.040     -102.301   -2.407412
       2006  |  -40.13946   25.33567    -1.58   0.113    -89.85223    9.573316
       2007  |  -41.70568   25.33567    -1.65   0.100    -91.41845    8.007093
       2008  |  -35.75957   25.50691    -1.40   0.161    -85.80834     14.2892
       2009  |  -41.81678   25.53664    -1.64   0.102    -91.92389    8.290322
       2010  |  -39.23324   25.47506    -1.54   0.124    -89.21951    10.75304
       2011  |  -32.55334   25.33045    -1.29   0.199    -82.25587    17.14919
       2012  |  -44.06742   25.49002    -1.73   0.084    -94.08305    5.948215
             |
        tag4 |   93.06356   24.10904     3.86   0.000     45.75764    140.3695
       _cons |   154.9643   18.14576     8.54   0.000     119.3593    190.5693
-------------+----------------------------------------------------------------
     sigma_u |  234.51153
     sigma_e |  109.61963
         rho |  .82068225   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1079) = 122.47                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,668 real changes made, 632 to missing)

Fixed-effects (within) regression               Number of obs     =      1,118
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1665                                         min =          2
     between = 0.0008                                         avg =       23.3
     overall = 0.0270                                         max =         28

                                                F(28,1042)        =       7.44
corr(u_i, Xb)  = -0.0140                        Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF6 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   5.364562   24.57263     0.22   0.827    -42.85291    53.58203
       1984  |   11.82492   24.66209     0.48   0.632    -36.56811    60.21795
       1985  |   24.07889    24.6923     0.98   0.330    -24.37342    72.53119
       1986  |   25.51357   24.67044     1.03   0.301    -22.89584    73.92298
       1987  |   27.80762    24.6923     1.13   0.260    -20.64468    76.25993
       1988  |   40.50034   25.12144     1.61   0.107    -8.794027    89.79471
       1989  |   29.48521   25.28117     1.17   0.244    -20.12259      79.093
       1990  |   39.99315   25.09588     1.59   0.111    -9.251068    89.23737
       1991  |   56.42029    25.1826     2.24   0.025     7.005915    105.8347
       1992  |   88.85974   25.06781     3.54   0.000      39.6706    138.0489
       1993  |   104.4176   25.16277     4.15   0.000     55.04213    153.7931
       1994  |   113.7134   25.34039     4.49   0.000     63.98939    163.4374
       1995  |   89.55581   25.32073     3.54   0.000     39.87038    139.2412
       1997  |   52.83575    25.1197     2.10   0.036      3.54479    102.1267
       1998  |   19.40411   25.15463     0.77   0.441     -29.9554    68.76362
       1999  |   1.461195   25.32175     0.06   0.954    -48.22623    51.14862
       2000  |  -15.21178    25.1295    -0.61   0.545    -64.52198    34.09841
       2001  |   -17.2998   25.15454    -0.69   0.492    -66.65913    32.05952
       2003  |  -29.95852   25.20696    -1.19   0.235    -79.42072    19.50367
       2004  |  -58.13133   25.52447    -2.28   0.023    -108.2165   -8.046115
       2005  |  -45.82707     25.366    -1.81   0.071    -95.60133    3.947187
       2006  |   -47.3933     25.366    -1.87   0.062    -97.16756    2.380964
       2007  |  -41.52653   25.54167    -1.63   0.104    -91.64549    8.592439
       2008  |  -45.16597   25.56144    -1.77   0.078    -95.32374    4.991805
       2009  |  -45.00553    25.5178    -1.76   0.078    -95.07766    5.066612
       2010  |  -35.84252   25.33267    -1.41   0.157    -85.55138    13.86635
       2011  |   -49.8495   25.51581    -1.95   0.051    -99.91773    .2187232
             |
        tag4 |   1.371981    24.8379     0.06   0.956    -47.36603    50.10999
       _cons |   160.4409   17.93703     8.94   0.000     125.2441    195.6377
-------------+----------------------------------------------------------------
     sigma_u |  237.72248
     sigma_e |  110.98554
         rho |  .82103978   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1042) = 118.68                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,668 real changes made, 670 to missing)

Fixed-effects (within) regression               Number of obs     =      1,080
Group variable: statenum                        Number of groups  =         48

R-sq:                                           Obs per group:
     within  = 0.1667                                         min =          1
     between = 0.0007                                         avg =       22.5
     overall = 0.0279                                         max =         27

                                                F(27,1005)        =       7.45
corr(u_i, Xb)  = -0.0122                        Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF7 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   6.394082   24.31955     0.26   0.793    -41.32883      54.117
       1984  |   18.71186   24.31955     0.77   0.442    -29.01105    66.43478
       1985  |   19.80128   24.35138     0.81   0.416    -27.98409    67.58666
       1986  |   22.28392   24.32767     0.92   0.360    -25.45494    70.02278
       1987  |   34.76728   24.82004     1.40   0.162    -13.93776    83.47232
       1988  |   23.53658   25.00441     0.94   0.347    -25.53026    72.60341
       1989  |   34.46342   24.80402     1.39   0.165    -14.21017    83.13702
       1990  |   50.85177   24.89303     2.04   0.041     2.003493    99.70005
       1991  |   83.38074   24.76562     3.37   0.001     34.78248     131.979
       1992  |   98.69521   24.85686     3.97   0.000     49.91792    147.4725
       1993  |   108.1517   25.01892     4.32   0.000     59.05637     157.247
       1994  |   83.85552    24.9914     3.36   0.001     34.81421    132.8968
       1996  |   47.11007   24.82175     1.90   0.058    -1.598326    95.81846
       1997  |   13.91546   24.81177     0.56   0.575    -34.77335    62.60426
       1998  |  -4.414214   25.02088    -0.18   0.860    -53.51336    44.68493
       1999  |   -21.0716   24.84938    -0.85   0.397    -69.83421    27.69102
       2000  |  -22.90061     24.847    -0.92   0.357    -71.65855    25.85733
       2001  |  -22.56271   24.70865    -0.91   0.361    -71.04917    25.92376
       2003  |  -64.09859   25.22761    -2.54   0.011    -113.6034   -14.59376
       2004  |  -51.81366   25.09966    -2.06   0.039    -101.0674   -2.559912
       2005  |  -53.03438   25.06161    -2.12   0.035    -102.2135   -3.855295
       2006  |   -47.2023   25.24175    -1.87   0.062    -96.73486    2.330267
       2007  |  -50.88578   25.23688    -2.02   0.044    -100.4088   -1.362754
       2008  |  -50.69834   25.18344    -2.01   0.044    -100.1165   -1.280185
       2009  |  -41.69676   25.01402    -1.67   0.096    -90.78246    7.388937
       2010  |   -55.4735   25.18125    -2.20   0.028    -104.8874   -6.059641
             |
        tag4 |   6.737185   26.48616     0.25   0.799    -45.23733     58.7117
       _cons |    165.901   17.32088     9.58   0.000     131.9118    199.8903
-------------+----------------------------------------------------------------
     sigma_u |  238.71319
     sigma_e |  112.07434
         rho |  .81938712   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(47, 1005) = 112.65                  Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,670 real changes made, 711 to missing)

Fixed-effects (within) regression               Number of obs     =      1,039
Group variable: statenum                        Number of groups  =         47

R-sq:                                           Obs per group:
     within  = 0.1635                                         min =          2
     between = 0.0042                                         avg =       22.1
     overall = 0.0228                                         max =         26

                                                F(26,966)         =       7.26
corr(u_i, Xb)  = -0.0276                        Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   12.31778   24.48429     0.50   0.615    -35.73074     60.3663
       1984  |   13.72056   24.48429     0.56   0.575    -34.32796    61.76908
       1985  |   17.65463   24.51452     0.72   0.472    -30.45323    65.76248
       1986  |   29.41019   24.96727     1.18   0.239    -19.58614    78.40652
       1987  |   19.31012   25.17849     0.77   0.443    -30.10073    68.72096
       1988  |   29.84463   25.00982     1.19   0.233    -19.23522    78.92447
       1989  |   44.43404   25.06866     1.77   0.077    -4.761267    93.62935
       1990  |   76.72246    24.9333     3.08   0.002     27.79278    125.6521
       1991  |   92.32317   25.01659     3.69   0.000     43.23006    141.4163
       1992  |    102.485   25.20039     4.07   0.000     53.03114    151.9388
       1993  |   77.71445   25.15938     3.09   0.002     28.34111    127.0878
       1995  |     42.758   25.02235     1.71   0.088    -6.346431    91.86243
       1996  |   8.530603   24.99571     0.34   0.733    -40.52154    57.58275
       1997  |  -10.32323   25.15954    -0.41   0.682    -59.69688    39.05043
       1998  |  -25.25523   25.02235    -1.01   0.313    -74.35966     23.8492
       1999  |  -27.81102   25.04401    -1.11   0.267    -76.95796    21.33592
       2000  |  -28.28881    24.8772    -1.14   0.256    -77.10839    20.53076
       2001  |  -41.35956   25.04494    -1.65   0.099    -90.50833    7.789199
       2003  |   -55.9541   25.27704    -2.21   0.027    -105.5583   -6.349859
       2004  |  -57.52032   25.27704    -2.28   0.023    -107.1246   -7.916082
       2005  |  -53.44475   25.42305    -2.10   0.036    -103.3355   -3.553986
       2006  |  -57.16513    25.4179    -2.25   0.025    -107.0458    -7.28446
       2007  |  -56.88583   25.36312    -2.24   0.025     -106.659   -7.112661
       2008  |  -47.70778   25.18086    -1.89   0.058    -97.12329    1.707719
       2009  |  -60.93981   25.37153    -2.40   0.016    -110.7295   -11.15015
             |
        tag4 |  -34.57432   26.16971    -1.32   0.187    -85.93036    16.78171
       _cons |   172.4336   17.34976     9.94   0.000      138.386    206.4812
-------------+----------------------------------------------------------------
     sigma_u |  243.58622
     sigma_e |  113.52896
         rho |  .82154144   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(46, 966) = 110.94                   Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,672 real changes made, 755 to missing)

Fixed-effects (within) regression               Number of obs     =        995
Group variable: statenum                        Number of groups  =         47

R-sq:                                           Obs per group:
     within  = 0.1807                                         min =          2
     between = 0.0199                                         avg =       21.2
     overall = 0.0192                                         max =         25

                                                F(25,923)         =       8.14
corr(u_i, Xb)  = -0.0538                        Prob > F          =     0.0000

------------------------------------------------------------------------------
   cEI_TaxF9 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   1.402776   24.58682     0.06   0.955    -46.84978    49.65533
       1984  |   3.728737   24.58682     0.15   0.879    -44.52382    51.98129
       1985  |   21.04961    25.0979     0.84   0.402    -28.20596    70.30517
       1986  |   7.648964   25.26227     0.30   0.762    -41.92919    57.22712
       1987  |   20.63629   25.11923     0.82   0.412    -28.66113    69.93372
       1988  |   36.94814   25.21104     1.47   0.143    -12.52946    86.42575
       1989  |   64.41842   25.04216     2.57   0.010     15.27224    113.5646
       1990  |   80.10744   25.12669     3.19   0.001     30.79536    129.4195
       1991  |   89.32727    25.3023     3.53   0.000     39.67056     138.984
       1992  |   67.92007   25.28083     2.69   0.007     18.30549    117.5346
       1994  |   31.23867   25.10647     1.24   0.214    -18.03373    80.51107
       1995  |   .3010929   25.13385     0.01   0.990    -49.02504    49.62722
       1996  |   -20.1071   25.28103    -0.80   0.427    -69.72207    29.50787
       1997  |  -39.20003   25.09651    -1.56   0.119    -88.45287    10.05281
       1998  |  -36.97477   25.15368    -1.47   0.142    -86.33981    12.39028
       1999  |   -36.6998   25.01239    -1.47   0.143    -85.78756    12.38796
       2000  |  -52.06344   25.15413    -2.07   0.039    -101.4294   -2.697514
       2001  |  -79.77643   25.49173    -3.13   0.002    -129.8049   -29.74796
       2003  |  -66.52698   25.40504    -2.62   0.009    -116.3853   -16.66864
       2004  |  -60.66394   25.59124    -2.37   0.018    -110.8877   -10.44017
       2005  |   -69.5226   25.54616    -2.72   0.007    -119.6579    -19.3873
       2006  |  -69.35283   25.47601    -2.72   0.007    -119.3505    -19.3552
       2007  |  -60.11291   25.29251    -2.38   0.018    -109.7504   -10.47542
       2008  |   -74.1145    25.4739    -2.91   0.004     -124.108   -24.12101
             |
        tag4 |  -97.01857   26.46085    -3.67   0.000     -148.949   -45.08817
       _cons |   185.2875   17.42881    10.63   0.000     151.0828    219.4921
-------------+----------------------------------------------------------------
     sigma_u |  244.59162
     sigma_e |  114.00439
         rho |  .82152386   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(46, 923) = 106.38                   Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,671 real changes made, 798 to missing)

Fixed-effects (within) regression               Number of obs     =        952
Group variable: statenum                        Number of groups  =         47

R-sq:                                           Obs per group:
     within  = 0.1816                                         min =          2
     between = 0.0138                                         avg =       20.3
     overall = 0.0222                                         max =         24

                                                F(24,881)         =       8.15
corr(u_i, Xb)  = -0.0445                        Prob > F          =     0.0000

------------------------------------------------------------------------------
  cEI_TaxF10 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   2.325961   24.90378     0.09   0.926    -46.55169    51.20361
       1984  |   14.82522   25.38961     0.58   0.559    -35.00596     64.6564
       1985  |   8.652108   25.62083     0.34   0.736    -41.63288    58.93709
       1986  |   16.85261   25.42329     0.66   0.508    -33.04467     66.7499
       1987  |   35.52135    25.5447     1.39   0.165    -14.61421    85.65692
       1988  |    67.7336   25.40622     2.67   0.008     17.86981    117.5974
       1989  |   78.89688   25.45754     3.10   0.002     28.93237    128.8614
       1990  |   88.12118   25.63588     3.44   0.001     37.80666    138.4357
       1991  |   64.16063   25.60447     2.51   0.012     13.90775    114.4135
       1993  |   27.54344   25.42746     1.08   0.279    -22.36202    77.44891
       1994  |  -3.516088   25.43843    -0.14   0.890    -53.44308     46.4109
       1995  |  -19.13641   25.64624    -0.75   0.456    -69.47127    31.19845
       1996  |  -38.16628   25.43843    -1.50   0.134    -88.09327    11.76071
       1997  |  -43.25757   25.44452    -1.70   0.089    -93.19651    6.681378
       1998  |  -38.35445   25.34234    -1.51   0.131    -88.09285    11.38395
       1999  |  -51.28296   25.51425    -2.01   0.045    -101.3588   -1.207143
       2000  |  -81.13318   25.83035    -3.14   0.002    -131.8294   -30.43698
       2001  |  -68.76625   25.71408    -2.67   0.008    -119.2343   -18.29826
       2003  |  -62.09503   25.93431    -2.39   0.017    -112.9953    -11.1948
       2004  |  -65.83457   25.92715    -2.54   0.011    -116.7208   -14.94838
       2005  |  -70.56832   25.81241    -2.73   0.006    -121.2293   -19.90733
       2006  |  -61.33274   25.62602    -2.39   0.017    -111.6279   -11.03757
       2007  |  -75.34364   25.81003    -2.92   0.004         -126   -24.68732
             |
        tag4 |  -92.14032   27.49705    -3.35   0.001    -146.1077   -38.17294
       _cons |    187.032   17.66269    10.59   0.000     152.3662    221.6979
-------------+----------------------------------------------------------------
     sigma_u |  244.55787
     sigma_e |  115.47406
         rho |  .81769557   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(46, 881) = 100.15                   Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,677 real changes made, 840 to missing)

Fixed-effects (within) regression               Number of obs     =        910
Group variable: statenum                        Number of groups  =         47

R-sq:                                           Obs per group:
     within  = 0.1901                                         min =          2
     between = 0.0226                                         avg =       19.4
     overall = 0.0207                                         max =         23

                                                F(23,840)         =       8.57
corr(u_i, Xb)  = -0.0571                        Prob > F          =     0.0000

------------------------------------------------------------------------------
  cEI_TaxF11 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |   12.60729   25.59251     0.49   0.622    -37.62548    62.84007
       1984  |    1.80051   25.79501     0.07   0.944    -48.82974    52.43076
       1985  |   17.56813   25.65968     0.68   0.494    -32.79649    67.93275
       1986  |   31.30913   25.72743     1.22   0.224    -19.18848    81.80673
       1987  |   66.09744   25.61512     2.58   0.010     15.82028    116.3746
       1988  |    78.8792   25.67726     3.07   0.002     28.48009    129.2783
       1989  |   85.48855   25.84922     3.31   0.001     34.75192    136.2252
       1990  |   61.44268   25.81821     2.38   0.018     10.76689    112.1185
       1992  |   27.44458   25.64782     1.07   0.285    -22.89676    77.78591
       1993  |  -8.512596   25.63927    -0.33   0.740    -58.83714    41.81195
       1994  |  -23.91682   25.82711    -0.93   0.355    -74.61007    26.77643
       1995  |  -37.97452   25.67521    -1.48   0.140    -88.36963    12.42058
       1996  |  -43.48888   25.66078    -1.69   0.090    -93.85566      6.8779
       1997  |   -45.7071   25.50925    -1.79   0.074    -95.77646    4.362254
       1998  |  -53.56453   25.71793    -2.08   0.038    -104.0435   -3.085579
       1999  |  -80.83195   26.07301    -3.10   0.002    -132.0078   -29.65605
       2000  |  -71.30753   25.92677    -2.75   0.006    -122.1964   -20.41867
       2001  |  -72.87375   25.92677    -2.81   0.005    -123.7626    -21.9849
       2003  |  -67.98101   26.13777    -2.60   0.009     -119.284     -16.678
       2004  |   -67.7996   26.06502    -2.60   0.009    -118.9598   -16.63939
       2005  |  -64.00246   25.83885    -2.48   0.013    -114.7188   -13.28616
       2006  |  -78.02542   26.02522    -3.00   0.003    -129.1075   -26.94332
             |
        tag4 |  -103.7653   27.81549    -3.73   0.000    -158.3613   -49.16928
       _cons |   189.9446   17.81553    10.66   0.000     154.9764    224.9128
-------------+----------------------------------------------------------------
     sigma_u |  245.37093
     sigma_e |  116.39099
         rho |  .81632308   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(46, 840) = 94.06                    Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1,673 real changes made, 883 to missing)

Fixed-effects (within) regression               Number of obs     =        867
Group variable: statenum                        Number of groups  =         47

R-sq:                                           Obs per group:
     within  = 0.1802                                         min =          2
     between = 0.0059                                         avg =       18.4
     overall = 0.0273                                         max =         22

                                                F(22,798)         =       7.97
corr(u_i, Xb)  = -0.0307                        Prob > F          =     0.0000

------------------------------------------------------------------------------
  cEI_TaxF12 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        year |
       1983  |  -10.59821   26.86603    -0.39   0.693    -63.33464    42.13823
       1984  |  -.2480147   26.71646    -0.01   0.993    -52.69086    52.19483
       1985  |   18.08452   26.85242     0.67   0.501     -34.6252    70.79424
       1986  |   49.32015   26.68387     1.85   0.065    -3.058717     101.699
       1987  |   65.67466   26.80432     2.45   0.014     13.05935      118.29
       1988  |   73.89535    26.9585     2.74   0.006      20.9774    126.8133
       1989  |   48.57746   26.94421     1.80   0.072    -4.312434    101.4674
       1991  |   11.97753   26.76233     0.45   0.655    -40.55535    64.51041
       1992  |  -20.36395   26.77224    -0.76   0.447    -72.91629    32.18838
       1993  |  -39.44343   26.94488    -1.46   0.144    -92.33465    13.44778
       1994  |  -55.01415   26.77224    -2.05   0.040    -107.5665   -2.461817
       1995  |  -57.08825   26.80414    -2.13   0.033    -109.7032   -4.473302
       1996  |  -57.81471   26.63247    -2.17   0.030    -110.0927   -5.536733
       1997  |  -71.82491   26.79795    -2.68   0.008    -124.4277   -19.22211
       1998  |  -96.99974   27.20841    -3.57   0.000    -150.4083   -43.59123
       1999  |  -84.74595   27.09058    -3.13   0.002    -137.9232   -31.56874
       2000  |  -87.35992   27.06045    -3.23   0.001     -140.478   -34.24184
       2001  |  -81.51232   27.25295    -2.99   0.003    -135.0083   -28.01639
       2003  |  -83.72762   27.19366    -3.08   0.002    -137.1072   -30.34807
       2004  |   -74.5378   27.00072    -2.76   0.006    -127.5386   -21.53697
       2005  |  -90.57115   27.13128    -3.34   0.001    -143.8283   -37.31404
             |
        tag4 |  -40.86217   28.56298    -1.43   0.153    -96.92962    15.20527
       _cons |   203.1922   18.96204    10.72   0.000     165.9709    240.4136
-------------+----------------------------------------------------------------
     sigma_u |   243.1749
     sigma_e |  119.10607
         rho |  .80651665   (fraction of variance due to u_i)
------------------------------------------------------------------------------
F test that all u_i=0: F(46, 798) = 84.38                    Prob > F = 0.0000
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
. #delimit ;
delimiter now ;
. twoway 
>         (connected b eventtime if eventtime<=-1, color(black))  (connected b eventtime if eventtime>=-1 & eventtime<6, color(black) )
>         (line b_lb eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_lb eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash))
>         (line b_ub eventtime if eventtime<=-1, color(black) lpattern(dash))  (line b_ub eventtime if eventtime>=-1 & eventtime<6, colo
> r(black) lpattern(dash)), 
>                 legend(off) ytitle(State E&I Tax Revenues (Millions of 2017 $)) xtitle(Years Since Death (t=0)) yscale(range(0 250)) y
> label(0 50 100 150 200 250, nogrid)
>                 yline(99,lcolor(gs10)) graphregion(color(white)) plotregion(color(white))
> ;
. #delimit cr
delimiter now cr
. graph export ../tables/death_event_study.pdf, replace as(pdf)
(file ../tables/death_event_study.pdf written in PDF format)
. 
. *levelsof abbr if -tag4<0, local(temp)
. twoway connected EI_Tax year if abbr=="OH", xline(1988 1994 1998 2011, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregio
> n(color(white)) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. *connected dlnTax dlnTaxXEI year if abbr=="OH" , xline(1994)
. twoway connected EI_Tax year if abbr=="OK", xline(2003, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../tables/death_GaylordOK.pdf, replace as(pdf)
(file ../tables/death_GaylordOK.pdf written in PDF format)
. *line dlnTax dlnTaxXEI year if abbr=="OK" , xline(2003)
. twoway connected EI_Tax year if abbr=="AR", xline(1995, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white))
>  color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. graph export ../tables/death_Bud_WaltonAR.pdf, replace as(pdf)
(file ../tables/death_Bud_WaltonAR.pdf written in PDF format)
. *line dlnTax dlnTaxXEI year if abbr=="AR" , xline(1995)
. *twoway connected EI_Tax year if abbr=="CA", xline(2003, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white)
> ) color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. *twoway connected EI_Tax year if abbr=="NY", xline(2004, lcolor(gs8) lpattern(dash)) graphregion(color(white)) plotregion(color(white)
> ) color(black) ytitle(State E&I Tax Revenues (Millions of 2017 $))
. restore
. */
. 
. 
. /// C. FALSIFICATION TEST: PROB OF CHOOSING HIGH-MTR STATE
> gen Age_num_trunc = Age_num
. *replace Age_num_trunc = 90 if Age_num_trunc>=90 & Age_num_trunc~=.  //lumping together for graphing purposes
. replace Age_num_trunc = 85 if Age_num_trunc>=85 & Age_num_trunc~=.  //lumping together for graphing purposes
(615 real changes made)
. *replace Age_num_trunc = 40 if Age_num_trunc<=40 & Age_num_trunc~=.
. 
. gen highMTR = (avg > .03)
. binscatter highMTR Age_num_trunc if Age_num>40 & year<=2001, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 4
> 5 50 55 60 65 70 75 80 85 "85+")  ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
----------------------------------------------------------------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     7,386
-------------+----------------------------------   F(1, 7384)      =     78.33
       Model |  16.2050886         1  16.2050886   Prob > F        =    0.0000
    Residual |  1527.69201     7,384  .206892201   R-squared       =    0.0105
-------------+----------------------------------   Adj R-squared   =    0.0104
       Total |   1543.8971     7,385  .209058511   Root MSE        =    .45485

-------------------------------------------------------------------------------
      highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |   .0040706   .0004599     8.85   0.000      .003169    .0049723
        _cons |    .440903   .0300184    14.69   0.000     .3820584    .4997475
-------------------------------------------------------------------------------
. graph export ../tables/binscatteravg_Age_pre2001.pdf, replace as(pdf)
(file ../tables/binscatteravg_Age_pre2001.pdf written in PDF format)
. eststo highMTR_age1: reghdfe highMTR Age_num if Age_num>40 & post==0, cluster(stateyear) absorb(year)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      7,386
Absorbing 1 HDFE group                            F(   1,    807) =      43.09
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.0174
                                                  Adj R-squared   =     0.0147
                                                  Within R-sq.    =     0.0097
Number of clusters (stateyear) =        808       Root MSE        =     0.4538

                            (Std. Err. adjusted for 808 clusters in stateyear)
------------------------------------------------------------------------------
             |               Robust
     highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     Age_num |   .0038035   .0005794     6.56   0.000     .0026661    .0049408
       _cons |   .4574716   .0546681     8.37   0.000     .3501632      .56478
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
        year |        20           0          20     |
-----------------------------------------------------+
. estadd local stateFE     "No",   replace:   highMTR_age1
. estadd local indivFE     "No",   replace:   highMTR_age1
. estadd local yearFE      "Yes",   replace:   highMTR_age1
. 
. binscatter highMTR Age_num_trunc if Age_num>40 & year>=2005, discrete reportreg yscale(range(0 1)) ylabel(0 .2 .4 .6 .8 1) xlabel(40 4
> 5 50 55 60 65 70 75 80 85 "85+") ytitle("Fraction of Age Group Living in State with High MTR") xtitle("Age")
----------------------------------------------------------------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     4,780
-------------+----------------------------------   F(1, 4778)      =      9.41
       Model |  1.88289262         1  1.88289262   Prob > F        =    0.0022
    Residual |   956.27694     4,778  .200141679   R-squared       =    0.0020
-------------+----------------------------------   Adj R-squared   =    0.0018
       Total |  958.159833     4,779  .200493792   Root MSE        =    .44737

-------------------------------------------------------------------------------
      highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |   .0017241   .0005621     3.07   0.002     .0006221    .0028261
        _cons |   .6074429   .0380962    15.94   0.000     .5327569     .682129
-------------------------------------------------------------------------------
. graph export ../tables/binscatteravg_Age_post2004.pdf, replace as(pdf)
(file ../tables/binscatteravg_Age_post2004.pdf written in PDF format)
. 
. eststo highMTR_age2: reghdfe highMTR Age_num if Age_num>40 & post==1, cluster(stateyear) absorb(year)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      5,525
Absorbing 1 HDFE group                            F(   1,    586) =       9.71
Statistics robust to heteroskedasticity           Prob > F        =     0.0019
                                                  R-squared       =     0.0042
                                                  Adj R-squared   =     0.0015
                                                  Within R-sq.    =     0.0029
Number of clusters (stateyear) =        587       Root MSE        =     0.4464

                            (Std. Err. adjusted for 587 clusters in stateyear)
------------------------------------------------------------------------------
             |               Robust
     highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     Age_num |    .002027   .0006503     3.12   0.002     .0007497    .0033043
       _cons |   .5889991   .0620522     9.49   0.000     .4671272    .7108709
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
        year |        15           0          15     |
-----------------------------------------------------+
. estadd local stateFE     "No",   replace:   highMTR_age2
. estadd local indivFE     "No",   replace:   highMTR_age2
. estadd local yearFE      "Yes",   replace:   highMTR_age2
. 
. eststo highMTR_age3: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(stateyear) absorb(year)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =     12,911
Absorbing 1 HDFE group                            F(   2,   1394) =      26.42
Statistics robust to heteroskedasticity           Prob > F        =     0.0000
                                                  R-squared       =     0.0125
                                                  Adj R-squared   =     0.0097
                                                  Within R-sq.    =     0.0068
Number of clusters (stateyear) =      1,395       Root MSE        =     0.4507

                          (Std. Err. adjusted for 1,395 clusters in stateyear)
------------------------------------------------------------------------------
             |               Robust
     highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0017765   .0008707    -2.04   0.042    -.0034845   -.0000684
     Age_num |   .0038035   .0005793     6.57   0.000     .0026671    .0049398
       _cons |   .5137561   .0410134    12.53   0.000     .4333014    .5942108
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
        year |        35           0          35     |
-----------------------------------------------------+
. estadd local stateFE     "No",   replace:   highMTR_age3
. estadd local indivFE     "No",   replace:   highMTR_age3
. estadd local yearFE      "Yes",   replace:   highMTR_age3
. 
. eststo highMTR_age4: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum year)
(dropped 1 singleton observations)
(MWFE estimator converged in 6 iterations)

HDFE Linear regression                            Number of obs   =     12,910
Absorbing 2 HDFE groups                           F(   2,   1393) =       0.73
Statistics robust to heteroskedasticity           Prob > F        =     0.4815
                                                  R-squared       =     0.9052
                                                  Adj R-squared   =     0.9046
Number of clusters (stateyear) =      1,394       Within R-sq.    =     0.0010
Number of clusters (nameid)  =      1,428         Root MSE        =     0.1399

                   (Std. Err. adjusted for 1,394 clusters in stateyear nameid)
------------------------------------------------------------------------------
             |               Robust
     highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |   -.000628   .0005523    -1.14   0.256    -.0017116    .0004555
     Age_num |   .0000502   .0002578     0.19   0.846    -.0004556    .0005559
       _cons |   .7267154   .0172283    42.18   0.000     .6929191    .7605117
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
    statenum |        48           0          48     |
        year |        35           1          34     |
-----------------------------------------------------+
. estadd local stateFE     "Yes",   replace:   highMTR_age4
. estadd local indivFE     "No",   replace:   highMTR_age4
. estadd local yearFE      "Yes",   replace:   highMTR_age4
. 
. eststo highMTR_age5: reghdfe highMTR AgeXpost Age_num if Age_num>40, cluster(nameid) absorb(statenum nameid year)
(dropped 199 singleton observations)
(MWFE estimator converged in 61 iterations)

HDFE Linear regression                            Number of obs   =     12,712
Absorbing 3 HDFE groups                           F(   2,   1229) =       2.67
Statistics robust to heteroskedasticity           Prob > F        =     0.0696
                                                  R-squared       =     0.9490
                                                  Adj R-squared   =     0.9432
                                                  Within R-sq.    =     0.0003
Number of clusters (nameid)  =      1,230         Root MSE        =     0.1079

                             (Std. Err. adjusted for 1,230 clusters in nameid)
------------------------------------------------------------------------------
             |               Robust
     highMTR |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |   .0003754   .0010854     0.35   0.730    -.0017541    .0025048
     Age_num |   .0015601   .0006764     2.31   0.021     .0002331    .0028871
       _cons |    .599791   .0563821    10.64   0.000     .4891752    .7104069
------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
    statenum |        48           0          48     |
      nameid |      1230        1230           0    *|
        year |        35           1          34     |
-----------------------------------------------------+
* = FE nested within cluster; treated as redundant for DoF computation
. estadd local stateFE     "Yes",   replace:   highMTR_age5
. estadd local indivFE     "Yes",   replace:   highMTR_age5
. estadd local yearFE      "Yes",   replace:   highMTR_age5
. 
. sleep 1000
. 
. #delimit ;
delimiter now ;
. esttab highMTR_age1 highMTR_age2 highMTR_age3 highMTR_age4 
>      using ../tables/highMTR_age`postyear'.tex, replace se scalars(yearFE stateFE ) mtitle("1982-`postyear'" "`py1'-2017" "1982-2017" 
> "1982-2017") 
>      noconstant label compress substitute(\_ _ yearFE "Year Fixed Effects" stateFE "State Fixed Effects" ) star(* 0.1 ** 0.05 *** 0.01
>  )
>          postfoot("\hline \hline" "\multicolumn{4}{l}{\footnotesize Standard errors (in parentheses) two-way clustered by individual a
> nd by state.} \\" 
>          "\multicolumn{4}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../tables/highMTR_age2001.tex)
. #delimit cr
delimiter now cr
. */
. 
. 
. /// B. SCATTERPLOTS BY AGE
> 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==0 /*& inlist(abbr,"CA")==0*/, discrete reportreg yscale(range(0 .55)) xlabel(4
> 0 45 50 55 60 65 70 75 80 85 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("A
> ge") 
----------------------------------------------------------------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     7,386
-------------+----------------------------------   F(1, 7384)      =      7.18
       Model |  1.69360691         1  1.69360691   Prob > F        =    0.0074
    Residual |  1742.79935     7,384  .236023748   R-squared       =    0.0010
-------------+----------------------------------   Adj R-squared   =    0.0008
       Total |  1744.49296     7,385  .236221118   Root MSE        =    .48582

-------------------------------------------------------------------------------
           EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |    .001316   .0004913     2.68   0.007     .0003529     .002279
        _cons |     .29794   .0320622     9.29   0.000     .2350891     .360791
-------------------------------------------------------------------------------
. graph export ../tables/binscatterEI_Age_pre`postyear'.pdf, replace as(pdf)
(file ../tables/binscatterEI_Age_pre2001.pdf written in PDF format)
. *eststo EI_age1: reghdfe EI Age_num if Age_num>40 & post==0 , cluster(stateyear nameid) absorb(year)
. *eststo EI_age1: reghdfe EI Age_num if post==0, cluster(stateyear nameid) absorb(year)
. eststo EI_age1: ivreg2 EI Age_num i.year if post==0, dkraay(2)  partial(i.year)
Warning: time variable year has 331 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         20                Number of obs =     7743
                                                      F(  1,    19) =    21.38
                                                      Prob > F      =   0.0002
Total (centered) SS     =  1708.269007                Centered R2   =   0.0027
Total (uncentered) SS   =  1708.269007                Uncentered R2 =   0.0027
Residual SS             =   1703.73151                Root MSE      =    .4691

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     Age_num |   .0018552   .0003906     4.75   0.000     .0010897    .0026207
------------------------------------------------------------------------------
Included instruments: Age_num
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local stateFE     "No",   replace:   EI_age1
. estadd local indivFE     "No",   replace:   EI_age1
. estadd local yearFE      "Yes",   replace:   EI_age1
. ivreg2 EI Age_num_trunc i.year if post==0, dkraay(2)  partial(i.year)
Warning: time variable year has 331 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         20                Number of obs =     7743
                                                      F(  1,    19) =    22.22
                                                      Prob > F      =   0.0002
Total (centered) SS     =  1708.269007                Centered R2   =   0.0029
Total (uncentered) SS   =  1708.269007                Uncentered R2 =   0.0029
Residual SS             =  1703.341718                Root MSE      =     .469

-------------------------------------------------------------------------------
              |               Robust
           EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |   .0019762   .0004081     4.84   0.000     .0011764     .002776
-------------------------------------------------------------------------------
Included instruments: Age_num_trunc
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. local pretrend = _b[Age_num_trunc]
. qui reghdfe EI Age_num_trunc if Age_num_trunc>40 & post==0 & inlist(abbr,"CA")==0, cluster(stateyear nameid) absorb(year)
. local pretrendNoCA = _b[Age_num_trunc]
. *pause
. 
. binscatter EI Age_num_trunc if Age_num_trunc>40 & post==1 /*& inlist(abbr,"CA")==0*/, discrete reportreg yscale(range(0 .55)) xlabel(4
> 0 45 50 55 60 65 70 75 80 85 "85+") ylabel(0 .1 .2 .3 .4 .5) ytitle("Fraction of Age Group Living in State with Estate Tax") xtitle("A
> ge") 
----------------------------------------------------------------------------------------------------------------------------------------

      Source |       SS           df       MS      Number of obs   =     5,525
-------------+----------------------------------   F(1, 5523)      =     21.93
       Model |   3.8964087         1   3.8964087   Prob > F        =    0.0000
    Residual |  981.168931     5,523  .177651445   R-squared       =    0.0040
-------------+----------------------------------   Adj R-squared   =    0.0038
       Total |  985.065339     5,524  .178324645   Root MSE        =    .42149

-------------------------------------------------------------------------------
           EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |  -.0023134    .000494    -4.68   0.000    -.0032818    -.001345
        _cons |   .3865149   .0334311    11.56   0.000     .3209768     .452053
-------------------------------------------------------------------------------
. graph export ../tables/binscatterEI_Age_post`postyear'.pdf, replace as(pdf)
(file ../tables/binscatterEI_Age_post2001.pdf written in PDF format)
. *eststo EI_age2: reghdfe EI Age_num if Age_num>40 & post==1 /*& inlist(abbr,"CA")==0*/, cluster(stateyear nameid) absorb(year)
. *eststo EI_age2: reghdfe EI Age_num if post==1 /*& inlist(abbr,"CA")==0*/, cluster(stateyear nameid) absorb(year)
. eststo EI_age2: ivreg2 EI Age_num i.year if post==1, dkraay(2) partial(i.year)
Warning: time variable year has 218 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         15                Number of obs =     5689
                                                      F(  1,    14) =    13.10
                                                      Prob > F      =   0.0028
Total (centered) SS     =  985.1364251                Centered R2   =   0.0017
Total (uncentered) SS   =  985.1364251                Uncentered R2 =   0.0017
Residual SS             =  983.4287539                Root MSE      =    .4158

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     Age_num |  -.0013424   .0003578    -3.75   0.000    -.0020436   -.0006411
------------------------------------------------------------------------------
Included instruments: Age_num
Partialled-out:       2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. estadd local stateFE     "No",   replace:   EI_age2
. estadd local indivFE     "No",   replace:   EI_age2
. estadd local yearFE      "Yes",   replace:   EI_age2
. ivreg2 EI Age_num_trunc i.year if post==1, dkraay(2)  partial(i.year)
Warning: time variable year has 218 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         15                Number of obs =     5689
                                                      F(  1,    14) =    12.89
                                                      Prob > F      =   0.0030
Total (centered) SS     =  985.1364251                Centered R2   =   0.0016
Total (uncentered) SS   =  985.1364251                Uncentered R2 =   0.0016
Residual SS             =  983.5112209                Root MSE      =    .4158

-------------------------------------------------------------------------------
              |               Robust
           EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |  -.0013543    .000364    -3.72   0.000    -.0020677   -.0006409
-------------------------------------------------------------------------------
Included instruments: Age_num_trunc
Partialled-out:       2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. local posttrend = _b[Age_num_trunc]
. reghdfe EI Age_num_trunc if Age_num_trunc>40 & post==1 & inlist(abbr,"CA")==0, cluster(stateyear nameid) absorb(year)
(MWFE estimator converged in 1 iterations)

HDFE Linear regression                            Number of obs   =      4,316
Absorbing 1 HDFE group                            F(   1,    571) =       6.90
Statistics robust to heteroskedasticity           Prob > F        =     0.0089
                                                  R-squared       =     0.0380
                                                  Adj R-squared   =     0.0346
Number of clusters (stateyear) =        572       Within R-sq.    =     0.0117
Number of clusters (nameid)  =        606         Root MSE        =     0.4491

                      (Std. Err. adjusted for 572 clusters in stateyear nameid)
-------------------------------------------------------------------------------
              |               Robust
           EI |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
Age_num_trunc |   -.004364   .0016615    -2.63   0.009    -.0076274   -.0011006
        _cons |   .5899892    .121072     4.87   0.000     .3521883    .8277901
-------------------------------------------------------------------------------

Absorbed degrees of freedom:
-----------------------------------------------------+
 Absorbed FE | Categories  - Redundant  = Num. Coefs |
-------------+---------------------------------------|
        year |        15           0          15     |
-----------------------------------------------------+
. local posttrendNoCA = _b[Age_num_trunc]
. *pause
. 
. 
. /*
> *****************   NEW ******************
> ivreg2 EI Age_num officer_tied c.Age_num#i.officer_tied if post==0, cluster(stateyear nameid)
> ivreg2 EI Age_num officer_tied c.Age_num#1.officer_tied if post==1, cluster(stateyear nameid)
> ivreg2 EI Age_num our_wealthy c.Age_num#1.our_wealthy if post==1, cluster(stateyear nameid)
> ******************************************
> */
. 
. eststo EI_age3: ivreg2 EI AgeXpost Age_num i.year, dkraay(2)  partial(i.year)
Warning: time variable year has 944 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =    13432
                                                      F(  2,    34) =    17.75
                                                      Prob > F      =   0.0000
Total (centered) SS     =  2693.405432                Centered R2   =   0.0023
Total (uncentered) SS   =  2693.405432                Uncentered R2 =   0.0023
Residual SS             =  2687.160264                Root MSE      =    .4473

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0031976   .0005297    -6.04   0.000    -.0042357   -.0021595
     Age_num |   .0018552   .0003906     4.75   0.000     .0010897    .0026207
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       1983.year 1984.year 1985.year 1986.year 1987.year
                      1988.year 1989.year 1990.year 1991.year 1992.year
                      1993.year 1994.year 1995.year 1996.year 1997.year
                      1998.year 1999.year 2000.year 2001.year 2003.year
                      2004.year 2005.year 2006.year 2007.year 2008.year
                      2009.year 2010.year 2011.year 2012.year 2013.year
                      2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. *eststo EI_age3: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(year)
. *eststo EI_age3: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(year)
. estadd local stateFE     "No",   replace:   EI_age3
. estadd local indivFE     "No",   replace:   EI_age3
. estadd local yearFE      "Yes",   replace:   EI_age3
. 
. eststo EI_age4: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
Warning: time variable year has 944 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =    13432
                                                      F(  2,    34) =     9.72
                                                      Prob > F      =   0.0005
Total (centered) SS     =  1051.264546                Centered R2   =   0.0031
Total (uncentered) SS   =  1051.264546                Uncentered R2 =   0.0031
Residual SS             =  1048.053234                Root MSE      =    .2793

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0023492   .0005708    -4.12   0.000     -.003468   -.0012304
     Age_num |   .0006411   .0004704     1.36   0.173    -.0002809    .0015631
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. *eststo EI_age4: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum year) keepsingletons
. *eststo EI_age4: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(statenum year) keepsingletons
. estadd local stateFE     "Yes",  replace:   EI_age4
. estadd local indivFE     "No",   replace:   EI_age4
. estadd local yearFE      "Yes",   replace:   EI_age4
. 
. /*
> eststo EI_age6: reghdfe EI AgeXpost Age_num company_tied, cluster(stateyear nameid) absorb(statenum year) keepsingletons
> estadd local stateFE     "Yes",  replace:   EI_age6
> estadd local indivFE     "No",   replace:   EI_age6
> estadd local yearFE      "Yes",   replace:   EI_age6
> */
. 
. *eststo EI_age5: reghdfe EI AgeXpost Age_num if Age_num>40, cluster(nameid) absorb(statenum nameid year) keepsingletons
. eststo EI_age5: ivreg2 EI AgeXpost Age_num i.statenum i.year i.nameid, dkraay(2)  partial(i.statenum i.year i.nameid)
Warning: time variable year has 944 gap(s) in relevant range
Warning - collinearities detected
Vars dropped:       221.nameid 500.nameid 991.nameid 1057.nameid 1385.nameid
                    1405.nameid 1566.nameid 1591.nameid 1600.nameid 1651.nameid
                    1702.nameid

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =    13432
                                                      F(  2,    34) =     8.61
                                                      Prob > F      =   0.0009
Total (centered) SS     =  696.4036822                Centered R2   =   0.0014
Total (uncentered) SS   =  696.4036822                Uncentered R2 =   0.0014
Residual SS             =  695.4066782                Root MSE      =    .2275

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0021289   .0011327    -1.88   0.060     -.004349    .0000912
     Age_num |  -.0045273   .0011705    -3.87   0.000    -.0068215   -.0022331
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      20.statenum 21.statenum 22.statenum 23.statenum
                      24.statenum 25.statenum 26.statenum 27.statenum
                      28.statenum 29.statenum 30.statenum 31.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      48.statenum 49.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year 2.nameid 3.nameid 4.nameid 5.nameid 6.nameid
                      8.nameid 9.nameid 10.nameid 11.nameid 12.nameid 13.nameid
                      14.nameid 15.nameid 16.nameid 17.nameid 18.nameid
                      19.nameid 20.nameid 21.nameid 22.nameid 23.nameid
                      24.nameid 25.nameid 26.nameid 27.nameid 30.nameid
                      31.nameid 32.nameid 33.nameid 34.nameid 35.nameid
                      36.nameid 37.nameid 38.nameid 39.nameid 40.nameid
                      41.nameid 42.nameid 43.nameid 44.nameid 45.nameid
                      46.nameid 47.nameid 48.nameid 49.nameid 50.nameid
                      53.nameid 54.nameid 55.nameid 57.nameid 58.nameid
                      59.nameid 61.nameid 62.nameid 63.nameid 64.nameid
                      65.nameid 67.nameid 68.nameid 69.nameid 70.nameid
                      71.nameid 72.nameid 75.nameid 76.nameid 77.nameid
                      78.nameid 79.nameid 80.nameid 81.nameid 82.nameid
                      83.nameid 84.nameid 85.nameid 86.nameid 87.nameid
                      88.nameid 89.nameid 90.nameid 91.nameid 92.nameid
                      93.nameid 94.nameid 95.nameid 96.nameid 97.nameid
                      98.nameid 99.nameid 100.nameid 101.nameid 102.nameid
                      103.nameid 104.nameid 106.nameid 107.nameid 108.nameid
                      109.nameid 110.nameid 111.nameid 113.nameid 114.nameid
                      115.nameid 116.nameid 117.nameid 120.nameid 121.nameid
                      123.nameid 124.nameid 125.nameid 126.nameid 127.nameid
                      128.nameid 129.nameid 130.nameid 131.nameid 132.nameid
                      133.nameid 134.nameid 136.nameid 137.nameid 138.nameid
                      139.nameid 140.nameid 141.nameid 142.nameid 143.nameid
                      144.nameid 147.nameid 150.nameid 151.nameid 152.nameid
                      153.nameid 154.nameid 155.nameid 156.nameid 157.nameid
                      158.nameid 159.nameid 162.nameid 163.nameid 164.nameid
                      165.nameid 166.nameid 167.nameid 168.nameid 169.nameid
                      171.nameid 174.nameid 175.nameid 177.nameid 178.nameid
                      181.nameid 184.nameid 185.nameid 186.nameid 187.nameid
                      188.nameid 189.nameid 190.nameid 191.nameid 192.nameid
                      193.nameid 194.nameid 197.nameid 198.nameid 199.nameid
                      201.nameid 202.nameid 203.nameid 204.nameid 205.nameid
                      206.nameid 207.nameid 208.nameid 209.nameid 210.nameid
                      211.nameid 212.nameid 213.nameid 214.nameid 215.nameid
                      216.nameid 217.nameid 218.nameid 219.nameid 220.nameid
                      222.nameid 224.nameid 225.nameid 226.nameid 227.nameid
                      228.nameid 229.nameid 230.nameid 231.nameid 232.nameid
                      233.nameid 234.nameid 235.nameid 236.nameid 238.nameid
                      239.nameid 241.nameid 242.nameid 243.nameid 244.nameid
                      245.nameid 246.nameid 247.nameid 248.nameid 249.nameid
                      253.nameid 255.nameid 256.nameid 257.nameid 258.nameid
                      260.nameid 261.nameid 262.nameid 263.nameid 264.nameid
                      265.nameid 266.nameid 267.nameid 268.nameid 269.nameid
                      270.nameid 271.nameid 272.nameid 273.nameid 274.nameid
                      275.nameid 276.nameid 277.nameid 278.nameid 279.nameid
                      280.nameid 281.nameid 282.nameid 283.nameid 284.nameid
                      285.nameid 286.nameid 287.nameid 288.nameid 289.nameid
                      290.nameid 291.nameid 292.nameid 293.nameid 294.nameid
                      295.nameid 296.nameid 298.nameid 299.nameid 300.nameid
                      301.nameid 302.nameid 303.nameid 304.nameid 305.nameid
                      306.nameid 307.nameid 308.nameid 309.nameid 310.nameid
                      311.nameid 312.nameid 314.nameid 315.nameid 316.nameid
                      317.nameid 318.nameid 319.nameid 320.nameid 321.nameid
                      322.nameid 323.nameid 324.nameid 328.nameid 329.nameid
                      331.nameid 333.nameid 334.nameid 335.nameid 336.nameid
                      337.nameid 338.nameid 339.nameid 340.nameid 341.nameid
                      342.nameid 345.nameid 347.nameid 348.nameid 349.nameid
                      350.nameid 351.nameid 353.nameid 354.nameid 355.nameid
                      356.nameid 357.nameid 358.nameid 359.nameid 360.nameid
                      361.nameid 362.nameid 363.nameid 364.nameid 365.nameid
                      366.nameid 367.nameid 369.nameid 370.nameid 371.nameid
                      372.nameid 373.nameid 374.nameid 375.nameid 379.nameid
                      380.nameid 381.nameid 382.nameid 383.nameid 384.nameid
                      385.nameid 386.nameid 389.nameid 390.nameid 391.nameid
                      392.nameid 393.nameid 394.nameid 395.nameid 396.nameid
                      397.nameid 398.nameid 399.nameid 400.nameid 401.nameid
                      402.nameid 403.nameid 404.nameid 405.nameid 406.nameid
                      407.nameid 408.nameid 410.nameid 411.nameid 412.nameid
                      413.nameid 414.nameid 415.nameid 416.nameid 417.nameid
                      418.nameid 419.nameid 421.nameid 422.nameid 423.nameid
                      424.nameid 425.nameid 427.nameid 428.nameid 429.nameid
                      430.nameid 432.nameid 433.nameid 434.nameid 435.nameid
                      436.nameid 437.nameid 439.nameid 440.nameid 441.nameid
                      442.nameid 443.nameid 444.nameid 445.nameid 446.nameid
                      447.nameid 448.nameid 449.nameid 451.nameid 452.nameid
                      455.nameid 457.nameid 458.nameid 460.nameid 461.nameid
                      462.nameid 463.nameid 464.nameid 465.nameid 466.nameid
                      467.nameid 468.nameid 469.nameid 470.nameid 471.nameid
                      473.nameid 474.nameid 475.nameid 476.nameid 477.nameid
                      478.nameid 479.nameid 480.nameid 481.nameid 482.nameid
                      483.nameid 484.nameid 485.nameid 486.nameid 487.nameid
                      488.nameid 489.nameid 490.nameid 493.nameid 494.nameid
                      495.nameid 496.nameid 497.nameid 498.nameid 499.nameid
                      502.nameid 503.nameid 504.nameid 505.nameid 506.nameid
                      507.nameid 508.nameid 509.nameid 510.nameid 511.nameid
                      512.nameid 513.nameid 514.nameid 515.nameid 516.nameid
                      517.nameid 518.nameid 519.nameid 520.nameid 521.nameid
                      522.nameid 524.nameid 525.nameid 526.nameid 527.nameid
                      528.nameid 529.nameid 533.nameid 534.nameid 535.nameid
                      536.nameid 539.nameid 540.nameid 541.nameid 542.nameid
                      544.nameid 545.nameid 546.nameid 547.nameid 548.nameid
                      552.nameid 553.nameid 555.nameid 556.nameid 557.nameid
                      558.nameid 559.nameid 560.nameid 561.nameid 562.nameid
                      563.nameid 566.nameid 568.nameid 569.nameid 570.nameid
                      571.nameid 572.nameid 573.nameid 574.nameid 575.nameid
                      576.nameid 577.nameid 579.nameid 580.nameid 581.nameid
                      582.nameid 583.nameid 584.nameid 585.nameid 586.nameid
                      587.nameid 588.nameid 589.nameid 590.nameid 591.nameid
                      592.nameid 593.nameid 594.nameid 595.nameid 596.nameid
                      597.nameid 598.nameid 599.nameid 600.nameid 601.nameid
                      602.nameid 603.nameid 604.nameid 605.nameid 606.nameid
                      607.nameid 608.nameid 609.nameid 610.nameid 611.nameid
                      612.nameid 613.nameid 614.nameid 615.nameid 616.nameid
                      622.nameid 623.nameid 624.nameid 627.nameid 628.nameid
                      629.nameid 630.nameid 631.nameid 632.nameid 633.nameid
                      634.nameid 637.nameid 638.nameid 639.nameid 641.nameid
                      642.nameid 644.nameid 645.nameid 646.nameid 647.nameid
                      649.nameid 652.nameid 654.nameid 655.nameid 656.nameid
                      657.nameid 658.nameid 659.nameid 660.nameid 661.nameid
                      663.nameid 664.nameid 665.nameid 666.nameid 667.nameid
                      668.nameid 669.nameid 670.nameid 671.nameid 672.nameid
                      673.nameid 674.nameid 675.nameid 677.nameid 678.nameid
                      679.nameid 680.nameid 681.nameid 682.nameid 683.nameid
                      684.nameid 685.nameid 686.nameid 687.nameid 688.nameid
                      689.nameid 690.nameid 691.nameid 692.nameid 693.nameid
                      694.nameid 695.nameid 696.nameid 697.nameid 699.nameid
                      700.nameid 701.nameid 702.nameid 703.nameid 704.nameid
                      705.nameid 706.nameid 707.nameid 708.nameid 709.nameid
                      710.nameid 711.nameid 713.nameid 714.nameid 715.nameid
                      716.nameid 717.nameid 718.nameid 719.nameid 720.nameid
                      722.nameid 723.nameid 724.nameid 725.nameid 727.nameid
                      728.nameid 729.nameid 730.nameid 731.nameid 732.nameid
                      733.nameid 734.nameid 735.nameid 736.nameid 737.nameid
                      738.nameid 739.nameid 740.nameid 741.nameid 742.nameid
                      743.nameid 744.nameid 745.nameid 746.nameid 747.nameid
                      748.nameid 749.nameid 751.nameid 752.nameid 754.nameid
                      755.nameid 756.nameid 757.nameid 758.nameid 759.nameid
                      760.nameid 761.nameid 762.nameid 763.nameid 764.nameid
                      765.nameid 766.nameid 767.nameid 768.nameid 769.nameid
                      770.nameid 771.nameid 772.nameid 774.nameid 775.nameid
                      776.nameid 777.nameid 778.nameid 779.nameid 780.nameid
                      781.nameid 782.nameid 783.nameid 784.nameid 785.nameid
                      786.nameid 787.nameid 788.nameid 789.nameid 790.nameid
                      791.nameid 792.nameid 793.nameid 794.nameid 795.nameid
                      796.nameid 797.nameid 798.nameid 799.nameid 800.nameid
                      801.nameid 802.nameid 804.nameid 805.nameid 806.nameid
                      807.nameid 808.nameid 809.nameid 810.nameid 811.nameid
                      812.nameid 813.nameid 814.nameid 815.nameid 816.nameid
                      817.nameid 818.nameid 819.nameid 821.nameid 822.nameid
                      823.nameid 824.nameid 825.nameid 826.nameid 827.nameid
                      828.nameid 829.nameid 830.nameid 831.nameid 832.nameid
                      833.nameid 834.nameid 835.nameid 836.nameid 837.nameid
                      838.nameid 839.nameid 840.nameid 841.nameid 842.nameid
                      843.nameid 844.nameid 845.nameid 846.nameid 847.nameid
                      848.nameid 849.nameid 850.nameid 851.nameid 852.nameid
                      853.nameid 854.nameid 856.nameid 857.nameid 858.nameid
                      859.nameid 860.nameid 861.nameid 862.nameid 863.nameid
                      865.nameid 866.nameid 867.nameid 868.nameid 869.nameid
                      870.nameid 871.nameid 872.nameid 873.nameid 874.nameid
                      875.nameid 876.nameid 877.nameid 878.nameid 879.nameid
                      880.nameid 881.nameid 882.nameid 883.nameid 884.nameid
                      885.nameid 886.nameid 887.nameid 888.nameid 889.nameid
                      890.nameid 891.nameid 892.nameid 893.nameid 894.nameid
                      895.nameid 896.nameid 897.nameid 898.nameid 900.nameid
                      901.nameid 903.nameid 904.nameid 905.nameid 906.nameid
                      907.nameid 908.nameid 909.nameid 910.nameid 913.nameid
                      914.nameid 916.nameid 917.nameid 918.nameid 919.nameid
                      920.nameid 921.nameid 922.nameid 923.nameid 924.nameid
                      925.nameid 926.nameid 927.nameid 928.nameid 929.nameid
                      930.nameid 932.nameid 934.nameid 938.nameid 939.nameid
                      940.nameid 943.nameid 944.nameid 946.nameid 947.nameid
                      948.nameid 949.nameid 950.nameid 951.nameid 952.nameid
                      953.nameid 954.nameid 955.nameid 956.nameid 958.nameid
                      959.nameid 960.nameid 961.nameid 962.nameid 963.nameid
                      964.nameid 965.nameid 966.nameid 967.nameid 968.nameid
                      969.nameid 970.nameid 971.nameid 972.nameid 973.nameid
                      974.nameid 975.nameid 976.nameid 977.nameid 978.nameid
                      979.nameid 980.nameid 981.nameid 982.nameid 983.nameid
                      984.nameid 985.nameid 986.nameid 987.nameid 989.nameid
                      990.nameid 992.nameid 993.nameid 994.nameid 995.nameid
                      996.nameid 997.nameid 998.nameid 999.nameid 1001.nameid
                      1002.nameid 1003.nameid 1004.nameid 1005.nameid
                      1006.nameid 1007.nameid 1008.nameid 1009.nameid
                      1010.nameid 1011.nameid 1012.nameid 1013.nameid
                      1014.nameid 1015.nameid 1016.nameid 1017.nameid
                      1020.nameid 1021.nameid 1022.nameid 1023.nameid
                      1025.nameid 1026.nameid 1027.nameid 1028.nameid
                      1029.nameid 1030.nameid 1031.nameid 1032.nameid
                      1033.nameid 1034.nameid 1035.nameid 1036.nameid
                      1037.nameid 1038.nameid 1039.nameid 1040.nameid
                      1041.nameid 1042.nameid 1043.nameid 1044.nameid
                      1045.nameid 1047.nameid 1049.nameid 1050.nameid
                      1051.nameid 1052.nameid 1054.nameid 1055.nameid
                      1056.nameid 1058.nameid 1059.nameid 1060.nameid
                      1061.nameid 1062.nameid 1063.nameid 1064.nameid
                      1065.nameid 1066.nameid 1067.nameid 1068.nameid
                      1069.nameid 1070.nameid 1071.nameid 1072.nameid
                      1073.nameid 1074.nameid 1075.nameid 1076.nameid
                      1077.nameid 1078.nameid 1079.nameid 1080.nameid
                      1081.nameid 1082.nameid 1083.nameid 1084.nameid
                      1085.nameid 1086.nameid 1087.nameid 1088.nameid
                      1089.nameid 1090.nameid 1091.nameid 1092.nameid
                      1093.nameid 1094.nameid 1095.nameid 1104.nameid
                      1105.nameid 1107.nameid 1108.nameid 1109.nameid
                      1110.nameid 1111.nameid 1112.nameid 1113.nameid
                      1114.nameid 1115.nameid 1116.nameid 1117.nameid
                      1118.nameid 1119.nameid 1120.nameid 1121.nameid
                      1122.nameid 1123.nameid 1124.nameid 1125.nameid
                      1126.nameid 1127.nameid 1128.nameid 1129.nameid
                      1130.nameid 1131.nameid 1132.nameid 1133.nameid
                      1134.nameid 1135.nameid 1136.nameid 1137.nameid
                      1138.nameid 1140.nameid 1141.nameid 1142.nameid
                      1143.nameid 1144.nameid 1145.nameid 1146.nameid
                      1147.nameid 1149.nameid 1150.nameid 1151.nameid
                      1152.nameid 1153.nameid 1156.nameid 1158.nameid
                      1159.nameid 1160.nameid 1161.nameid 1162.nameid
                      1163.nameid 1165.nameid 1166.nameid 1167.nameid
                      1168.nameid 1169.nameid 1170.nameid 1171.nameid
                      1173.nameid 1174.nameid 1175.nameid 1176.nameid
                      1177.nameid 1178.nameid 1179.nameid 1180.nameid
                      1181.nameid 1184.nameid 1185.nameid 1186.nameid
                      1187.nameid 1188.nameid 1189.nameid 1191.nameid
                      1192.nameid 1195.nameid 1196.nameid 1197.nameid
                      1198.nameid 1199.nameid 1201.nameid 1202.nameid
                      1203.nameid 1204.nameid 1205.nameid 1208.nameid
                      1210.nameid 1211.nameid 1212.nameid 1213.nameid
                      1214.nameid 1216.nameid 1217.nameid 1218.nameid
                      1219.nameid 1220.nameid 1221.nameid 1222.nameid
                      1223.nameid 1224.nameid 1225.nameid 1226.nameid
                      1227.nameid 1228.nameid 1229.nameid 1230.nameid
                      1231.nameid 1232.nameid 1233.nameid 1234.nameid
                      1235.nameid 1236.nameid 1237.nameid 1238.nameid
                      1240.nameid 1241.nameid 1242.nameid 1243.nameid
                      1244.nameid 1245.nameid 1247.nameid 1248.nameid
                      1249.nameid 1250.nameid 1251.nameid 1252.nameid
                      1253.nameid 1255.nameid 1257.nameid 1258.nameid
                      1259.nameid 1264.nameid 1265.nameid 1268.nameid
                      1269.nameid 1270.nameid 1271.nameid 1272.nameid
                      1273.nameid 1274.nameid 1275.nameid 1276.nameid
                      1277.nameid 1278.nameid 1279.nameid 1280.nameid
                      1281.nameid 1282.nameid 1283.nameid 1284.nameid
                      1285.nameid 1286.nameid 1287.nameid 1288.nameid
                      1289.nameid 1291.nameid 1292.nameid 1293.nameid
                      1294.nameid 1296.nameid 1297.nameid 1298.nameid
                      1299.nameid 1300.nameid 1303.nameid 1304.nameid
                      1305.nameid 1306.nameid 1307.nameid 1308.nameid
                      1309.nameid 1310.nameid 1311.nameid 1312.nameid
                      1313.nameid 1314.nameid 1315.nameid 1316.nameid
                      1317.nameid 1318.nameid 1319.nameid 1320.nameid
                      1321.nameid 1323.nameid 1324.nameid 1325.nameid
                      1326.nameid 1327.nameid 1328.nameid 1329.nameid
                      1330.nameid 1331.nameid 1332.nameid 1333.nameid
                      1334.nameid 1335.nameid 1336.nameid 1337.nameid
                      1339.nameid 1340.nameid 1341.nameid 1342.nameid
                      1343.nameid 1344.nameid 1345.nameid 1346.nameid
                      1347.nameid 1349.nameid 1350.nameid 1351.nameid
                      1352.nameid 1353.nameid 1354.nameid 1355.nameid
                      1356.nameid 1357.nameid 1358.nameid 1359.nameid
                      1360.nameid 1361.nameid 1362.nameid 1363.nameid
                      1364.nameid 1365.nameid 1366.nameid 1367.nameid
                      1368.nameid 1369.nameid 1370.nameid 1371.nameid
                      1372.nameid 1373.nameid 1374.nameid 1375.nameid
                      1376.nameid 1377.nameid 1378.nameid 1380.nameid
                      1381.nameid 1382.nameid 1383.nameid 1384.nameid
                      1386.nameid 1388.nameid 1389.nameid 1390.nameid
                      1391.nameid 1392.nameid 1393.nameid 1394.nameid
                      1395.nameid 1396.nameid 1397.nameid 1398.nameid
                      1400.nameid 1401.nameid 1402.nameid 1403.nameid
                      1404.nameid 1406.nameid 1407.nameid 1408.nameid
                      1409.nameid 1410.nameid 1411.nameid 1413.nameid
                      1414.nameid 1415.nameid 1416.nameid 1420.nameid
                      1421.nameid 1422.nameid 1423.nameid 1424.nameid
                      1425.nameid 1426.nameid 1428.nameid 1429.nameid
                      1431.nameid 1432.nameid 1433.nameid 1434.nameid
                      1435.nameid 1436.nameid 1437.nameid 1438.nameid
                      1439.nameid 1440.nameid 1441.nameid 1443.nameid
                      1444.nameid 1445.nameid 1446.nameid 1447.nameid
                      1448.nameid 1449.nameid 1450.nameid 1451.nameid
                      1453.nameid 1454.nameid 1455.nameid 1456.nameid
                      1457.nameid 1458.nameid 1459.nameid 1460.nameid
                      1461.nameid 1465.nameid 1466.nameid 1467.nameid
                      1468.nameid 1469.nameid 1471.nameid 1474.nameid
                      1476.nameid 1477.nameid 1478.nameid 1479.nameid
                      1480.nameid 1481.nameid 1482.nameid 1484.nameid
                      1485.nameid 1486.nameid 1487.nameid 1488.nameid
                      1489.nameid 1490.nameid 1491.nameid 1492.nameid
                      1493.nameid 1494.nameid 1496.nameid 1497.nameid
                      1498.nameid 1499.nameid 1500.nameid 1501.nameid
                      1502.nameid 1503.nameid 1504.nameid 1505.nameid
                      1506.nameid 1507.nameid 1508.nameid 1509.nameid
                      1510.nameid 1511.nameid 1512.nameid 1513.nameid
                      1514.nameid 1515.nameid 1516.nameid 1517.nameid
                      1518.nameid 1519.nameid 1520.nameid 1521.nameid
                      1522.nameid 1523.nameid 1524.nameid 1525.nameid
                      1526.nameid 1528.nameid 1529.nameid 1534.nameid
                      1535.nameid 1537.nameid 1538.nameid 1539.nameid
                      1540.nameid 1541.nameid 1542.nameid 1544.nameid
                      1545.nameid 1546.nameid 1547.nameid 1548.nameid
                      1549.nameid 1550.nameid 1551.nameid 1552.nameid
                      1554.nameid 1555.nameid 1558.nameid 1559.nameid
                      1561.nameid 1562.nameid 1563.nameid 1565.nameid
                      1567.nameid 1568.nameid 1569.nameid 1570.nameid
                      1571.nameid 1572.nameid 1573.nameid 1574.nameid
                      1575.nameid 1576.nameid 1577.nameid 1578.nameid
                      1579.nameid 1580.nameid 1581.nameid 1582.nameid
                      1583.nameid 1584.nameid 1585.nameid 1588.nameid
                      1589.nameid 1590.nameid 1592.nameid 1593.nameid
                      1594.nameid 1595.nameid 1596.nameid 1597.nameid
                      1598.nameid 1599.nameid 1601.nameid 1602.nameid
                      1603.nameid 1604.nameid 1605.nameid 1606.nameid
                      1611.nameid 1612.nameid 1613.nameid 1614.nameid
                      1615.nameid 1617.nameid 1618.nameid 1619.nameid
                      1620.nameid 1621.nameid 1622.nameid 1623.nameid
                      1624.nameid 1625.nameid 1626.nameid 1627.nameid
                      1628.nameid 1630.nameid 1631.nameid 1636.nameid
                      1638.nameid 1639.nameid 1641.nameid 1644.nameid
                      1645.nameid 1646.nameid 1647.nameid 1648.nameid
                      1649.nameid 1650.nameid 1652.nameid 1653.nameid
                      1654.nameid 1655.nameid 1656.nameid 1657.nameid
                      1658.nameid 1659.nameid 1660.nameid 1661.nameid
                      1663.nameid 1665.nameid 1667.nameid 1668.nameid
                      1669.nameid 1670.nameid 1671.nameid 1672.nameid
                      1673.nameid 1674.nameid 1675.nameid 1676.nameid
                      1677.nameid 1678.nameid 1679.nameid 1680.nameid
                      1681.nameid 1682.nameid 1683.nameid 1684.nameid
                      1685.nameid 1686.nameid 1687.nameid 1688.nameid
                      1689.nameid 1690.nameid 1691.nameid 1692.nameid
                      1693.nameid 1695.nameid 1696.nameid 1697.nameid
                      1698.nameid 1700.nameid 1701.nameid 1703.nameid
                      1704.nameid 1705.nameid 1706.nameid 1707.nameid
                      1708.nameid 1709.nameid 1710.nameid 1711.nameid
                      1712.nameid 1713.nameid 1714.nameid 1715.nameid
                      1717.nameid 1718.nameid 1719.nameid 1724.nameid
                      1725.nameid _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
Dropped collinear:    221.nameid 500.nameid 991.nameid 1057.nameid 1385.nameid
                      1405.nameid 1566.nameid 1591.nameid 1600.nameid
                      1651.nameid 1702.nameid
------------------------------------------------------------------------------
. *eststo EI_age5: reghdfe EI oldXpost old if Age_num>40, cluster(stateyear nameid) absorb(statenum nameid year) keepsingletons
. estadd local stateFE     "Yes",   replace:   EI_age5
. estadd local indivFE     "Yes",   replace:   EI_age5
. estadd local yearFE      "Yes",   replace:   EI_age5
. egen temp = mean(statenum) if e(sample), by(nameid)
. codebook nameid if temp~=statenum & e(sample)

----------------------------------------------------------------------------------------------------------------------------------------
nameid                                                                                                                              Name
----------------------------------------------------------------------------------------------------------------------------------------

                  type:  numeric (long)
                 label:  nameid

                 range:  [2,1711]                     units:  1
         unique values:  127                      missing .:  0/1,876

              examples:  345   Dirk Edward Ziff
                         714   James R Cargill
                         1151  Mortimer Benjamin Zuckerman
                         1396  Robert William Galvin
. *pause
. 
. local py1 = `postyear'+1
. if `postyear'==2001 {
.         local py1 = 2003  //no data in 2002
. }
. 
. #delimit ;
delimiter now ;
. esttab EI_age1 EI_age2 EI_age3 EI_age4 EI_age5 highMTR_age4 
>      using ../tables/EI_age`postyear'.tex, replace se scalars(yearFE stateFE indivFE) mtitle("1982-`postyear'" "`py1'-2017" "1982-2017
> " "1982-2017" "1982-2017" "High MTR") 
>      noconstant label compress substitute(\_ _  yearFE "Year Fixed Effects" stateFE "State Fixed Effects" indivFE "Individual Fixed Ef
> fects") star(* 0.1 ** 0.05 *** 0.01 )
>          postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors (in parentheses).} \\" 
>          "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../tables/EI_age2001.tex)
. #delimit cr
delimiter now cr
. 
. /// CONSTRUCT TABLE B6(C)
> preserve
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>100     
(10,156 observations deleted)
. eststo EI_age10: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
Warning: time variable year has 287 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =     3276
                                                      F(  2,    34) =    18.59
                                                      Prob > F      =   0.0000
Total (centered) SS     =  282.7624634                Centered R2   =   0.0148
Total (uncentered) SS   =  282.7624634                Uncentered R2 =   0.0148
Residual SS             =  278.5758301                Root MSE      =    .2916

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0056261   .0008987    -6.26   0.000    -.0073875   -.0038647
     Age_num |   .0027321   .0009142     2.99   0.003     .0009404    .0045238
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      31.statenum 32.statenum 33.statenum 34.statenum
                      35.statenum 36.statenum 37.statenum 38.statenum
                      39.statenum 40.statenum 41.statenum 42.statenum
                      43.statenum 44.statenum 46.statenum 47.statenum
                      49.statenum 1983.year 1984.year 1985.year 1986.year
                      1987.year 1988.year 1989.year 1990.year 1991.year
                      1992.year 1993.year 1994.year 1995.year 1996.year
                      1997.year 1998.year 1999.year 2000.year 2001.year
                      2003.year 2004.year 2005.year 2006.year 2007.year
                      2008.year 2009.year 2010.year 2011.year 2012.year
                      2013.year 2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>200     
(6,967 observations deleted)
. eststo EI_age11: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
Warning: time variable year has 615 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =     6465
                                                      F(  2,    34) =     9.72
                                                      Prob > F      =   0.0005
Total (centered) SS     =  543.2421845                Centered R2   =   0.0067
Total (uncentered) SS   =  543.2421845                Uncentered R2 =   0.0067
Residual SS             =  539.6118159                Root MSE      =    .2889

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0036174   .0008065    -4.49   0.000    -.0051981   -.0020368
     Age_num |   .0012723   .0006321     2.01   0.044     .0000334    .0025112
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 28.statenum 29.statenum
                      30.statenum 31.statenum 32.statenum 33.statenum
                      34.statenum 35.statenum 36.statenum 37.statenum
                      38.statenum 39.statenum 40.statenum 41.statenum
                      42.statenum 43.statenum 44.statenum 46.statenum
                      47.statenum 49.statenum 1983.year 1984.year 1985.year
                      1986.year 1987.year 1988.year 1989.year 1990.year
                      1991.year 1992.year 1993.year 1994.year 1995.year
                      1996.year 1997.year 1998.year 1999.year 2000.year
                      2001.year 2003.year 2004.year 2005.year 2006.year
                      2007.year 2008.year 2009.year 2010.year 2011.year
                      2012.year 2013.year 2014.year 2015.year 2016.year
                      2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. use ./stata_data/IndivAnalysisDataset.dta, clear
. drop if ourrank>300     
(3,746 observations deleted)
. eststo EI_age12: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
Warning: time variable year has 951 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =     9686
                                                      F(  2,    34) =     8.75
                                                      Prob > F      =   0.0009
Total (centered) SS     =  798.8389504                Centered R2   =   0.0045
Total (uncentered) SS   =  798.8389504                Uncentered R2 =   0.0045
Residual SS             =   795.273575                Root MSE      =    .2865

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0029459   .0007194    -4.09   0.000    -.0043559   -.0015359
     Age_num |   .0009873   .0005653     1.75   0.081    -.0001206    .0020951
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 24.statenum
                      25.statenum 26.statenum 28.statenum 29.statenum
                      30.statenum 31.statenum 32.statenum 33.statenum
                      34.statenum 35.statenum 36.statenum 37.statenum
                      38.statenum 39.statenum 40.statenum 41.statenum
                      42.statenum 43.statenum 44.statenum 45.statenum
                      46.statenum 47.statenum 48.statenum 49.statenum 1983.year
                      1984.year 1985.year 1986.year 1987.year 1988.year
                      1989.year 1990.year 1991.year 1992.year 1993.year
                      1994.year 1995.year 1996.year 1997.year 1998.year
                      1999.year 2000.year 2001.year 2003.year 2004.year
                      2005.year 2006.year 2007.year 2008.year 2009.year
                      2010.year 2011.year 2012.year 2013.year 2014.year
                      2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. use ./stata_data/IndivAnalysisDataset.dta, clear
. egen obs = count(year), by(nameid)
. keep if obs>=10
(3,718 observations deleted)
. eststo EI_age13: ivreg2 EI AgeXpost Age_num i.statenum i.year, dkraay(2)  partial(i.statenum i.year)
Warning: time variable year has 648 gap(s) in relevant range

OLS estimation
--------------

Estimates efficient for homoskedasticity only
Statistics robust to heteroskedasticity and clustering on year
and kernel-robust to common correlated disturbances (Driscoll-Kraay)
  kernel=Bartlett; bandwidth=2
  time variable (t):  year
  group variable (i): nameid

Number of clusters (year) =         35                Number of obs =     9714
                                                      F(  2,    34) =     7.67
                                                      Prob > F      =   0.0018
Total (centered) SS     =  782.9472987                Centered R2   =   0.0052
Total (uncentered) SS   =  782.9472987                Uncentered R2 =   0.0052
Residual SS             =   778.879546                Root MSE      =    .2832

------------------------------------------------------------------------------
             |               Robust
          EI |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    AgeXpost |  -.0033744   .0008475    -3.98   0.000    -.0050355   -.0017133
     Age_num |   .0013392   .0006532     2.05   0.040     .0000589    .0026196
------------------------------------------------------------------------------
Included instruments: AgeXpost Age_num
Partialled-out:       2.statenum 3.statenum 4.statenum 5.statenum 6.statenum
                      7.statenum 8.statenum 9.statenum 10.statenum 11.statenum
                      12.statenum 13.statenum 14.statenum 15.statenum
                      16.statenum 17.statenum 18.statenum 19.statenum
                      21.statenum 22.statenum 23.statenum 25.statenum
                      26.statenum 28.statenum 29.statenum 30.statenum
                      32.statenum 33.statenum 34.statenum 35.statenum
                      36.statenum 37.statenum 38.statenum 39.statenum
                      40.statenum 41.statenum 42.statenum 43.statenum
                      44.statenum 45.statenum 46.statenum 47.statenum
                      49.statenum 1983.year 1984.year 1985.year 1986.year
                      1987.year 1988.year 1989.year 1990.year 1991.year
                      1992.year 1993.year 1994.year 1995.year 1996.year
                      1997.year 1998.year 1999.year 2000.year 2001.year
                      2003.year 2004.year 2005.year 2006.year 2007.year
                      2008.year 2009.year 2010.year 2011.year 2012.year
                      2013.year 2014.year 2015.year 2016.year 2017.year _cons
                      nb: total SS, model F and R2s are after partialling-out;
                          any small-sample adjustments include partialled-out
                          variables in regressor count K
------------------------------------------------------------------------------
. #delimit ;
delimiter now ;
. esttab EI_age10 EI_age11 EI_age12 EI_age13
>         using ../tables/EI_age`postyear'TopX.tex, replace se mtitle("Top 100" "Top200" "Top300" "10+ Obs" ) /*drop(*year *cons)*/
>         noconstant label compress substitute(\_ _ ) star(* 0.1 ** 0.05 *** 0.01 )
>         postfoot("\hline \hline" "\multicolumn{5}{l}{\footnotesize Driscoll-Kraay standard errors in parentheses.} \\" 
>         "\multicolumn{5}{l}{\footnotesize All regressions include state and year fixed effects.} \\"
>         "\multicolumn{5}{l}{\footnotesize \sym{*} \(p<0.10\), \sym{**} \(p<0.05\), \sym{***} \(p<0.01\)}  \end{tabular} }");
(output written to ../tables/EI_age2001TopX.tex)
. #delimit cr
delimiter now cr
. restore
. 
. /*
> gen moveNonETtoET
> reghdfe EI AgeXpost Age_num if Age_num>40, cluster(stateyear nameid) absorb(statenum nameid year) keepsingletons
> */
. 
. /*
> foreach t of num 1982/2001 2003/2017 {
>         cap binscatter EI Age_num if Age_num>40 & year==`t', discrete yscale(range(0 .55)) ylabel(0 .2 .4 .6 .8 1) ytitle("Fraction of
>  Age Group Living in State with Estate Tax") xtitle("Age") title("`t'")
>         graph export "s:/dan/Paper - Forbes/tables/binscatterEI_Age_`t'.png", replace as(png)
>         local input `input' binscatterEI_Age_`t'.png
> }
> */
. *shell convert -delay 150 -loop 0 `input' ../tables/ETvAGE.gif  //convert in linux command
. *shell rm -fR ../tables/*.png
> */
. 
. gen y = _n + 1981 if _n <= 2017 - 1981
(13,396 missing values generated)
. label variable y "year"
. gen b = .
(13,432 missing values generated)
. gen b_lb = .
(13,432 missing values generated)
. gen b_ub = .
(13,432 missing values generated)
. gen c = .
(13,432 missing values generated)
. gen c_lb = .
(13,432 missing values generated)
. gen c_ub = .
(13,432 missing values generated)
. *replace Age_num = Age_num - 40
. foreach y of num 1982/2001 2003/2017 {
  2.         *di "year = " `y'
.         qui ivreg2 EI Age_num_trunc if Age_num_trunc>40  & year==`y' /*& inlist(abbr,"CA")==0*/, cluster(stateyear)
  3.         replace c = _b[_cons] if _n==`y'-1981
  4.         replace c_lb = _b[_cons] - 1.65*_se[_cons] if _n==`y'-1981
  5.         replace c_ub = _b[_cons] + 1.65*_se[_cons] if _n==`y'-1981
  6.         replace b = _b[Age_num] if _n==`y'-1981
  7.         replace b_lb = _b[Age_num] - 1.65*_se[Age_num] if _n==`y'-1981
  8.         replace b_ub = _b[Age_num] + 1.65*_se[Age_num] if _n==`y'-1981
  9. }
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
. #delimit ;
delimiter now ;
. twoway (rcap c_lb c_ub y, lcolor(ltblue)) (scatter c y, mcolor(blue)) 
>         if y<=2017, yline(0, lcolor(black)) xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white)) plotregion(colo
> r(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Intercept for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. graph export ../tables/InterceptByyear.pdf, replace as(pdf);
(file ../tables/InterceptByyear.pdf written in PDF format)
. *gen pretrend = `pretrend' if y<2002;
. *gen posttrend = `posttrend' if y>2002;
. *pause;
. egen pretrend = mean(b) if y<2002;
(13,412 missing values generated)
. egen posttrend = mean(b) if y>2002;
(21 missing values generated)
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) /*(line pretrend posttrend y, lcolor(maroon maroon) lpattern(das
> h dash))*/
>         if y<=2017, yline(0, lcolor(black) lwidth(vthin)) xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white)) p
> lotregion(color(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. graph export ../tables/AgeGradientByyearV1.pdf, replace as(pdf);
(file ../tables/AgeGradientByyearV1.pdf written in PDF format)
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrend posttrend y, lcolor(maroon maroon) lpattern(dash 
> dash))
>         if y<=2017, /*yline(0, lcolor(black) lpattern(dot))*/ xline(`postyear'(.1)2004, lwidth(thick) lcolor(gs15)) xline(2001, lcolor
> (black)) graphregion(color(white)) plotregion(color(white)) legend(off) 
>         /*note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)*/
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearV2.pdf, replace as(pdf);
(file ../tables/AgeGradientByyearV2.pdf written in PDF format)
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrend posttrend y, lcolor(maroon maroon) lpattern(dash 
> dash))
>         if y<=2017, yline(0, lcolor(black) lwidth(vthin)) /*xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15))*/ xline(`postyear') graph
> region(color(white)) plotregion(color(white)) legend(off) 
>         /*note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)*/
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearV3.pdf, replace as(pdf);
(file ../tables/AgeGradientByyearV3.pdf written in PDF format)
. #delimit cr
delimiter now cr
. 
. foreach y of num 1982/2001 2003/2017 {
  2.         *di "year = " `y'
.         qui ivreg2 EI Age_num if Age_num>40 & year==`y' & inlist(abbr,"CA")==0, cluster(stateyear)
  3.         replace c = _b[_cons] if _n==`y'-1981
  4.         replace c_lb = _b[_cons] - 1.65*_se[_cons] if _n==`y'-1981
  5.         replace c_ub = _b[_cons] + 1.65*_se[_cons] if _n==`y'-1981
  6.         replace b = _b[Age_num] if _n==`y'-1981
  7.         replace b_lb = _b[Age_num] - 1.65*_se[Age_num] if _n==`y'-1981
  8.         replace b_ub = _b[Age_num] + 1.65*_se[Age_num] if _n==`y'-1981
  9. }
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
. gen pretrendNoCA = `pretrendNoCA' if y<=2001
(13,412 missing values generated)
. gen posttrendNoCA = `posttrendNoCA' if y>2002
(21 missing values generated)
. #delimit ;
delimiter now ;
. twoway (rcap b_lb b_ub y, lcolor(ltblue)) (scatter b y, mcolor(blue)) (line pretrendNoCA posttrendNoCA y, lcolor(maroon maroon) lpatte
> rn(dash dash))
>         if y<=2017, /*yline(0, lcolor(black) lwidth(vthin))*/ xline(`py1'(.1)2020, lwidth(thick) lcolor(gs15)) graphregion(color(white
> )) plotregion(color(white)) legend(off) 
>         note("Brackets indicate 90% confidence intervals (clustered on state-year). Regressions include all individuals", span)
>         note("over 39 years old.", span suffix)
>         ytitle(Age Gradient for Prob of Living in ET State)
>         ylabel(#8, nogrid)
>         xlabels(1985(5)2015)
>         ;
. *pause;
. graph export ../tables/AgeGradientByyearNoCA.pdf, replace as(pdf);
(file ../tables/AgeGradientByyearNoCA.pdf written in PDF format)
. #delimit cr
delimiter now cr
. 
. *replace Age_num = Age_num + 40
. */
. }  //end runINDIV IF code

. 
. 
. /// 4. ANALYSES OF MOVERS
> if "$runMOVERS" == "yes" {
. use ./stata_data/IndivAnalysisDataset.dta, clear
. 
. *drop if inlist(abbr,"IL","HI","DE")  //drop these states to see if their ET adoption in 2009 and 2010 affects results 
. *drop if inlist(abbr,"KS","OK")  //drop these states to see if their ET adoption in 2009 and 2010 affects results 
. *replace EI=1 if abbr=="NY"
. 
. levelsof abbr if year==2001 & EI==1, local(EI2001states)
. levelsof abbr if year==1992 & EI==1, local(EI1992states)
. sort nameid year
. keep nameid year abbr EI Age_num
. reshape wide abbr EI Age_num, i(nameid) j(year)
. gen one=1
. 
. preserve
. drop if abbr2001 == ""  //keep only individuals observed in 2001 (N=376)
. *drop if Age_num2001 >= 65
. 
. local startyr = 2001
. matrix A = J(9,2009-`startyr'-1 + 8,.)
. matrix colnames A=1993 1994 1995 1996 1997 1998 1999 2000 2003 2004 2005 2006 2007 2008 2009
. /*
> matrix rownames A="\%_of_2001" "2" "3" ///
> "4" "5" "6" "7" "8" "9"
> */
. 
. matrix rownames A="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. */
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1993/2000 {
  4.                 local j = `endyr'-1992
  5.                 qui sum one if abbr`endyr'~="" & Age_num2001 `ifc'
  6.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
  7.                 local num_E`startyr' = r(N)
  8.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
  9.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & strmatch(`EI`startyr'
> states',abbr`endyr')==0 & Age_num2001 `ifc'
.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix A[`m'+1,`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 13.                 local num_N`startyr' = r(N)
 14.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 15.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr')& strmatch(`EI`startyr'
> states',abbr`endyr')==1 & Age_num2001 `ifc'
.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix A[`m',`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row2' - `row1'
 19.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.                 *pause
.         }
 24.         foreach endyr of num 2003/2009 {
 25.                 local j = `endyr'-2002 + 8 
 26.                 qui sum one if abbr`endyr'~="" & Age_num2001 `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num2001 `ifc'
 28.                 local num_E`startyr' = r(N)
 29.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 30.         *       sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & strmatch(`EI`startyr'
> states',abbr`endyr')==0 & Age_num2001 `ifc'
. *               br name abbr`endyr' abbr`startyr' Age_num2001 if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=a
> bbr`endyr') & Age_num2001 `ifc'
. *               pause
.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix A[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num2001 `ifc'
 34.                 local num_N`startyr' = r(N)
 35.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1 & Age_num2001 `ifc'
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num2001 `ifc'
 36.         *       sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr')& strmatch(`EI`startyr'
> states',abbr`endyr')==1 & Age_num2001 `ifc'
.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix A[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix A[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list A
. matrix A1 = A[1..3,1..15]
. matrix A2 = A[4..6,1..15]
. matrix A3 = A[7..9,1..15]
. *pause
. outtable using "../tables/mover_table1a", mat(A1) replace center format(%3.2f)
. outtable using "../tables/mover_table2a", mat(A2) replace center  format(%3.2f)
. outtable using "../tables/mover_table3a", mat(A3) replace center  format(%3.2f)
. foreach i of num 1/3 {
  2.         clear
  3.         svmat A`i'
  4.         gen type = _n
  5.         reshape long A`i', i(type) j(year)
  6.         replace year = year+1992
  7.         replace year = year+2 if year>=2001
  8.         tempfile A`i'
  9.         save `A`i''
 10. }
. merge 1:1 type year using `A1', keep(3) nogen
. merge 1:1 type year using `A2', keep(3) nogen
. rename A1 all
. rename A2 over64
. rename A3 under65
. gen flow = "fromET" if type==1
. replace flow = "toET" if type==2
. replace flow = "Difference" if type==3
. drop type
. reshape wide all over64 under65, i(year) j(flow) string
. insobs 1
. replace year=2001 if year==.
. sort year
. twoway connected allfromET alltoET year if inrange(year,1993,2009), legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to
>  ET") rows(1) )  graphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 1
> 5 20 25 30 35 40 45, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmiss
> ing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_all1.pdf, replace as(pdf)
. *pause
. twoway connected allDifference year,  legend(  order(1 "Prob moved from ET to non-ET minus Prob moved from non-ET to ET") rows(1) )  g
> raphregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, lcol
> or(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993
> (2)2009)
. graph export ../tables/FlowsByYear_all2.pdf, replace as(pdf)
. *pause
. 
. twoway connected over64fromET over64toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  gra
> phregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45,
>  nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, 
> lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_over641.pdf, replace as(pdf)
. *pause
. twoway connected over64Difference year,  legend(  order(1 "Prob moved from ET to non-ET minus Prob moved from non-ET to ET") rows(1) )
>   graphregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, l
> color(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1
> 993(2)2009)
. graph export ../tables/FlowsByYear_over642.pdf, replace as(pdf)
. *pause
. 
. twoway connected under65fromET under65toET year,  legend(  order(1 "Prob moved ET to non-ET" 2 "Prob moved non-ET to ET") rows(1) )  g
> raphregion(color(white)) lpattern(solid dash) lwidth(thick .) lcolor(navy red) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 4
> 5, nogrid) xline(2001, lcolor(black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0
> , lcolor(gs12)) xlabel(1993(2)2009)
. graph export ../tables/FlowsByYear_under651.pdf, replace as(pdf)
. *pause
. twoway connected under65Difference year,  legend(  order(1 "% moved from ET to non-ET minus % moved from non-ET to ET") rows(1) )  gra
> phregion(color(white)) lwidth(thick) color(black) yscale(range(-2 44)) ylabels(0 5 10 15 20 25 30 35 40 45, nogrid) xline(2001, lcolor
> (black)) ytitle("% of Forbes 400 observed in both 2001 and t") xtitle(year(t))  /*cmissing(n n)*/ yline(0, lcolor(gs12)) xlabel(1993(2
> )2009)
. graph export ../tables/FlowsByYear_under652.pdf, replace as(pdf)
. *pause
. restore
. 
. 
. /// REPEAT EXERCISE WITH 1997 AS BASE YEAR
> preserve
. local startyr = 1997
. keep if abbr`startyr' ~= ""     //keep only individuals observed in startyr
. *pause
. 
. matrix B = J(9,2008-`startyr' -1,.)
. matrix colnames B=1998 1999 2000 2001   2003 2004 2005 2006 2007 2008
. 
. matrix rownames B="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. 
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1998/2001 {
  4.                 local j = `endyr'-`startyr' 
  5.                 sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
  6.                 sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
  7.                 *pause
.                 local num_E`startyr' = r(N)
  8.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc' & abbr`endyr'~="CA"
  9.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix B[`m',`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 13.                 local num_N`startyr' = r(N)
 14.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc' & abbr`endyr'~="CA"
 15.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix B[`m'+1,`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row1' - `row2'
 19.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.         *       pause
.         }
 24.         foreach endyr of num 2003/2008 {
 25.                 local j = `endyr'-`startyr' -1
 26.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 28.                 local num_E`startyr' = r(N)
 29.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc' & abbr`endyr'~="CA"
 30.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix B[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc' & abbr`endyr'~="CA"
 34.                 local num_N`startyr' = r(N)
 35.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc' & abbr`endyr'~="CA"
 36.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix B[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list B
. matrix B1 = B[1..3,1..10]
. matrix B2 = B[4..6,1..10]
. matrix B3 = B[7..9,1..10]
. *pause
. outtable using "../tables/mover_placebo_table1", mat(B1) replace center format(%3.2f)
. outtable using "../tables/mover_placebo_table2", mat(B2) replace center  format(%3.2f)
. outtable using "../tables/mover_placebo_table3", mat(B3) replace center  format(%3.2f)
. restore
. 
. 
. 
. /// REPEAT WITH 1991 AS BASE YEAR
> preserve
. local startyr = 1991
. drop if abbr`startyr' == ""     //keep only individuals observed in 2001 (N=376)
. 
. matrix B = J(9,2000-`startyr' + 6,.)
. matrix colnames B=1985 1986 1987 1988 1989 1990    1992 1993 1994 1995 1996 1997 1998 1999 2000
. 
. matrix rownames B="\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" ///
> "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference" "\%_from_ET_to_non-ET" "\%_from_non-ET_to_ET" "Difference"
. 
. local m = -2
. foreach ifc in ~=. >=65 <65  {
  2.   local m = `m'+3
  3.         foreach endyr of num 1985/1990 {
  4.                 local j = `endyr'-1984
  5.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
  6.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc'
  7.                 local num_E`startyr' = r(N)
  8.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc'
  9.                 local num_E`startyr'_N`endyr' = r(N)
 10.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 11.                 matrix B[`m'+1,`j'] = `row1'
 12.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc'
 13.                 local num_N`startyr' = r(N)
 14.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc'
 15.                 local num_N`startyr'_E`endyr' = r(N)
 16.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 17.                 matrix B[`m',`j'] = `row2'
 18. 
.                 local row3_`endyr' = `row2' - `row1'
 19.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 20.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 21.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 22.                 di "Diff in diff: " `row3_`endyr''
 23.         *       pause
.         }
 24.         foreach endyr of num 1992/2000 {
 25.                 local j = `endyr'-`startyr' + 6 
 26.                 qui sum one if abbr`endyr'~="" & Age_num`startyr' `ifc'
 27.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1  & Age_num`startyr' `ifc'
 28.                 local num_E`startyr' = r(N)
 29.                 qui sum one if abbr`endyr'~="" & EI`startyr'==1 & EI`endyr' == 0 & (abbr`startyr'~=abbr`endyr') & Age_num`startyr' 
> `ifc'
 30.                 local num_E`startyr'_N`endyr' = r(N)
 31.                 local row1 = (`num_E`startyr'_N`endyr''/`num_E`startyr'')*100
 32.                 matrix B[`m',`j'] = `row1'
 33.                 
.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0  & Age_num`startyr' `ifc'
 34.                 local num_N`startyr' = r(N)
 35.                 qui sum one if abbr`endyr'~="" & EI`startyr'==0 & EI`endyr' == 1  & (abbr`startyr'~=abbr`endyr') & Age_num`startyr'
>  `ifc'
 36.                 local num_N`startyr'_E`endyr' = r(N)
 37.                 local row2 = (`num_N`startyr'_E`endyr''/`num_N`startyr'')*100
 38.                 matrix B[`m'+1,`j'] = `row2'
 39. 
.                 local row3_`endyr' = `row1' - `row2'
 40.                 matrix B[`m'+2,`j'] = `row3_`endyr''
 41.                 
.                 di "% of `startyr' ET-state billionaires that lived in non-ET-state in `endyr' = " `row1'
 42.                 di "% of `startyr' non-ET-state billionaires that lived in ET-state in `endyr' = " `row2'
 43.                 di "Diff in diff: " `row3_`endyr''
 44.         *       pause
.         }
 45. }
. matrix list B
. matrix B1 = B[1..3,1..15]
. matrix B2 = B[4..6,1..15]
. matrix B3 = B[7..9,1..15]
. sleep 1000
. outtable using "../tables/mover_placebo_table1", mat(B1) replace center format(%3.2f)
. outtable using "../tables/mover_placebo_table2", mat(B2) replace center  format(%3.2f)
. outtable using "../tables/mover_placebo_table3", mat(B3) replace center  format(%3.2f)
. restore
. 
. 
. local p = 5
. foreach ifc in old~=. old==1 old==0 {
  2.         use ./stata_data/IndivAnalysisDataset.dta, clear
  3.         keep if `ifc'
  4.   tsset nameid year, yearly
  5.         gen move = 0
  6.         replace move = 1 if L`p'.statenum~=statenum & L`p'.statenum~=.
  7.         gen moveEItoNonEI = 0 if move==0
  8.         replace moveEItoNonEI = 1 if move==1 & L`p'.EI==1 & EI==0
  9.         gen moveNonEItoEI = 0 if move==0
 10.         replace moveNonEItoEI = 1 if move==1 & L`p'.EI==0 & EI==1
 11.         graph bar (mean) moveEItoNonEI moveNonEItoEI if year>=1982+`p' & year~=(2002+`p'), over(year, label(angle(vertical)))
 12.         if "`ifc'"=="old~=." graph export ../tables/MovesByYear_all.pdf, replace as(pdf)
 13.         if "`ifc'"=="old==1" graph export ../tables/MovesByYear_old.pdf, replace as(pdf)
 14.         if "`ifc'"=="old==0" graph export ../tables/MovesByYear_young.pdf, replace as(pdf)
 15.         gen post2001 = 0 if year<2001
 16.         replace post2001 = 1 if year>=2001
 17.         bysort post2001: sum moveEItoNonEI moveNonEItoEI
 18.         pause
 19. }
. 
. /*
> levelsof abbr if year==2001 & EI==1, local(temp)
> gen EI2001 = 0
> foreach s of local temp {
>                 di "`s'"
>                 replace EI2001 = 1 if abbr == "`s'"
> }
> levelsof abbr if year==2004 & EI==1, local(temp)
> gen EI2004 = 0
> foreach s of local temp {
>                 di "`s'"
>                 replace EI2004 = 1 if abbr == "`s'"
> }
> 
> gen move = .
> replace move = 1 if (statenum~=statenum[_n-1] & nameid==nameid[_n-1] & year-year[_n-1]<=2)
> replace move = 0 if (statenum==statenum[_n-1] & nameid==nameid[_n-1] & year-year[_n-1]<=2)
> gen moveEItoNonEI = 0 if move==1
> replace moveEItoNonEI = 1 if (move==1 & EI==0 & EI[_n-1]==1)
> gen moveNonEItoEI = 0 if move==1
> replace moveNonEItoEI = 1 if (move==1 & EI==1 & EI[_n-1]==0)
> gen movetoEI = 0
> replace movetoEI = 1 if move==1 & EI==1
> gen movetoNonEI = 0
> replace movetoNonEI = 1 if move==1 & EI==0
> sum move
> di "# of moves: " r(mean)*r(N)
> bysort post: sum move*
> *stop
> 
> egen moveever = max(move), by(nameid)
> sort nameid year
> *br nameid year abbr if moveever==1
> *pause
> gen movepost = .
> replace movepost = 1 if (statenum~=statenum[_n-1] & nameid==nameid[_n-1] & post)
> replace movepost = 0 if (statenum==statenum[_n-1] & nameid==nameid[_n-1] & post)
> egen moveeverpost = max(movepost), by(nameid)
> 
> bysort post: sum EI if move ==1
> bysort post: sum EI2001 if move==1 
> reg EI2001 i.post#i.old if move==1
> gen post2004 = (year>2004)
> reg EI2004 i.post2004#i.old if move==1
> reg EI i.post#i.old if move==1
> 
> replace moveNonEItoEI = 0 if moveNonEItoEI==.
> replace moveEItoNonEI = 0 if moveEItoNonEI==.
> 
> areg move LEI LEIxPost post, absorb(statenum)
> reg move LEI LEIxPost post
> areg movetoNonEI LEI LEIxPost post, absorb(statenum)
> reg movetoNonEI LEI LEIxPost post
> *pause
> areg movetoNonEI LEI LEIxPost post if move==1, absorb(statenum)
> reg movetoNonEI LEI LEIxPost post if move==1
> *pause
> areg movetoEI LEI LEIxPost post , absorb(statenum)
> reg movetoEI LEI LEIxPost post
> *pause
> areg movetoEI LEI LEIxPost post if move==1, absorb(statenum)
> reg movetoEI LEI LEIxPost post if move==1
> *pause 
> 
> reghdfe moveNonEItoEI post, absorb(year statenum nameid)
> reghdfe moveNonEItoEI post if move==1, absorb(year statenum nameid)
> stop
> 
> 
> sort nameid year
> local endyear = 2006
> sum EI if year==`endyear' & EI[_n - (`endyear'-2001)+1] == 1 & nameid[_n]==nameid[_n-(`endyear'-2001)+1] & year[_n-(`endyear'-2001)+1]
> ==2001
> local fractionA = 1 - r(mean)  // fraction in E state in 2001 that moved to N state by 2010
> sum EI if year==`endyear' & EI[_n - (`endyear'-2001)+1] == 0 & nameid[_n]==nameid[_n-(`endyear'-2001)+1] & year[_n-(`endyear'-2001)+1]
> ==2001
> local fractionB = r(mean)       // fraction in non-E state in 2001 that moved to E state by 2010
> sum EI if year==2001 & EI[_n - (`endyear'-2001)] == 1 & nameid[_n]==nameid[_n-(`endyear'-2001)] & year[_n-(`endyear'-2001)]==1996
> local fractionC = 1 - r(mean)  // fraction in E state in 1992 that moved to N state by 2001
> sum EI if year==2001 & EI[_n - (`endyear'-2001)] == 0 & nameid[_n]==nameid[_n-(`endyear'-2001)] & year[_n-(`endyear'-2001)]==1996
> local fractionD = r(mean)       // fraction in non-E state in 1992 that moved to E state by 2001
> local diff1 =  `fractionA' - `fractionC'
> local diff2 =  `fractionB' - `fractionD'
> di "diff1 =  `diff1'"
> di "diff2 =  `diff2'"
> di "diff1 - diff2 =  " `diff1' - `diff2'
> 
> 
> /// conditional on living in E state in 2001, what fraction of those in year t live in E state, for t from 1990 to 2017
> matrix A = J(50,3,.)
> foreach t of num 1990/2000 {
>         preserve
>         keep if inlist(year,`t',2001)
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n+1] == 1 & nameid==nameid[_n+1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n+1] == 0 & nameid==nameid[_n+1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n+1] & nameid==nameid[_n+1])
>         *br nameid year EI inEin2001 moved
>         *pause
>         keep if year==`t' & inEin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',1] = 1-r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> foreach t of num 2003/2017 {
>         preserve
>         keep if inlist(year,2001,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inEin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',1] = 1-r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> 
> /// do same above for N
> foreach t of num 1990/2000 {
>         preserve
>         keep if inlist(year,`t',2001)
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n+1] == 1 & nameid==nameid[_n+1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n+1] == 0 & nameid==nameid[_n+1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n+1] & nameid==nameid[_n+1])
>         *br nameid year EI inEin2001 moved
>         *pause
>         keep if year==`t' & inNin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',2] = r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> foreach t of num 2003/2017 {
>         preserve
>         keep if inlist(year,2001,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEin2001 = 0
>         replace inEin2001 =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNin2001 = 0
>         replace inNin2001 =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inNin2001==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1990+1
>         sum EI
>         matrix A[`row',2] = r(mean)
>         matrix A[`row',3] = `t'
> *       pause
>         restore
> }
> preserve
> clear
> svmat A, names(col)
> rename c1 movefromE
> rename c2 movefromN
> rename c3 year
> label var year "t"
> twoway scatter movefromE year, xline(2001, lcolor(gs8)) ytitle("Fraction in ET in 2001 and in Non-ET in Year t") note("Conditional on 
> moving.")
> pause
> twoway scatter movefromN year, xline(2001, lcolor(gs8)) ytitle("Fraction in non-ET in 2001 and in ET state in Year t") note("Condition
> al on moving.")
> pause
> restore
> 
> /// conditional on living in E state in 2001, what fraction live in E state in 20...then do same for each prior 5 yr gap and subsequen
> t versions
> matrix B = J(50,3,.)
> foreach t of num 1992/2001 2003/2011 2013/2017 {
>         preserve
>         keep if inlist(year,`t'-10,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2
>         tsset nameid year
>         gen inEinStart = 0
>         replace inEinStart =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNinStart = 0
>         replace inNinStart =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inEinStart==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1992+1
>         sum EI
>         matrix B[`row',1] = 1-r(mean)
>         matrix B[`row',3] = `t'
> *       pause
>         restore
> }
> 
> /// do same above for N
> foreach t of num 1992/2001 2003/2011 2013/2017 {
>         preserve
>         keep if inlist(year,`t'-10,`t')
>         egen count = count(year), by(nameid)
>         keep if count==2 & year~=.
>         sort nameid year
>         gen inEinStart = 0
>         replace inEinStart =1 if (EI[_n-1] == 1 & nameid==nameid[_n-1])
>         gen inNinStart = 0
>         replace inNinStart =1 if (EI[_n-1] == 0 & nameid==nameid[_n-1])
>   gen moved = 0
>         replace moved = 1 if (abbr~=abbr[_n-1] & nameid==nameid[_n-1])
>         *br nameid year EI inEin2001
>         *pause
>         keep if year==`t' & inNinStart==1 /*& moved==1*/
>   di as err "year is `t'"
>         local row = `t'-1992+1
>         sum EI
>         matrix B[`row',2] = r(mean)
>         *pause
>         restore
> }
> 
> preserve
> clear
> svmat B, names(col)
> rename c1 livedinE10yrsprior
> rename c2 livedinN10yrsprior
> rename c3 year
> label var livedinE10yrsprior "Lived in E state 10 yrs prior"
> label var livedinN10yrsprior "Lived in non-E state 10 yrs prior"
> twoway scatter livedinE10yrsprior year, ytitle("Fraction living in non-ET state")
> *pause
> twoway scatter livedinN10yrsprior year, ytitle("Fraction living in ET state")
> restore
> 
> preserve
> drop if year==2002 | year==2012
> sort nameid year
> gen condN = 0
> replace condN = 1 if (EI==0 & EI[_n-10]==1 & abbr~=abbr[_n-10])
> gen condE = 0
> replace condE = 1 if (EI==1 & EI[_n-10]==0 & abbr~=abbr[_n-10])
> reg condN post if year>=1992 & year<2010
> areg condN post if year>=1992 & year<2010, absorb(statenum)
> reg condE post if year>=1992 & year<2010
> areg condE post if year>=1992 & year<2010, absorb(statenum)
> restore
>         
> 
> areg moveNonEItoEI post  , absorb(statenum)
> reg moveNonEItoEI post  
> areg moveNonEItoEI post  if move==1, absorb(statenum)
> reg moveNonEItoEI post   if move==1  
> *pause
> 
> areg moveEItoNonEI post  , absorb(statenum)
> reg moveEItoNonEI post  
> areg moveEItoNonEI post if move==1 , absorb(statenum)
> reg moveEItoNonEI post  if move==1
> *pause 
> 
> *preserve
> collapse (sum) move*, by(year)
> replace movetoEI = -movetoEI
> label var movetoEI "Moves to Estate-Tax States"
> label var movetoNonE "Moves to Non-Estate-Tax States"
> label var moveNonEItoEI "Moves to ET from Non-ET States"
> label var moveEItoNonEI "Moves to Non-ET from ET States"
> twoway bar movetoEI movetoNonEI year, ylabels(-5 "5" 0 5 10 15) graphregion(color(white)) ytitle(Number of Moves)
> pause
> replace moveNonEItoEI = -moveNonEItoEI
> twoway bar moveNonEItoEI moveEItoNonEI year, ylabels(-2 "2" 0 2 4 6) graphregion(color(white)) ytitle(Number of Moves)
> pause
> restore
> */
. 
. }   //end runMOVERS section

. 
. 
. /// 5. COST-BENEFIT ANALYSIS (AND DECOMPOSITION)
> if "$runCB" == "yes" { 
. 
. matrix R1 = J(11,6,.)
. matrix colnames R1="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
. matrix rownames R1= "ET_States_(10)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(28)" "Average_CB_ratio" "Number_wit
> h_CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(38)"
. matrix R2 = R1
. matrix colnames R2="Baseline" "Alt_1" "Alt_2" "Alt_3" "Alt_4" "Alt_5" 
. matrix rownames R2="ET_States_(14)" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "Non-ET_States_(36)" "Average_CB_ratio" "Number_with
> _CB$\geq$1" "Average_CB_ratio" "Number_with_CB$\geq$1" "" "All_States_(50)"
. local col = 0
. 
. foreach scenario in baseline alt1 alt2 alt3 alt4 alt5 {
  2. 
. local col = `col'+1
  3. /// locals and scalars for baseline scenario:
> local t = 2017
  4. scalar eta = 0.328              //DiD table, column 7
  5. local tauE = 0.16
  6. scalar eta0 = 0.0016            //from Table 6
  7. *scalar delta = (0.00394+0.00257)/2  //estimated age gradient -- avg of estimates in columns 3 and 4 of Table 6
. scalar delta = 0.00394  //estimated age gradient -- column 3 of Table 6
  8. *scalar delta = 0.00257  //estimated age gradient -- column 3 of Table 6
. local LP = 89.783/82.585  //Male life exp of someone at 100th percentile income relative to 50th percentile income from Chetty et al (
> 2016 JAMA)
  9. local r = 0.02
 10. local g = 1
 11. local spouse = 0
 12. preserve
 13.         use ./stata_data/IndivAnalysisDataset.dta, clear
 14.         sum wealth if year==2017, detail
 15. restore
 16. local W = r(mean)*1000*(8.25/16)
 17. local Y = `W'*0.103  //0.103 is ratio of taxable income to taxable estate values according to IRS SOI (08es03lk.xls)
 18. 
. 
. /// set locals and scalars for each scenario
> if "`scenario'" == "alt1" {
 19.         local g = 1.070  //annual growth rate of real wealth in Fig 1
 20. }       
 21. if "`scenario'" == "alt2" {
 22.         local spouse = 10
 23. }       
 24. if "`scenario'" == "alt3" {
 25.         local r = 0.01
 26. }       
 27. if "`scenario'" == "alt4" {
 28.         local r = 0.03
 29. }       
 30. if "`scenario'" == "alt5" {
 31.         local Y = 159*(245.134/236.715)  //Saez-Zucman (2019) estimate of mean gross income for top 400 income taxpayers in 2014 (i
> n millions, adjusted to 2017 dollars)
 32. }       
 33. 
. di `W'
 34. di `Y'
 35. 
. 
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
 36. gen EInextyear = EI
 37. if `t' == `postyear' {
 38.         replace EInextyear = F.EI 
 39. }
 40. keep if year==`t'
 41. 
. replace wealth = wealth*1000 //convert to millions
 42. 
. local T = (23.7+`spouse')*(`LP')        //CDC + 5 for 65 year old times Chetty et al's (2016) longevity premium for wealthy
 43. gen cost = 0
 44. foreach i of num 1/`T' {
 45.         replace cost = cost + (1/(1+`r'))^(`i')*(`Y'*(`g'^`i'))*eta*(avg/100)*stock
 46. }
 47. gen benefit = (1/(1+`r'))^(`T')*(`W'*(`g'^`T'))*(1-eta)*`tauE'*stock
 48. gen CBratio = cost/benefit
 49. gen net_revenues = (benefit - cost)
 50. sort CBratio
 51. foreach x of num 0 1 {
 52.         #delimit ;
delimiter now ;
.         tabout State using "../tables/CBratiosEI`x'_`t'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0 2 2 0)
>                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benef
> it&from Adopting (mil)\\) total(Average);
 53.         #delimit cr
delimiter now cr
. }
 54. *list state CBratio
. sum CBratio
 55. *pause
. 
. rename abbr state
 56. maptile CBratio, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
 57. graph export ../tables/CBratio_map_`t'.pdf, replace as(pdf)
 58. *pause
. *** Note: cost is upper bound b/c:
. ***             1. forbes 400 likely to have taxable income below that of top 400 income-tax payers (due to shelters)
. ***     2. we're assuming all of Y is taxed at state's avg of top MTR on wages/salaries and LTCG; true effective rate may be lower
. ***     3. we're assuming lost billionaires live another 29 years. median age of EI-sensitive billionaires is older, like 74, and so T
>  is more like 24.
. *** But could be lower bound b/c:
. ***     1. ignores property and sales tax revenues from lost billionaires
. 
. 
. 
. /// NOW ALLOW FOR AGE HETEROGENEITY
> use ./stata_data/StateyearAgeAnalysisDataset.dta, clear
 59. egen stateage = group(abbr Age_num)
 60. tsset stateage year, yearly
 61. gen EInextyear = EI
 62. if `t' == 2001 {
 63.         replace EInextyear = F.EI 
 64. }
 65. keep if year==`t'
 66. 
. qui {
 67. /// Set T by age according to IRS Pub 590-B, Appendix B, Tables I (age<30) and II (30<=age<70), assuming spouse 10 years younger, a
> nd III for age>=70 (which appears to assume spouse is 10 years younger) :
> gen T = 82.04 if Age_num==0
 68. replace T = 81.6 + 10 if Age_num==1
 69. replace T = 75.8 + 10 if inrange(Age_num,5,9)
 70. replace T = 70.8 + 10 if inrange(Age_num,10,14)
 71. replace T = 66 + 10 if inrange(Age_num,15,19)
 72. replace T = 61.1 + 10 if inrange(Age_num,20,24)
 73. replace T = 56.2 + 10 if inrange(Age_num,25,29)
 74. replace T = 64.3 if inrange(Age_num,30,34)
 75. replace T = 59.4 if inrange(Age_num,35,39)
 76. replace T = 54.4 if inrange(Age_num,40,44)
 77. replace T = 49.5 if inrange(Age_num,45,49)
 78. replace T = 44.6 if inrange(Age_num,50,54)
 79. replace T = 39.7 if inrange(Age_num,55,59)
 80. replace T = 34.9 if inrange(Age_num,60,64)
 81. replace T = 30.2 if inrange(Age_num,65,69)
 82. 
. replace T = 27.4 if Age_num==70
 83. replace T = 26.5 if Age_num==71
 84. replace T = 25.6 if Age_num==72
 85. replace T = 24.7 if Age_num==73
 86. replace T = 23.8 if Age_num==74
 87. replace T = 22.9 if Age_num==75
 88. replace T = 22.0 if Age_num==76
 89. replace T = 21.2 if Age_num==77
 90. replace T = 20.3 if Age_num==78
 91. replace T = 19.5 if Age_num==79
 92. replace T = 18.7 if Age_num==80
 93. replace T = 17.9 if Age_num==81
 94. replace T = 17.1 if Age_num==82
 95. replace T = 16.3 if Age_num==83
 96. replace T = 15.5 if Age_num==84
 97. replace T = 14.8 if Age_num==85
 98. replace T = 14.1 if Age_num==86
 99. replace T = 13.4 if Age_num==87
100. replace T = 12.7 if Age_num==88
101. replace T = 12.0 if Age_num==89
102. replace T = 11.4 if Age_num==90
103. replace T = 10.8 if Age_num==91
104. replace T = 10.2 if Age_num==92
105. replace T = 9.6 if Age_num==93
106. replace T = 9.1 if Age_num==94
107. replace T = 8.6 if Age_num==95
108. replace T = 8.1 if Age_num==96
109. replace T = 7.6 if Age_num==97
110. replace T = 7.1 if Age_num==98
111. replace T = 6.7 if Age_num==99
112. replace T = 6.3 if Age_num==100
113. replace T = 5.9 if Age_num==101
114. replace T = 5.5 if Age_num==102
115. replace T = 5.2 if Age_num==103
116. replace T = 4.9 if Age_num==104
117. replace T = 3.5 if Age_num>105
118. }
119. 
. /// Adjust T by Chetty et al longevity premium for wealthy
> replace T = T*`LP' + `spouse'
120. 
. replace wealth = wealth*1000   //convert to millions
121. 
. gen cost = 0
122. *gen benefit = 0
. levelsof Age_num, local(agelevels)
123. foreach a of local agelevels {
124.         preserve
125.         keep if Age_num == `a'
126.         qui sum T
127.         local T = int(round(r(mean)))
128.         *sum wealth, detail
.         *scalar W_a = r(p50)*`s'
.         foreach i of num 1/`T' {
129.                 qui replace cost = cost + (1/(1+`r'))^(`i')*(`Y'*(`g'^`i'))*(eta0 + delta*`a')*(avg/100)*stock
130. *               qui replace cost = cost + (1/(1+`r'))^(`i')*W_a*(`Y'/`W')*(eta0 + delta*`a')*(avg/100)*stock
.         }
131. *       qui replace benefit = (1/(1+`r'))^(`T')*(`W')*`tauE'*(1-(eta0 + delta*`a'))*stock
. *       sum benefit
. *       qui replace benefit = (1/(1+`r'))^(`T')*(W_a)*`tauE'*(1-(eta0 + delta*`a'))*stock
.         qui save age`a'.dta, replace
132.         restore
133. }
134. clear
135. foreach a of local agelevels {
136.         *di "Age = " `a'
.         if `a' ~= 0 append using age`a'.dta 
137. }
138. 
. gen benefit = (1/(1+`r'))^(T)*(`W'*(`g'^T))*(1-(eta0 + delta*Age_num))*`tauE'*stock
139. *gen benefit = (1/(1+`r'))^(T)*(wealth*`s')*(1-eta)*`tauE'*stock
. *gen benefit = (1/(1+`r'))^(T)*(wealth*`s')*(1-(eta0 + delta*Age_num))*`tauE'*stock
. *estpost sum cost benefit EI avg stock wealth, detail
. 
. gcollapse (sum) cost benefit stock wealth (mean) EInextyear avg, by(State abbr)
140. gen CBratio = cost/benefit
141. *list State CBratio if EI==1
. *list State CBratio if EI==0
. sum CBratio
142. matrix R1[10,`col'] = r(mean)
143. sum CBratio if CBratio>=1
144. matrix R1[11,`col'] = r(N)
145. sum CBratio if EInextyear==1
146. matrix R1[2,`col'] = r(mean)
147. sum CBratio if EInextyear==1 & CBratio>=1
148. matrix R1[3,`col'] = r(N)
149. sum CBratio if EInextyear==0
150. matrix R1[6,`col'] = r(mean)
151. sum CBratio if EInextyear==0 & CBratio>=1
152. matrix R1[7,`col'] = r(N)
153. outtable using "../tables/CBrobustnessBillionaire", mat(R1) replace center  format(%3.2f)
154. 
. rename abbr state
155. *maptile CBratio, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
. *graph export ../tables/CBratioAge_map_`t'`scenario'.pdf, replace as(pdf)
. 
. gen net_revenues = (benefit - cost)
156. *pause
. foreach x of num 0 1 {
157.         #delimit ;
delimiter now ;
.         tabout State using "../tables/CBratiosAgeEI`x'_`t'`scenario'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum 
>                 cells(mean stock mean wealth mean avg mean CBratio mean net_revenues) f(0 0c 2 2 0c) 
>                 oneway h3( &Forbes  &Forbes &Personal Income & &EPV Net Revenues\\State& Population& Wealth (mil)& Tax Rate&Cost/Benef
> it&from Adopting (mil)\\) total(Average);
158.         #delimit cr
delimiter now cr
. }
159. *tabout State using "../tables/CBratiosEI1.tex" if EI2005==1, style(tex) h2(nil) bt replace sum cells(sum avg sum stock sum wealth 
> sum CBratio sum net_revenues) f(2 0 2m 2 3m) oneway clab(PIT_Rate Forbes_Population Forbes_Wealth Cost/Benefit Net-Revenues) ptotal(no
> ne)
. 
. eststo clear
160. 
. 
. /// COMPUTE CB RATIOS FOR ALL POTENTIAL ESTATE TAX PAYERS
> import excel using ./raw_data/15es02st.xls, clear cellrange(A9:I59)
161. keep A C
162. rename A statename
163. rename C amount
164. gen year = 2015
165. tempfile soi15
166. save `soi15'
167. import excel using ./raw_data/16es02st.xls, clear cellrange(A9:I59)
168. keep A C
169. rename A statename
170. rename C amount
171. gen year = 2016
172. tempfile soi16
173. save `soi16'
174. import excel using ./raw_data/17es02st.xls, clear cellrange(A9:I59)
175. keep A B C
176. rename A statename
177. rename B number
178. rename C amount
179. destring amount, replace force
180. destring number, replace force
181. gen year = 2017
182. 
. if "`scenario'"=="baseline" {
183.         preserve
184.         import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
185.         rename State statename
186.         rename abbr state
187.         keep state statename
188.         tempfile mapping
189.         save `mapping'
190.         restore
191.         merge 1:1 statename using `mapping', nogen keep(1 3) 
192.         maptile number, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 50 100 200 500 1000) twopt(legend(lab(2 "0") lab(3 "1 - 
> 50") ))
193.         graph export ../tables/AllEstateTaxpayersMap2017.pdf, replace as(pdf)
194.         *pause
.         drop number state
195. }
196. append using `soi15'
197. append using `soi16'
198. collapse (mean) amount, by(statename)
199. tempfile soi
200. save `soi'
201. 
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
202. gen EInextyear = EI
203. keep if year==2017
204. 
. merge 1:1 statename using `soi', keep(1 3) nogen
205. 
. scalar natlW_U70 = 30529954/1000
206. scalar natlW_7079 = 33297568/1000
207. scalar natlW_O79 = 53305929/1000
208. scalar natlW = natlW_U70 + natlW_7079 + natlW_O79 
209. *sum Age_num if Age_num < 70, detail
. *sum Age_num if inrange(Age_num,70,79), detail
. *sum Age_num if Age_num > 79, detail
. /// set prob of death equal to mortality rates from SSA for mean age in forbes for each group, taking 75/25 weighted avg of male and f
> emale rates
> scalar prob_death_U70 = .75*0.013302 + .25*0.007893     //62yr old 
210. scalar prob_death_7079 = .75*0.030070 + .25*0.020705    //73yr old 
211. scalar prob_death_O79 = .75*0.107390 + .25*0.082465             //86yr old 
212. /// adjust using mortality differential for top 1% from Fig 3 of Saez-Zucman (2019)
> scalar prob_death_U70 =  prob_death_U70*.3
213. scalar prob_death_7079 = prob_death_7079*.5
214. scalar prob_death_O79 = prob_death_O79*.7  //see fig 3 of SZ 2019
215. 
. scalar natl_YW_ratio_U70 = 0.103                //see 08es03lk.xls
216. scalar natl_YW_ratio_7079 = 0.071
217. scalar natl_YW_ratio_O79 = 0.058
218. 
. *local s = .4  //this is the ratio of TAXED estate wealth to FORBES estimate of estate wealth (based on Raub et al (2010) study and SO
> I data on non-spousal deductions)
. ///merge in estate values from IRS SOI for 2015-2017; average by state
> gen W_U70 = (amount/1000)*(natlW_U70/natlW)/prob_death_U70 
219. gen W_7079 = (amount/1000)*(natlW_7079/natlW)/prob_death_7079 
220. gen W_O79 = (amount/1000)*(natlW_O79/natlW)/prob_death_O79
221. gen Y_U70 = W_U70*(natl_YW_ratio_U70) 
222. gen Y_7079 = W_7079*(natl_YW_ratio_7079) 
223. gen Y_O79 = W_O79*(natl_YW_ratio_O79)
224.  
. scalar tauE = 0.16*(.25/.40)  // .25 is federal estate ATR, .4 is federal statutory top MTR, so this accounts for progressivity
225. 
. local T_U70 = 31.6*`LP' + `spouse'
226. local T_7079 = 22.9*`LP'+ `spouse'
227. local T_O79 = 14.8*`LP'+ `spouse'
228. 
. local etaBaseU70 = eta0 + delta*62
229. local etaAltU70 = `etaBaseU70'/2
230. local etaBase7079 = eta0 + delta*73
231. local etaAlt7079 = `etaBase7079'/2
232. local etaBaseO79 = eta0 + delta*86
233. local etaAltO79 = `etaBaseO79'/2
234. 
. rename abbr state
235. foreach j in Base Alt {
236.         gen cost_`j'U70 = 0
237.         foreach i of num 1/`T_U70' {
238.                 replace cost_`j'U70 = cost_`j'U70 + (1/(1+`r'))^(`i')*(Y_U70*(`g'^`i'))*`eta`j'U70'*(avg/100)
239.         }
240.         gen benefit_`j'U70 = (1/(1+`r'))^(`T_U70')*(W_U70*(`g'^`T_U70'))*(1-`eta`j'U70')*tauE
241.         gen cost_`j'7079 = 0
242.         foreach i of num 1/`T_7079' {
243.                 replace cost_`j'7079 = cost_`j'7079 + (1/(1+`r'))^(`i')*(Y_7079*(`g'^`i'))*`eta`j'7079'*(avg/100)
244.         }
245.         gen benefit_`j'7079 = (1/(1+`r'))^(`T_7079')*(W_7079*(`g'^`T_7079'))*(1-`eta`j'7079')*tauE
246.         gen cost_`j'O79 = 0
247.         foreach i of num 1/`T_O79' {
248.                 replace cost_`j'O79 = cost_`j'O79 + (1/(1+`r'))^(`i')*(Y_O79*(`g'^`i'))*`eta`j'O79'*(avg/100)
249.         }
250.         gen benefit_`j'O79 = (1/(1+`r'))^(`T_O79')*(W_O79*(`g'^`T_O79'))*(1-`eta`j'O79')*tauE
251. 
.         gen CBratio`j' = (cost_`j'U70+cost_`j'7079+cost_`j'O79)/(benefit_`j'U70+benefit_`j'7079+benefit_`j'O79)
252.         gen net_revenues`j' = benefit_`j'U70+benefit_`j'7079+benefit_`j'O79 - (cost_`j'U70+cost_`j'7079+cost_`j'O79)
253. }
254. 
. sort CBratioBase
255. foreach x of num 0 1 {
256.                 #delimit ;
delimiter now ;
.                 tabout State using "../tables/CBratiosALL`x'_2017`scenario'.tex" if EInextyear==`x', style(tex) h2(nil) bt replace sum
>  
>                         cells(mean avg mean CBratioBase mean net_revenuesBase mean CBratioAlt mean net_revenuesAlt) f(2 2 0c 2 0c)
>                         oneway h3(& & \multicolumn{2}{c}{\underline{Baseline Elasticity}}& \multicolumn{2}{c}{\underline{Lower Elastic
> ity}}\\ &Personal Income & &EPV Net Revenues& &EPV Net Revenues\\State& Tax Rate&Cost/Benefit&from Adopting (mil)&Cost/Benefit&from Ad
> opting (mil)\\) total(Average);
257.                 #delimit cr
delimiter now cr
. }
258. maptile CBratioBase, geo(state) geoid(state) ndfcolor(gray) fcolor(RdBu) cutvalues(0 .75 1 1.25 1.5) twopt(legend(lab(2 "0") ) )
259. graph export ../tables/CBratioAll_map_2017_Base`scenario'.pdf, replace as(pdf)
260. 
. *list state CBratio
. sum CBratioBase CBratioAlt
261. 
. sum CBratioBase
262. matrix R2[10,`col'] = r(mean)
263. sum CBratioBase if CBratioBase>=1
264. matrix R2[11,`col'] = r(N)
265. sum CBratioBase if EInextyear==1
266. matrix R2[2,`col'] = r(mean)
267. sum CBratioBase if EInextyear==1 & CBratioBase>=1
268. matrix R2[3,`col'] = r(N)
269. sum CBratioBase if EInextyear==0
270. matrix R2[6,`col'] = r(mean)
271. sum CBratioBase if EInextyear==0 & CBratioBase>=1
272. matrix R2[7,`col'] = r(N)
273. 
. outtable using "../tables/CBrobustnessBroad", mat(R2) replace center format(%3.2f)
274. 
. *pause
. drop cost_* benefit_* CBratio* net_revenues*
275. }  //end scenario loop
. 
. 
. /// CREATE DECOMPOSITION TABLE
> use ./stata_data/StateyearAnalysisDataset.dta, clear
. keep if year>=`postyear'
. keep stock wealth EI EI_Tax year abbr
. reshape wide stock wealth EI EI_Tax, i(abbr) j(year)
. 
. local eta = 0.328
. local etaW = 0.397
. local T = 23.7*(`LP')
. label values stock*
. keep if EI2001==1
. 
. gen TaxRev`postyear' = 0
. replace TaxRev`postyear' = wealth`postyear'*.0825
. 
. foreach var in stock wealth TaxRev {
  2.         gen `var'_deltaMobility = 0
  3. }
. replace stock_deltaMobility = -`eta'*stock`postyear' if EI`postyear'==1
. replace wealth_deltaMobility = -`etaW'*wealth`postyear' if EI`postyear'==1
. replace TaxRev_deltaMobility = -`etaW'*TaxRev`postyear' if EI`postyear'==1
. 
. *gen TaxRev_delta04_17 = wealth_delta04_17*`s'*0.16
. *gen EIshryears = rowsum(EI20*)/(2017-`postyear'+1)  //will be 0 if state never had EI, 1 if state always had EI, in between if later 
> adopted or repealed
. 
. gen repealed = (EI`postyear'==1 & EI2017==0)
. gen stock_repealed = -stock`postyear'*repealed*(1 - `eta')
. gen wealth_repealed = -wealth`postyear'*repealed*(1 - `etaW')
. gen TaxRev_repealed = -TaxRev`postyear'*repealed*(1 - `etaW')
. gen adopted = (EI`postyear'==0 & EI2017==1)
. foreach var in stock  {
  2.         gen `var'_adopted = `var'`postyear'*adopted*(1 - `eta')
  3. }
. foreach var in wealth TaxRev {
  2.         gen `var'_adopted = `var'`postyear'*adopted*(1 - `etaW')
  3. }
. 
. *foreach var in stock wealth TaxRev {
. *       gen `var'_lost = 0
. *       replace `var'_lost = `var'_deltaMobility if EIshryears = 1
. *       replace `var'_lost = `var'_lost + (1 - `eta')*`var'_dropped 
. *}
. 
. collapse (sum) stock`postyear' wealth`postyear' TaxRev`postyear' *_deltaMobility *_repealed *_adopted repealed adopted EI_Tax*
. foreach var in stock wealth TaxRev {
  2.         gen `var'_delta = `var'_deltaMobility + `var'_repealed + `var'_adopted
  3. }
. gen EI_Tax_delta = EI_Tax2017 - EI_Tax`postyear'
. *list EI_Tax_delta
. *list repealed
. *list adopted
. /// VALUES FOR DECOMP TABLE (7):
> list stock`postyear' stock_deltaMobility  
. list wealth`postyear' wealth_deltaMobility
. list TaxRev`postyear' TaxRev_deltaMobility
. 
. } //end runCB IF code

. 
. 
. /// 6. TABLE OF LEVELS AND CHANGES BY STATE
> if "$runCOUNTS_BY_STATE" == "yes" {
. 
. use ./stata_data/StateyearAnalysisDataset.dta, clear
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth EI year State
. reshape wide stock pbwealth EI, i(State) j(year)
. gen stock_delta82_17 = stock2017 - stock1982
. gen stock_delta82_00 = stock2000 - stock1982
. gen stock_delta00_17 = stock2017 - stock2000
. 
. #delimit ;
delimiter now ;
. *tabout State using "../tables/Summary_Stats_3.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway clab(Forbes_Population_in_2017 Mean_Wealth_in_2017_(mil$) 1982-2017_Change_Forbes_Population) total(Average);
. tabout State using "../tables/Summary_Stats_3.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17 mean stock_delta82_00 mean stock_delta00_17) f(0 0 0 0 0)
>  
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change & 1982-2000 Change & 2000-2017 Change\\State & in 2017
> & in 2017 (mil) & in Forbes Population & in Forbes Population & in Forbes Population\\) total(Average);
. #delimit cr
delimiter now cr
. 
. /// MAPS OF FORBES 400 LOCATION FOR FIGURE 2
> preserve
. import excel using ./raw_data/state_fips_crosswalk.xlsx, clear firstrow
. rename abbr state
. keep state State
. tempfile mapping
. save `mapping'
. restore
. merge 1:1 State using `mapping', nogen keep(1 3)
. maptile stock1982, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5")))
. graph export ../tables/Forbes400Map1982.pdf, replace as(pdf)
. maptile stock2017, geo(state) geoid(state) ndfcolor(gray) cutvalues(0 2 5 10 30 70)  twopt(legend(lab(2 "0") lab(3 "1-5") ))
. graph export ../tables/Forbes400Map2017.pdf, replace as(pdf)
. *pause
. 
. /// TABLE LISTING STATES WITH ET IN SELECTED YEARS
> egen EIrowtotal = rowtotal(/*EI1995*/ EI2001 EI2005 EI2010 EI2017)
. preserve
. keep if EIrowtotal==4
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableALWAYS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if EI2001 == 0 & (EI2005==1 | EI2010==1 | EI2017==1)
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableADOPTERS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if EI2001 == 1 & (EI2005==0 | EI2010==0 | EI2017==0)
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtableREPEALERS.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0) 
>                 oneway h3( & 2001 & 2005 & 2010 & 2017\\\hline\hline) ptotal(none);
. #delimit cr
delimiter now cr
. restore
. preserve
. keep if -EIrowtotal<0 | EI1995==1
. #delimit ;
delimiter now ;
. tabout State using "../tables/ETtable.tex", style(tex) h2(nil) bt replace sum 
>                 cells(sum EI1995 sum EI2001 sum EI2005 sum EI2010 sum EI2017) f(0 0 0 0 0) 
>                 oneway h3( & 1995 & 2001 & 2005 & 2010 & 2017\\\hline\hline) total(Number_of_ET_States);
. #delimit cr
delimiter now cr
. restore
. 
. 
. /// TABLE OF LEVELS AND CHANGES BY CITY
> use ./stata_data/IndivAnalysisDataset.dta, clear
. collapse (count) stock=nameid (sum) NetWorthMill, by(CAname year)
. gen pbwealth = NetWorthMill/stock
. keep stock pbwealth year CAname
. reshape wide  stock pbwealth, i(CAname) j(year)
. replace stock1982=0 if stock1982==.
. gen stock_delta82_17 = stock2017 - stock1982
. 
. gsort -stock2017
. keep if _n <= 40
. replace CAname = subinstr(CAname," Combined Statistical Area","",.)
. replace CAname = subinstr(CAname," Metropolitan Statistical Area","",.)
. label variable CAname "City Name"
. #delimit ;
delimiter now ;
. *tabout CAname using "../tables/Summary_Stats_4.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway clab(Forbes_Population_in_2017 Mean_Wealth_in_2017_(mil$) 1982-2017_Change_Forbes_Population) total(Average);
. tabout CAname using "../tables/Summary_Stats_4.tex", style(tex) h2(nil) bt replace sum 
>                 cells(mean stock2017 mean pbwealth2017 mean stock_delta82_17) f(0 0 0) 
>                 oneway h3( & Forbes Population & Mean Wealth & 1982-2017 Change\\City & in 2017& in 2017 (mil) & in Forbes Population\
> \) total(Average);
. #delimit cr
delimiter now cr
. *tabout CAname using "../tables/TopCities.tex", style(tex) h2(nil) bt replace sum cells(mean stock mean pbwealth) f(1 1) oneway clab(F
> orbes_400_Population Mean_Forbes_400_Wealth)
. 
. }

. 
. 
. capture log close
